2024-04-23 14:49:48,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-23 14:49:48,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-23 14:49:48,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-23 14:49:48,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-23 14:50:38,016:INFO:PyCaret ClassificationExperiment
2024-04-23 14:50:38,016:INFO:Logging name: clf-default-name
2024-04-23 14:50:38,016:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-23 14:50:38,016:INFO:version 3.3.1
2024-04-23 14:50:38,016:INFO:Initializing setup()
2024-04-23 14:50:38,016:INFO:self.USI: f65b
2024-04-23 14:50:38,016:INFO:self._variable_keys: {'n_jobs_param', 'y_train', 'y', 'X_test', 'X', 'fold_groups_param', 'logging_param', 'y_test', 'USI', 'fold_generator', 'memory', 'idx', 'fold_shuffle_param', 'exp_id', 'is_multiclass', 'data', 'target_param', 'exp_name_log', '_ml_usecase', 'X_train', 'pipeline', '_available_plots', 'gpu_n_jobs_param', 'fix_imbalance', 'html_param', 'seed', 'log_plots_param', 'gpu_param'}
2024-04-23 14:50:38,016:INFO:Checking environment
2024-04-23 14:50:38,016:INFO:python_version: 3.11.9
2024-04-23 14:50:38,016:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-04-23 14:50:38,016:INFO:machine: AMD64
2024-04-23 14:50:38,016:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-23 14:50:38,020:INFO:Memory: svmem(total=33854128128, available=18302586880, percent=45.9, used=15551541248, free=18302586880)
2024-04-23 14:50:38,020:INFO:Physical Core: 14
2024-04-23 14:50:38,020:INFO:Logical Core: 20
2024-04-23 14:50:38,020:INFO:Checking libraries
2024-04-23 14:50:38,020:INFO:System:
2024-04-23 14:50:38,020:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-04-23 14:50:38,020:INFO:executable: c:\Users\Migrando1\SofwarePackages\python.exe
2024-04-23 14:50:38,020:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-23 14:50:38,020:INFO:PyCaret required dependencies:
2024-04-23 14:50:38,039:INFO:                 pip: 24.0
2024-04-23 14:50:38,039:INFO:          setuptools: 65.5.0
2024-04-23 14:50:38,039:INFO:             pycaret: 3.3.1
2024-04-23 14:50:38,039:INFO:             IPython: 8.23.0
2024-04-23 14:50:38,039:INFO:          ipywidgets: 8.1.2
2024-04-23 14:50:38,039:INFO:                tqdm: 4.66.2
2024-04-23 14:50:38,039:INFO:               numpy: 1.26.4
2024-04-23 14:50:38,039:INFO:              pandas: 2.1.4
2024-04-23 14:50:38,039:INFO:              jinja2: 3.1.3
2024-04-23 14:50:38,039:INFO:               scipy: 1.11.4
2024-04-23 14:50:38,039:INFO:              joblib: 1.3.2
2024-04-23 14:50:38,039:INFO:             sklearn: 1.4.2
2024-04-23 14:50:38,040:INFO:                pyod: 1.1.3
2024-04-23 14:50:38,040:INFO:            imblearn: 0.12.2
2024-04-23 14:50:38,040:INFO:   category_encoders: 2.6.3
2024-04-23 14:50:38,040:INFO:            lightgbm: 4.3.0
2024-04-23 14:50:38,040:INFO:               numba: 0.59.1
2024-04-23 14:50:38,040:INFO:            requests: 2.31.0
2024-04-23 14:50:38,040:INFO:          matplotlib: 3.7.5
2024-04-23 14:50:38,040:INFO:          scikitplot: 0.3.7
2024-04-23 14:50:38,040:INFO:         yellowbrick: 1.5
2024-04-23 14:50:38,040:INFO:              plotly: 5.21.0
2024-04-23 14:50:38,040:INFO:    plotly-resampler: Not installed
2024-04-23 14:50:38,040:INFO:             kaleido: 0.2.1
2024-04-23 14:50:38,040:INFO:           schemdraw: 0.15
2024-04-23 14:50:38,040:INFO:         statsmodels: 0.14.2
2024-04-23 14:50:38,040:INFO:              sktime: 0.26.0
2024-04-23 14:50:38,040:INFO:               tbats: 1.1.3
2024-04-23 14:50:38,040:INFO:            pmdarima: 2.0.4
2024-04-23 14:50:38,040:INFO:              psutil: 5.9.8
2024-04-23 14:50:38,040:INFO:          markupsafe: 2.1.5
2024-04-23 14:50:38,040:INFO:             pickle5: Not installed
2024-04-23 14:50:38,040:INFO:         cloudpickle: 3.0.0
2024-04-23 14:50:38,040:INFO:         deprecation: 2.1.0
2024-04-23 14:50:38,040:INFO:              xxhash: 3.4.1
2024-04-23 14:50:38,040:INFO:           wurlitzer: Not installed
2024-04-23 14:50:38,040:INFO:PyCaret optional dependencies:
2024-04-23 14:50:38,047:INFO:                shap: Not installed
2024-04-23 14:50:38,047:INFO:           interpret: Not installed
2024-04-23 14:50:38,047:INFO:                umap: Not installed
2024-04-23 14:50:38,047:INFO:     ydata_profiling: Not installed
2024-04-23 14:50:38,047:INFO:  explainerdashboard: Not installed
2024-04-23 14:50:38,047:INFO:             autoviz: Not installed
2024-04-23 14:50:38,047:INFO:           fairlearn: Not installed
2024-04-23 14:50:38,047:INFO:          deepchecks: Not installed
2024-04-23 14:50:38,047:INFO:             xgboost: Not installed
2024-04-23 14:50:38,047:INFO:            catboost: Not installed
2024-04-23 14:50:38,047:INFO:              kmodes: Not installed
2024-04-23 14:50:38,047:INFO:             mlxtend: Not installed
2024-04-23 14:50:38,047:INFO:       statsforecast: Not installed
2024-04-23 14:50:38,047:INFO:        tune_sklearn: Not installed
2024-04-23 14:50:38,047:INFO:                 ray: Not installed
2024-04-23 14:50:38,047:INFO:            hyperopt: Not installed
2024-04-23 14:50:38,047:INFO:              optuna: Not installed
2024-04-23 14:50:38,047:INFO:               skopt: Not installed
2024-04-23 14:50:38,047:INFO:              mlflow: Not installed
2024-04-23 14:50:38,047:INFO:              gradio: Not installed
2024-04-23 14:50:38,047:INFO:             fastapi: Not installed
2024-04-23 14:50:38,047:INFO:             uvicorn: Not installed
2024-04-23 14:50:38,047:INFO:              m2cgen: Not installed
2024-04-23 14:50:38,047:INFO:           evidently: Not installed
2024-04-23 14:50:38,047:INFO:               fugue: Not installed
2024-04-23 14:50:38,047:INFO:           streamlit: Not installed
2024-04-23 14:50:38,047:INFO:             prophet: Not installed
2024-04-23 14:50:38,048:INFO:None
2024-04-23 14:50:38,048:INFO:Set up data.
2024-04-23 14:50:38,122:INFO:Set up folding strategy.
2024-04-23 14:50:38,122:INFO:Set up train/test split.
2024-04-23 14:50:38,142:INFO:Set up index.
2024-04-23 14:50:38,144:INFO:Assigning column types.
2024-04-23 14:50:38,146:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-23 14:50:38,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-23 14:50:38,169:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 14:50:38,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-23 14:50:38,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 14:50:38,226:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,226:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-23 14:50:38,250:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 14:50:38,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 14:50:38,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,303:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-23 14:50:38,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:38,382:INFO:Preparing preprocessing pipeline...
2024-04-23 14:50:38,382:INFO:Set up simple imputation.
2024-04-23 14:50:38,387:INFO:Set up encoding of ordinal features.
2024-04-23 14:50:38,388:INFO:Set up encoding of categorical features.
2024-04-23 14:50:38,389:INFO:Set up feature normalization.
2024-04-23 14:50:38,389:INFO:Set up column name cleaning.
2024-04-23 14:50:38,747:INFO:Finished creating preprocessing pipeline.
2024-04-23 14:50:38,758:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MIGRAN~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=No...
                                                                handle_unknown='value',
                                                                random_state=None,
                                                                return_df=True,
                                                                sigma=None,
                                                                verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-23 14:50:38,758:INFO:Creating final display dataframe.
2024-04-23 14:50:39,184:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3           Original data shape   
4        Transformed data shape   
5   Transformed train set shape   
6    Transformed test set shape   
7               Ignore features   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16                    Normalize   
17             Normalize method   
18               Fold Generator   
19                  Fold Number   
20                     CPU Jobs   
21                      Use GPU   
22               Log Experiment   
23              Experiment Name   
24                          USI   

                                                Value  
0                                                8390  
1                                          SalesCount  
2                                              Binary  
3                                         (24639, 26)  
4                                         (24639, 20)  
5                                         (17247, 20)  
6                                          (7392, 20)  
7                                                   6  
8                                                   1  
9                                                  18  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                  1  
15  CatBoostEncoder(a=1, cols=None, drop_invariant...  
16                                               True  
17                                             minmax  
18                                    StratifiedKFold  
19                                                 10  
20                                                 -1  
21                                              False  
22                                              False  
23                                   clf-default-name  
24                                               f65b  
2024-04-23 14:50:39,227:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:39,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:39,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:39,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 14:50:39,265:INFO:setup() successfully completed in 1.29s...............
2024-04-23 14:50:44,653:INFO:Initializing get_config()
2024-04-23 14:50:44,653:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, variable=X_train_transformed)
2024-04-23 14:50:44,676:INFO:Variable: X_train returned as        1-Abschluss  1-Abschluss in DE  1-Deutscher Ehepartner  \
8088      0.220448           0.526317                0.438450   
2520      0.220448           0.241229                0.199295   
17512     0.108220           0.526317                0.438450   
14515     0.070811           0.241229                0.438450   
13332     0.220448           0.146199                0.119577   
...            ...                ...                     ...   
19060     0.212784           0.464832                0.487609   
12022     0.163171           0.496770                0.436124   
12434     0.212730           0.496712                0.436073   
18145     0.212587           0.464707                0.487508   
20868     0.274960           0.664790                0.349222   

       1-EB/NE erfllt?  1-Einreisejahr  1-Antrag EB  1-Antrag NE  \
8088          0.361804        0.269945     0.107791     0.142680   
2520          0.171381        0.269945     0.051650     0.142680   
17512         0.107906        0.269945     0.032936     0.070720   
14515         0.361804        0.269945     0.023579     0.070720   
13332         0.171381        0.269945     0.017965     0.046733   
...                ...             ...          ...          ...   
19060         0.364242        0.321159     0.103989     0.161012   
12022         0.364200        0.149161     0.103982     0.133847   
12434         0.404560        0.321080     0.103974     0.133474   
18145         0.364159        0.302986     0.103967     0.160987   
20868         0.364118        0.231549     0.122283     0.160961   

       1-Integrationstest  1-Jahr AR beantragt/bekommen  1-Jobcenter  \
8088             0.272675                      0.165171     0.334546   
2520             0.272675                      0.165171     0.159308   
17512            0.272675                      0.081084     0.100895   
14515            0.131636                      0.165171     0.334546   
13332            0.084623                      0.165171     0.159308   
...                   ...                           ...          ...   
19060            0.294681                      0.190434     0.301782   
12022            0.232612                      0.167786     0.301756   
12434            0.248536                      0.167615     0.416343   
18145            0.294652                      0.190401     0.301730   
20868            0.294622                      0.190368     0.301704   

       1-Kinder   1-Netto   1-Rente  1-Sprachzertifikat  \
8088        0.0  0.198719  0.311393            0.220999   
2520        0.0  0.198719  0.152158            0.220999   
17512       0.2  0.097783  0.099080            0.108850   
14515       0.3  0.198719  0.072541            0.071467   
13332       0.1  0.198719  0.311393            0.220999   
...         ...       ...       ...                 ...   
19060       0.1  0.063711  0.309512            0.276220   
12022       0.0  0.063659  0.221600            0.173133   
12434       0.2  0.220704  0.340164            0.173070   
18145       0.1  0.077853  0.309489            0.276180   
20868       0.0  0.191460  0.309466            0.276141   

       1-Test Sprache_Deutsch  1-Welches befristete AR haben Sie?  \
8088                      0.0                            0.109938   
2520                      0.0                            0.109938   
17512                     0.0                            0.053932   
14515                     0.0                            0.109938   
13332                     0.0                            0.109938   
...                       ...                                 ...   
19060                     0.0                            0.125891   
12022                     0.0                            0.101911   
12434                     0.0                            0.084568   
18145                     0.0                            0.125869   
20868                     0.0                            0.125847   

       1-Wie ist ihr aktueller Familienstand?  1-Beratung?  \
8088                                 0.465088          1.0   
2520                                 0.214656          0.0   
17512                                0.465088          1.0   
14515                                0.214656          1.0   
13332                                0.131179          1.0   
...                                       ...          ...   
19060                                0.443898          0.0   
12022                                0.462547          1.0   
12434                                0.462494          1.0   
18145                                0.443831          1.0   
20868                                0.443763          1.0   

       1-Gltiger Nationalpass  
8088                 0.448845  
2520                 0.215072  
17512                0.137147  
14515                0.098185  
13332                0.074808  
...                       ...  
19060                0.432209  
12022                0.432179  
12434                0.432150  
18145                0.432120  
20868                0.432091  

[17247 rows x 19 columns]
2024-04-23 14:50:44,677:INFO:get_config() successfully completed......................................
2024-04-23 14:50:57,988:INFO:Initializing compare_models()
2024-04-23 14:50:57,988:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, include=None, exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.5, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.5, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 14:50:57,988:INFO:Checking exceptions
2024-04-23 14:50:57,991:INFO:Preparing display monitor
2024-04-23 14:50:58,005:INFO:Initializing Logistic Regression
2024-04-23 14:50:58,005:INFO:Total runtime is 0.0 minutes
2024-04-23 14:50:58,008:INFO:SubProcess create_model() called ==================================
2024-04-23 14:50:58,008:INFO:Initializing create_model()
2024-04-23 14:50:58,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:50:58,008:INFO:Checking exceptions
2024-04-23 14:50:58,008:INFO:Importing libraries
2024-04-23 14:50:58,008:INFO:Copying training dataset
2024-04-23 14:50:58,014:INFO:Defining folds
2024-04-23 14:50:58,014:INFO:Declaring metric variables
2024-04-23 14:50:58,015:INFO:Importing untrained model
2024-04-23 14:50:58,017:INFO:Logistic Regression Imported successfully
2024-04-23 14:50:58,020:INFO:Cross validation set to False
2024-04-23 14:50:58,020:INFO:Fitting Model
2024-04-23 14:50:58,278:INFO:Initializing predict_model()
2024-04-23 14:50:58,278:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=8390,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51D9080>)
2024-04-23 14:50:58,278:INFO:Checking exceptions
2024-04-23 14:50:58,278:INFO:Preloading libraries
2024-04-23 14:50:58,384:INFO:_display_container: 2
2024-04-23 14:50:58,385:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 14:50:58,385:INFO:create_model() successfully completed......................................
2024-04-23 14:50:58,449:INFO:SubProcess create_model() end ==================================
2024-04-23 14:50:58,449:INFO:Creating metrics dataframe
2024-04-23 14:50:58,455:INFO:Initializing K Neighbors Classifier
2024-04-23 14:50:58,455:INFO:Total runtime is 0.007493841648101807 minutes
2024-04-23 14:50:58,457:INFO:SubProcess create_model() called ==================================
2024-04-23 14:50:58,457:INFO:Initializing create_model()
2024-04-23 14:50:58,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:50:58,458:INFO:Checking exceptions
2024-04-23 14:50:58,458:INFO:Importing libraries
2024-04-23 14:50:58,458:INFO:Copying training dataset
2024-04-23 14:50:58,462:INFO:Defining folds
2024-04-23 14:50:58,462:INFO:Declaring metric variables
2024-04-23 14:50:58,464:INFO:Importing untrained model
2024-04-23 14:50:58,466:INFO:K Neighbors Classifier Imported successfully
2024-04-23 14:50:58,469:INFO:Cross validation set to False
2024-04-23 14:50:58,469:INFO:Fitting Model
2024-04-23 14:50:58,704:INFO:Initializing predict_model()
2024-04-23 14:50:58,704:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='auto',
                                                      classifier=KNeighborsClassifier(algorithm='auto',
                                                                                      leaf_size=30,
                                                                                      metric='minkowski',
                                                                                      metric_params=None,
                                                                                      n_jobs=-1,
                                                                                      n_neighbors=5,
                                                                                      p=2,
                                                                                      weights='uniform'),
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2,
                                                      probability_threshold=0.5,
                                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC510B420>)
2024-04-23 14:50:58,704:INFO:Checking exceptions
2024-04-23 14:50:58,704:INFO:Preloading libraries
2024-04-23 14:50:59,315:INFO:_display_container: 2
2024-04-23 14:50:59,316:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5,
                                     weights='uniform')
2024-04-23 14:50:59,316:INFO:create_model() successfully completed......................................
2024-04-23 14:50:59,366:INFO:SubProcess create_model() end ==================================
2024-04-23 14:50:59,367:INFO:Creating metrics dataframe
2024-04-23 14:50:59,371:INFO:Initializing Naive Bayes
2024-04-23 14:50:59,371:INFO:Total runtime is 0.0227575421333313 minutes
2024-04-23 14:50:59,373:INFO:SubProcess create_model() called ==================================
2024-04-23 14:50:59,373:INFO:Initializing create_model()
2024-04-23 14:50:59,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:50:59,373:INFO:Checking exceptions
2024-04-23 14:50:59,373:INFO:Importing libraries
2024-04-23 14:50:59,373:INFO:Copying training dataset
2024-04-23 14:50:59,377:INFO:Defining folds
2024-04-23 14:50:59,377:INFO:Declaring metric variables
2024-04-23 14:50:59,379:INFO:Importing untrained model
2024-04-23 14:50:59,381:INFO:Naive Bayes Imported successfully
2024-04-23 14:50:59,383:INFO:Cross validation set to False
2024-04-23 14:50:59,383:INFO:Fitting Model
2024-04-23 14:50:59,626:INFO:Initializing predict_model()
2024-04-23 14:50:59,626:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                                            var_smoothing=1e-09),
                                                      priors=None,
                                                      probability_threshold=0.5,
                                                      var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB380>)
2024-04-23 14:50:59,626:INFO:Checking exceptions
2024-04-23 14:50:59,627:INFO:Preloading libraries
2024-04-23 14:50:59,740:INFO:_display_container: 2
2024-04-23 14:50:59,741:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.5,
                                     var_smoothing=1e-09)
2024-04-23 14:50:59,741:INFO:create_model() successfully completed......................................
2024-04-23 14:50:59,803:INFO:SubProcess create_model() end ==================================
2024-04-23 14:50:59,803:INFO:Creating metrics dataframe
2024-04-23 14:50:59,808:INFO:Initializing Decision Tree Classifier
2024-04-23 14:50:59,809:INFO:Total runtime is 0.030057692527770997 minutes
2024-04-23 14:50:59,810:INFO:SubProcess create_model() called ==================================
2024-04-23 14:50:59,811:INFO:Initializing create_model()
2024-04-23 14:50:59,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:50:59,811:INFO:Checking exceptions
2024-04-23 14:50:59,811:INFO:Importing libraries
2024-04-23 14:50:59,811:INFO:Copying training dataset
2024-04-23 14:50:59,815:INFO:Defining folds
2024-04-23 14:50:59,815:INFO:Declaring metric variables
2024-04-23 14:50:59,818:INFO:Importing untrained model
2024-04-23 14:50:59,820:INFO:Decision Tree Classifier Imported successfully
2024-04-23 14:50:59,822:INFO:Cross validation set to False
2024-04-23 14:50:59,822:INFO:Fitting Model
2024-04-23 14:51:00,472:INFO:Initializing predict_model()
2024-04-23 14:51:00,472:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=8390,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB4C0>)
2024-04-23 14:51:00,472:INFO:Checking exceptions
2024-04-23 14:51:00,472:INFO:Preloading libraries
2024-04-23 14:51:00,584:INFO:_display_container: 2
2024-04-23 14:51:00,585:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=8390,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=8390, splitter='best')
2024-04-23 14:51:00,585:INFO:create_model() successfully completed......................................
2024-04-23 14:51:00,648:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:00,648:INFO:Creating metrics dataframe
2024-04-23 14:51:00,658:INFO:Initializing SVM - Linear Kernel
2024-04-23 14:51:00,658:INFO:Total runtime is 0.044206472237904866 minutes
2024-04-23 14:51:00,660:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:00,660:INFO:Initializing create_model()
2024-04-23 14:51:00,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:00,660:INFO:Checking exceptions
2024-04-23 14:51:00,660:INFO:Importing libraries
2024-04-23 14:51:00,660:INFO:Copying training dataset
2024-04-23 14:51:00,664:INFO:Defining folds
2024-04-23 14:51:00,664:INFO:Declaring metric variables
2024-04-23 14:51:00,666:INFO:Importing untrained model
2024-04-23 14:51:00,669:INFO:SVM - Linear Kernel Imported successfully
2024-04-23 14:51:00,671:INFO:Cross validation set to False
2024-04-23 14:51:00,672:INFO:Fitting Model
2024-04-23 14:51:00,921:INFO:Initializing predict_model()
2024-04-23 14:51:00,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                               validation_fraction=0.1,
                                                                               verbose=0,
                                                                               warm_start=False),
                                                      early_stopping=False,
                                                      epsilon=0.1, eta0=0.001,
                                                      fit_intercept=True,
                                                      l1_ratio=0.15,
                                                      learning_rate='optimal',
                                                      loss='hinge',
                                                      max_iter=1000,
                                                      n_iter_no_change=5,
                                                      n_jobs=-1, penalty='l2',
                                                      power_t=0.5,
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      shuffle=True, tol=0.001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB2E0>)
2024-04-23 14:51:00,921:INFO:Checking exceptions
2024-04-23 14:51:00,921:INFO:Preloading libraries
2024-04-23 14:51:00,976:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:51:01,048:INFO:_display_container: 2
2024-04-23 14:51:01,050:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=839...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.5,
                                     random_state=8390, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2024-04-23 14:51:01,050:INFO:create_model() successfully completed......................................
2024-04-23 14:51:01,113:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:01,113:INFO:Creating metrics dataframe
2024-04-23 14:51:01,121:INFO:Initializing Ridge Classifier
2024-04-23 14:51:01,121:INFO:Total runtime is 0.05192596117655436 minutes
2024-04-23 14:51:01,124:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:01,124:INFO:Initializing create_model()
2024-04-23 14:51:01,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:01,125:INFO:Checking exceptions
2024-04-23 14:51:01,125:INFO:Importing libraries
2024-04-23 14:51:01,125:INFO:Copying training dataset
2024-04-23 14:51:01,128:INFO:Defining folds
2024-04-23 14:51:01,128:INFO:Declaring metric variables
2024-04-23 14:51:01,128:INFO:Importing untrained model
2024-04-23 14:51:01,136:INFO:Ridge Classifier Imported successfully
2024-04-23 14:51:01,139:INFO:Cross validation set to False
2024-04-23 14:51:01,139:INFO:Fitting Model
2024-04-23 14:51:01,377:INFO:Initializing predict_model()
2024-04-23 14:51:01,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(alpha=1.0,
                                                      class_weight=None,
                                                      classifier=RidgeClassifier(alpha=1.0,
                                                                                 class_weight=None,
                                                                                 copy_X=True,
                                                                                 fit_intercept=True,
                                                                                 max_iter=None,
                                                                                 positive=False,
                                                                                 random_state=8390,
                                                                                 solver='auto',
                                                                                 tol=0.0001),
                                                      copy_X=True,
                                                      fit_intercept=True,
                                                      max_iter=None,
                                                      positive=False,
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      solver='auto',
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB380>)
2024-04-23 14:51:01,378:INFO:Checking exceptions
2024-04-23 14:51:01,378:INFO:Preloading libraries
2024-04-23 14:51:01,422:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:51:01,489:INFO:_display_container: 2
2024-04-23 14:51:01,490:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=8390,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.5,
                                     random_state=8390, solver='auto',
                                     tol=0.0001)
2024-04-23 14:51:01,490:INFO:create_model() successfully completed......................................
2024-04-23 14:51:01,557:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:01,557:INFO:Creating metrics dataframe
2024-04-23 14:51:01,564:INFO:Initializing Random Forest Classifier
2024-04-23 14:51:01,564:INFO:Total runtime is 0.05930412213007609 minutes
2024-04-23 14:51:01,567:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:01,567:INFO:Initializing create_model()
2024-04-23 14:51:01,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:01,567:INFO:Checking exceptions
2024-04-23 14:51:01,567:INFO:Importing libraries
2024-04-23 14:51:01,568:INFO:Copying training dataset
2024-04-23 14:51:01,572:INFO:Defining folds
2024-04-23 14:51:01,580:INFO:Declaring metric variables
2024-04-23 14:51:01,580:INFO:Importing untrained model
2024-04-23 14:51:01,584:INFO:Random Forest Classifier Imported successfully
2024-04-23 14:51:01,587:INFO:Cross validation set to False
2024-04-23 14:51:01,587:INFO:Fitting Model
2024-04-23 14:51:02,388:INFO:Initializing predict_model()
2024-04-23 14:51:02,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC510AF20>)
2024-04-23 14:51:02,388:INFO:Checking exceptions
2024-04-23 14:51:02,389:INFO:Preloading libraries
2024-04-23 14:51:02,559:INFO:_display_container: 2
2024-04-23 14:51:02,559:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       mo...
                                                                       random_state=8390,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.5,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 14:51:02,559:INFO:create_model() successfully completed......................................
2024-04-23 14:51:02,634:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:02,634:INFO:Creating metrics dataframe
2024-04-23 14:51:02,641:INFO:Initializing Quadratic Discriminant Analysis
2024-04-23 14:51:02,641:INFO:Total runtime is 0.0772627313931783 minutes
2024-04-23 14:51:02,644:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:02,644:INFO:Initializing create_model()
2024-04-23 14:51:02,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:02,644:INFO:Checking exceptions
2024-04-23 14:51:02,644:INFO:Importing libraries
2024-04-23 14:51:02,644:INFO:Copying training dataset
2024-04-23 14:51:02,648:INFO:Defining folds
2024-04-23 14:51:02,648:INFO:Declaring metric variables
2024-04-23 14:51:02,650:INFO:Importing untrained model
2024-04-23 14:51:02,652:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-23 14:51:02,654:INFO:Cross validation set to False
2024-04-23 14:51:02,654:INFO:Fitting Model
2024-04-23 14:51:02,901:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-23 14:51:02,916:INFO:Initializing predict_model()
2024-04-23 14:51:02,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                                               reg_param=0.0,
                                                                                               store_covariance=False,
                                                                                               tol=0.0001),
                                                      priors=None,
                                                      probability_threshold=0.5,
                                                      reg_param=0.0,
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB6A0>)
2024-04-23 14:51:02,916:INFO:Checking exceptions
2024-04-23 14:51:02,916:INFO:Preloading libraries
2024-04-23 14:51:03,054:INFO:_display_container: 2
2024-04-23 14:51:03,055:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.5,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:51:03,055:INFO:create_model() successfully completed......................................
2024-04-23 14:51:03,122:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:03,122:INFO:Creating metrics dataframe
2024-04-23 14:51:03,127:INFO:Initializing Ada Boost Classifier
2024-04-23 14:51:03,127:INFO:Total runtime is 0.08536275227864583 minutes
2024-04-23 14:51:03,128:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:03,128:INFO:Initializing create_model()
2024-04-23 14:51:03,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:03,128:INFO:Checking exceptions
2024-04-23 14:51:03,128:INFO:Importing libraries
2024-04-23 14:51:03,128:INFO:Copying training dataset
2024-04-23 14:51:03,136:INFO:Defining folds
2024-04-23 14:51:03,136:INFO:Declaring metric variables
2024-04-23 14:51:03,137:INFO:Importing untrained model
2024-04-23 14:51:03,139:INFO:Ada Boost Classifier Imported successfully
2024-04-23 14:51:03,142:INFO:Cross validation set to False
2024-04-23 14:51:03,142:INFO:Fitting Model
2024-04-23 14:51:03,374:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 14:51:05,086:INFO:Initializing predict_model()
2024-04-23 14:51:05,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                                      classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                                    estimator=None,
                                                                                    learning_rate=1.0,
                                                                                    n_estimators=50,
                                                                                    random_state=8390),
                                                      estimator=None,
                                                      learning_rate=1.0,
                                                      n_estimators=50,
                                                      probability_threshold=0.5,
                                                      random_state=8390))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB2E0>)
2024-04-23 14:51:05,086:INFO:Checking exceptions
2024-04-23 14:51:05,086:INFO:Preloading libraries
2024-04-23 14:51:05,237:INFO:_display_container: 2
2024-04-23 14:51:05,238:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.5,
                                     random_state=8390)
2024-04-23 14:51:05,238:INFO:create_model() successfully completed......................................
2024-04-23 14:51:05,304:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:05,305:INFO:Creating metrics dataframe
2024-04-23 14:51:05,311:INFO:Initializing Gradient Boosting Classifier
2024-04-23 14:51:05,311:INFO:Total runtime is 0.12176794608434041 minutes
2024-04-23 14:51:05,314:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:05,314:INFO:Initializing create_model()
2024-04-23 14:51:05,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:05,314:INFO:Checking exceptions
2024-04-23 14:51:05,314:INFO:Importing libraries
2024-04-23 14:51:05,314:INFO:Copying training dataset
2024-04-23 14:51:05,320:INFO:Defining folds
2024-04-23 14:51:05,320:INFO:Declaring metric variables
2024-04-23 14:51:05,322:INFO:Importing untrained model
2024-04-23 14:51:05,324:INFO:Gradient Boosting Classifier Imported successfully
2024-04-23 14:51:05,327:INFO:Cross validation set to False
2024-04-23 14:51:05,327:INFO:Fitting Model
2024-04-23 14:51:14,378:INFO:Initializing predict_model()
2024-04-23 14:51:14,378:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB6A0>)
2024-04-23 14:51:14,378:INFO:Checking exceptions
2024-04-23 14:51:14,378:INFO:Preloading libraries
2024-04-23 14:51:14,510:INFO:_display_container: 2
2024-04-23 14:51:14,512:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.5,
                                     random_state=8390, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 14:51:14,512:INFO:create_model() successfully completed......................................
2024-04-23 14:51:14,582:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:14,583:INFO:Creating metrics dataframe
2024-04-23 14:51:14,591:INFO:Initializing Linear Discriminant Analysis
2024-04-23 14:51:14,591:INFO:Total runtime is 0.2764330228169759 minutes
2024-04-23 14:51:14,594:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:14,594:INFO:Initializing create_model()
2024-04-23 14:51:14,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:14,594:INFO:Checking exceptions
2024-04-23 14:51:14,594:INFO:Importing libraries
2024-04-23 14:51:14,594:INFO:Copying training dataset
2024-04-23 14:51:14,600:INFO:Defining folds
2024-04-23 14:51:14,601:INFO:Declaring metric variables
2024-04-23 14:51:14,602:INFO:Importing untrained model
2024-04-23 14:51:14,604:INFO:Linear Discriminant Analysis Imported successfully
2024-04-23 14:51:14,604:INFO:Cross validation set to False
2024-04-23 14:51:14,604:INFO:Fitting Model
2024-04-23 14:51:14,860:INFO:Initializing predict_model()
2024-04-23 14:51:14,860:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                                            n_components=None,
                                                                                            priors=None,
                                                                                            shrinkage=None,
                                                                                            solver='svd',
                                                                                            store_covariance=False,
                                                                                            tol=0.0001),
                                                      covariance_estimator=None,
                                                      n_components=None,
                                                      priors=None,
                                                      probability_threshold=0.5,
                                                      shrinkage=None,
                                                      solver='svd',
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB380>)
2024-04-23 14:51:14,860:INFO:Checking exceptions
2024-04-23 14:51:14,860:INFO:Preloading libraries
2024-04-23 14:51:14,969:INFO:_display_container: 2
2024-04-23 14:51:14,970:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.5, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:51:14,970:INFO:create_model() successfully completed......................................
2024-04-23 14:51:15,043:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:15,043:INFO:Creating metrics dataframe
2024-04-23 14:51:15,049:INFO:Initializing Extra Trees Classifier
2024-04-23 14:51:15,049:INFO:Total runtime is 0.28406012058258057 minutes
2024-04-23 14:51:15,052:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:15,052:INFO:Initializing create_model()
2024-04-23 14:51:15,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:15,052:INFO:Checking exceptions
2024-04-23 14:51:15,052:INFO:Importing libraries
2024-04-23 14:51:15,052:INFO:Copying training dataset
2024-04-23 14:51:15,057:INFO:Defining folds
2024-04-23 14:51:15,058:INFO:Declaring metric variables
2024-04-23 14:51:15,059:INFO:Importing untrained model
2024-04-23 14:51:15,062:INFO:Extra Trees Classifier Imported successfully
2024-04-23 14:51:15,064:INFO:Cross validation set to False
2024-04-23 14:51:15,064:INFO:Fitting Model
2024-04-23 14:51:15,457:INFO:Initializing predict_model()
2024-04-23 14:51:15,457:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                      warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB920>)
2024-04-23 14:51:15,458:INFO:Checking exceptions
2024-04-23 14:51:15,458:INFO:Preloading libraries
2024-04-23 14:51:15,552:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:51:15,614:INFO:_display_container: 2
2024-04-23 14:51:15,615:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     mo...
                                                                     random_state=8390,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.5,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 14:51:15,615:INFO:create_model() successfully completed......................................
2024-04-23 14:51:15,680:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:15,680:INFO:Creating metrics dataframe
2024-04-23 14:51:15,688:INFO:Initializing Light Gradient Boosting Machine
2024-04-23 14:51:15,688:INFO:Total runtime is 0.2947079102198283 minutes
2024-04-23 14:51:15,690:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:15,690:INFO:Initializing create_model()
2024-04-23 14:51:15,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:15,691:INFO:Checking exceptions
2024-04-23 14:51:15,691:INFO:Importing libraries
2024-04-23 14:51:15,691:INFO:Copying training dataset
2024-04-23 14:51:15,694:INFO:Defining folds
2024-04-23 14:51:15,694:INFO:Declaring metric variables
2024-04-23 14:51:15,696:INFO:Importing untrained model
2024-04-23 14:51:15,698:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-23 14:51:15,701:INFO:Cross validation set to False
2024-04-23 14:51:15,702:INFO:Fitting Model
2024-04-23 14:51:15,935:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-04-23 14:51:15,935:INFO:[LightGBM] [Info] Number of positive: 1021, number of negative: 16226
2024-04-23 14:51:15,936:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000676 seconds.
2024-04-23 14:51:15,936:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-04-23 14:51:15,936:INFO:[LightGBM] [Info] Total Bins 4092
2024-04-23 14:51:15,936:INFO:[LightGBM] [Info] Number of data points in the train set: 17247, number of used features: 18
2024-04-23 14:51:15,937:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.059199 -> initscore=-2.765832
2024-04-23 14:51:15,937:INFO:[LightGBM] [Info] Start training from score -2.765832
2024-04-23 14:51:16,028:INFO:Initializing predict_model()
2024-04-23 14:51:16,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                subsample_freq=0),
                                                      colsample_bytree=1.0,
                                                      importance_type='split',
                                                      learning_rate=0.1,
                                                      max_depth=-1,
                                                      min_child_samples=20,
                                                      min_child_weight=0.001,
                                                      min_split_gain=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1, num_leaves=31,
                                                      objective=None,
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      reg_alpha=0.0,
                                                      reg_lambda=0.0,
                                                      subsample=1.0,
                                                      subsample_for_bin=200000,
                                                      subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB060>)
2024-04-23 14:51:16,028:INFO:Checking exceptions
2024-04-23 14:51:16,028:INFO:Preloading libraries
2024-04-23 14:51:16,165:INFO:_display_container: 2
2024-04-23 14:51:16,167:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=8...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.5,
                                     random_state=8390, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-04-23 14:51:16,167:INFO:create_model() successfully completed......................................
2024-04-23 14:51:16,223:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:16,223:INFO:Creating metrics dataframe
2024-04-23 14:51:16,228:INFO:Initializing Dummy Classifier
2024-04-23 14:51:16,228:INFO:Total runtime is 0.3037190675735474 minutes
2024-04-23 14:51:16,228:INFO:SubProcess create_model() called ==================================
2024-04-23 14:51:16,228:INFO:Initializing create_model()
2024-04-23 14:51:16,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC1B5A290>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:16,228:INFO:Checking exceptions
2024-04-23 14:51:16,228:INFO:Importing libraries
2024-04-23 14:51:16,228:INFO:Copying training dataset
2024-04-23 14:51:16,237:INFO:Defining folds
2024-04-23 14:51:16,238:INFO:Declaring metric variables
2024-04-23 14:51:16,239:INFO:Importing untrained model
2024-04-23 14:51:16,241:INFO:Dummy Classifier Imported successfully
2024-04-23 14:51:16,245:INFO:Cross validation set to False
2024-04-23 14:51:16,245:INFO:Fitting Model
2024-04-23 14:51:16,481:INFO:Initializing predict_model()
2024-04-23 14:51:16,481:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                                 random_state=8390,
                                                                                 strategy='prior'),
                                                      constant=None,
                                                      probability_threshold=0.5,
                                                      random_state=8390,
                                                      strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB380>)
2024-04-23 14:51:16,481:INFO:Checking exceptions
2024-04-23 14:51:16,481:INFO:Preloading libraries
2024-04-23 14:51:16,526:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:51:16,593:INFO:_display_container: 2
2024-04-23 14:51:16,594:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=8390,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.5,
                                     random_state=8390, strategy='prior')
2024-04-23 14:51:16,594:INFO:create_model() successfully completed......................................
2024-04-23 14:51:16,655:INFO:SubProcess create_model() end ==================================
2024-04-23 14:51:16,655:INFO:Creating metrics dataframe
2024-04-23 14:51:16,664:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 14:51:16,670:INFO:Initializing create_model()
2024-04-23 14:51:16,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.5,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:51:16,670:INFO:Checking exceptions
2024-04-23 14:51:16,671:INFO:Importing libraries
2024-04-23 14:51:16,671:INFO:Copying training dataset
2024-04-23 14:51:16,675:INFO:Defining folds
2024-04-23 14:51:16,675:INFO:Declaring metric variables
2024-04-23 14:51:16,675:INFO:Importing untrained model
2024-04-23 14:51:16,675:INFO:Declaring custom model
2024-04-23 14:51:16,676:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 14:51:16,676:INFO:Cross validation set to False
2024-04-23 14:51:16,676:INFO:Fitting Model
2024-04-23 14:51:16,907:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-23 14:51:16,910:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.5,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:51:16,910:INFO:create_model() successfully completed......................................
2024-04-23 14:51:16,986:INFO:_master_model_container: 0
2024-04-23 14:51:16,986:INFO:_display_container: 2
2024-04-23 14:51:16,986:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.5,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:51:16,986:INFO:compare_models() successfully completed......................................
2024-04-23 14:51:39,445:INFO:Initializing plot_model()
2024-04-23 14:51:39,445:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.5,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-23 14:51:39,445:INFO:Checking exceptions
2024-04-23 14:51:39,449:INFO:Preloading libraries
2024-04-23 14:51:39,449:INFO:Copying training dataset
2024-04-23 14:51:39,449:INFO:Plot type: confusion_matrix
2024-04-23 14:51:39,520:INFO:Fitting Model
2024-04-23 14:51:39,521:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but QuadraticDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2024-04-23 14:51:39,521:INFO:Scoring test/hold-out set
2024-04-23 14:51:39,601:INFO:Visual Rendered Successfully
2024-04-23 14:51:39,664:INFO:plot_model() successfully completed......................................
2024-04-23 14:52:17,253:INFO:Initializing compare_models()
2024-04-23 14:52:17,253:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, include=None, exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.4, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.4, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 14:52:17,253:INFO:Checking exceptions
2024-04-23 14:52:17,259:INFO:Preparing display monitor
2024-04-23 14:52:17,271:INFO:Initializing Logistic Regression
2024-04-23 14:52:17,271:INFO:Total runtime is 0.0 minutes
2024-04-23 14:52:17,273:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:17,273:INFO:Initializing create_model()
2024-04-23 14:52:17,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:17,273:INFO:Checking exceptions
2024-04-23 14:52:17,273:INFO:Importing libraries
2024-04-23 14:52:17,273:INFO:Copying training dataset
2024-04-23 14:52:17,279:INFO:Defining folds
2024-04-23 14:52:17,279:INFO:Declaring metric variables
2024-04-23 14:52:17,280:INFO:Importing untrained model
2024-04-23 14:52:17,282:INFO:Logistic Regression Imported successfully
2024-04-23 14:52:17,285:INFO:Cross validation set to False
2024-04-23 14:52:17,285:INFO:Fitting Model
2024-04-23 14:52:17,554:INFO:Initializing predict_model()
2024-04-23 14:52:17,554:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=8390,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB100>)
2024-04-23 14:52:17,554:INFO:Checking exceptions
2024-04-23 14:52:17,554:INFO:Preloading libraries
2024-04-23 14:52:17,664:INFO:_display_container: 3
2024-04-23 14:52:17,665:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.4,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 14:52:17,665:INFO:create_model() successfully completed......................................
2024-04-23 14:52:17,729:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:17,729:INFO:Creating metrics dataframe
2024-04-23 14:52:17,733:INFO:Initializing K Neighbors Classifier
2024-04-23 14:52:17,735:INFO:Total runtime is 0.0077329238255818685 minutes
2024-04-23 14:52:17,737:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:17,737:INFO:Initializing create_model()
2024-04-23 14:52:17,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:17,738:INFO:Checking exceptions
2024-04-23 14:52:17,738:INFO:Importing libraries
2024-04-23 14:52:17,738:INFO:Copying training dataset
2024-04-23 14:52:17,742:INFO:Defining folds
2024-04-23 14:52:17,742:INFO:Declaring metric variables
2024-04-23 14:52:17,744:INFO:Importing untrained model
2024-04-23 14:52:17,746:INFO:K Neighbors Classifier Imported successfully
2024-04-23 14:52:17,749:INFO:Cross validation set to False
2024-04-23 14:52:17,749:INFO:Fitting Model
2024-04-23 14:52:17,990:INFO:Initializing predict_model()
2024-04-23 14:52:17,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='auto',
                                                      classifier=KNeighborsClassifier(algorithm='auto',
                                                                                      leaf_size=30,
                                                                                      metric='minkowski',
                                                                                      metric_params=None,
                                                                                      n_jobs=-1,
                                                                                      n_neighbors=5,
                                                                                      p=2,
                                                                                      weights='uniform'),
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2,
                                                      probability_threshold=0.4,
                                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC510B060>)
2024-04-23 14:52:17,990:INFO:Checking exceptions
2024-04-23 14:52:17,990:INFO:Preloading libraries
2024-04-23 14:52:18,497:INFO:_display_container: 3
2024-04-23 14:52:18,499:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.4,
                                     weights='uniform')
2024-04-23 14:52:18,499:INFO:create_model() successfully completed......................................
2024-04-23 14:52:18,557:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:18,557:INFO:Creating metrics dataframe
2024-04-23 14:52:18,562:INFO:Initializing Naive Bayes
2024-04-23 14:52:18,562:INFO:Total runtime is 0.021521159013112388 minutes
2024-04-23 14:52:18,565:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:18,565:INFO:Initializing create_model()
2024-04-23 14:52:18,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:18,565:INFO:Checking exceptions
2024-04-23 14:52:18,565:INFO:Importing libraries
2024-04-23 14:52:18,566:INFO:Copying training dataset
2024-04-23 14:52:18,571:INFO:Defining folds
2024-04-23 14:52:18,571:INFO:Declaring metric variables
2024-04-23 14:52:18,572:INFO:Importing untrained model
2024-04-23 14:52:18,574:INFO:Naive Bayes Imported successfully
2024-04-23 14:52:18,576:INFO:Cross validation set to False
2024-04-23 14:52:18,577:INFO:Fitting Model
2024-04-23 14:52:18,812:INFO:Initializing predict_model()
2024-04-23 14:52:18,813:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                                            var_smoothing=1e-09),
                                                      priors=None,
                                                      probability_threshold=0.4,
                                                      var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196A20>)
2024-04-23 14:52:18,813:INFO:Checking exceptions
2024-04-23 14:52:18,813:INFO:Preloading libraries
2024-04-23 14:52:18,931:INFO:_display_container: 3
2024-04-23 14:52:18,932:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.4,
                                     var_smoothing=1e-09)
2024-04-23 14:52:18,932:INFO:create_model() successfully completed......................................
2024-04-23 14:52:18,994:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:18,994:INFO:Creating metrics dataframe
2024-04-23 14:52:19,000:INFO:Initializing Decision Tree Classifier
2024-04-23 14:52:19,000:INFO:Total runtime is 0.02881200710932414 minutes
2024-04-23 14:52:19,002:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:19,002:INFO:Initializing create_model()
2024-04-23 14:52:19,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:19,002:INFO:Checking exceptions
2024-04-23 14:52:19,002:INFO:Importing libraries
2024-04-23 14:52:19,002:INFO:Copying training dataset
2024-04-23 14:52:19,006:INFO:Defining folds
2024-04-23 14:52:19,006:INFO:Declaring metric variables
2024-04-23 14:52:19,008:INFO:Importing untrained model
2024-04-23 14:52:19,010:INFO:Decision Tree Classifier Imported successfully
2024-04-23 14:52:19,013:INFO:Cross validation set to False
2024-04-23 14:52:19,013:INFO:Fitting Model
2024-04-23 14:52:19,642:INFO:Initializing predict_model()
2024-04-23 14:52:19,644:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=8390,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51977E0>)
2024-04-23 14:52:19,644:INFO:Checking exceptions
2024-04-23 14:52:19,644:INFO:Preloading libraries
2024-04-23 14:52:19,760:INFO:_display_container: 3
2024-04-23 14:52:19,762:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=8390,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.4,
                                     random_state=8390, splitter='best')
2024-04-23 14:52:19,763:INFO:create_model() successfully completed......................................
2024-04-23 14:52:19,834:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:19,834:INFO:Creating metrics dataframe
2024-04-23 14:52:19,844:INFO:Initializing SVM - Linear Kernel
2024-04-23 14:52:19,844:INFO:Total runtime is 0.042876978715260826 minutes
2024-04-23 14:52:19,846:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:19,846:INFO:Initializing create_model()
2024-04-23 14:52:19,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:19,846:INFO:Checking exceptions
2024-04-23 14:52:19,847:INFO:Importing libraries
2024-04-23 14:52:19,847:INFO:Copying training dataset
2024-04-23 14:52:19,851:INFO:Defining folds
2024-04-23 14:52:19,851:INFO:Declaring metric variables
2024-04-23 14:52:19,853:INFO:Importing untrained model
2024-04-23 14:52:19,855:INFO:SVM - Linear Kernel Imported successfully
2024-04-23 14:52:19,858:INFO:Cross validation set to False
2024-04-23 14:52:19,858:INFO:Fitting Model
2024-04-23 14:52:20,109:INFO:Initializing predict_model()
2024-04-23 14:52:20,109:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                               validation_fraction=0.1,
                                                                               verbose=0,
                                                                               warm_start=False),
                                                      early_stopping=False,
                                                      epsilon=0.1, eta0=0.001,
                                                      fit_intercept=True,
                                                      l1_ratio=0.15,
                                                      learning_rate='optimal',
                                                      loss='hinge',
                                                      max_iter=1000,
                                                      n_iter_no_change=5,
                                                      n_jobs=-1, penalty='l2',
                                                      power_t=0.5,
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      shuffle=True, tol=0.001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51972E0>)
2024-04-23 14:52:20,109:INFO:Checking exceptions
2024-04-23 14:52:20,109:INFO:Preloading libraries
2024-04-23 14:52:20,152:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:52:20,216:INFO:_display_container: 3
2024-04-23 14:52:20,217:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=839...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.4,
                                     random_state=8390, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2024-04-23 14:52:20,217:INFO:create_model() successfully completed......................................
2024-04-23 14:52:20,285:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:20,285:INFO:Creating metrics dataframe
2024-04-23 14:52:20,290:INFO:Initializing Ridge Classifier
2024-04-23 14:52:20,290:INFO:Total runtime is 0.050311946868896486 minutes
2024-04-23 14:52:20,292:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:20,293:INFO:Initializing create_model()
2024-04-23 14:52:20,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:20,293:INFO:Checking exceptions
2024-04-23 14:52:20,293:INFO:Importing libraries
2024-04-23 14:52:20,293:INFO:Copying training dataset
2024-04-23 14:52:20,298:INFO:Defining folds
2024-04-23 14:52:20,298:INFO:Declaring metric variables
2024-04-23 14:52:20,300:INFO:Importing untrained model
2024-04-23 14:52:20,301:INFO:Ridge Classifier Imported successfully
2024-04-23 14:52:20,305:INFO:Cross validation set to False
2024-04-23 14:52:20,305:INFO:Fitting Model
2024-04-23 14:52:20,548:INFO:Initializing predict_model()
2024-04-23 14:52:20,548:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(alpha=1.0,
                                                      class_weight=None,
                                                      classifier=RidgeClassifier(alpha=1.0,
                                                                                 class_weight=None,
                                                                                 copy_X=True,
                                                                                 fit_intercept=True,
                                                                                 max_iter=None,
                                                                                 positive=False,
                                                                                 random_state=8390,
                                                                                 solver='auto',
                                                                                 tol=0.0001),
                                                      copy_X=True,
                                                      fit_intercept=True,
                                                      max_iter=None,
                                                      positive=False,
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      solver='auto',
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196E80>)
2024-04-23 14:52:20,548:INFO:Checking exceptions
2024-04-23 14:52:20,548:INFO:Preloading libraries
2024-04-23 14:52:20,591:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:52:20,659:INFO:_display_container: 3
2024-04-23 14:52:20,660:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=8390,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.4,
                                     random_state=8390, solver='auto',
                                     tol=0.0001)
2024-04-23 14:52:20,660:INFO:create_model() successfully completed......................................
2024-04-23 14:52:20,726:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:20,726:INFO:Creating metrics dataframe
2024-04-23 14:52:20,733:INFO:Initializing Random Forest Classifier
2024-04-23 14:52:20,733:INFO:Total runtime is 0.057693703969319665 minutes
2024-04-23 14:52:20,735:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:20,736:INFO:Initializing create_model()
2024-04-23 14:52:20,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:20,736:INFO:Checking exceptions
2024-04-23 14:52:20,736:INFO:Importing libraries
2024-04-23 14:52:20,736:INFO:Copying training dataset
2024-04-23 14:52:20,740:INFO:Defining folds
2024-04-23 14:52:20,740:INFO:Declaring metric variables
2024-04-23 14:52:20,741:INFO:Importing untrained model
2024-04-23 14:52:20,744:INFO:Random Forest Classifier Imported successfully
2024-04-23 14:52:20,748:INFO:Cross validation set to False
2024-04-23 14:52:20,748:INFO:Fitting Model
2024-04-23 14:52:21,526:INFO:Initializing predict_model()
2024-04-23 14:52:21,526:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51974C0>)
2024-04-23 14:52:21,526:INFO:Checking exceptions
2024-04-23 14:52:21,526:INFO:Preloading libraries
2024-04-23 14:52:21,694:INFO:_display_container: 3
2024-04-23 14:52:21,696:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       mo...
                                                                       random_state=8390,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.4,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 14:52:21,696:INFO:create_model() successfully completed......................................
2024-04-23 14:52:21,771:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:21,772:INFO:Creating metrics dataframe
2024-04-23 14:52:21,777:INFO:Initializing Quadratic Discriminant Analysis
2024-04-23 14:52:21,777:INFO:Total runtime is 0.07509340047836305 minutes
2024-04-23 14:52:21,780:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:21,780:INFO:Initializing create_model()
2024-04-23 14:52:21,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:21,780:INFO:Checking exceptions
2024-04-23 14:52:21,780:INFO:Importing libraries
2024-04-23 14:52:21,780:INFO:Copying training dataset
2024-04-23 14:52:21,787:INFO:Defining folds
2024-04-23 14:52:21,787:INFO:Declaring metric variables
2024-04-23 14:52:21,789:INFO:Importing untrained model
2024-04-23 14:52:21,790:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-23 14:52:21,793:INFO:Cross validation set to False
2024-04-23 14:52:21,793:INFO:Fitting Model
2024-04-23 14:52:22,032:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-23 14:52:22,046:INFO:Initializing predict_model()
2024-04-23 14:52:22,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                                               reg_param=0.0,
                                                                                               store_covariance=False,
                                                                                               tol=0.0001),
                                                      priors=None,
                                                      probability_threshold=0.4,
                                                      reg_param=0.0,
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196B60>)
2024-04-23 14:52:22,047:INFO:Checking exceptions
2024-04-23 14:52:22,047:INFO:Preloading libraries
2024-04-23 14:52:22,174:INFO:_display_container: 3
2024-04-23 14:52:22,175:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.4,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:52:22,175:INFO:create_model() successfully completed......................................
2024-04-23 14:52:22,244:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:22,244:INFO:Creating metrics dataframe
2024-04-23 14:52:22,252:INFO:Initializing Ada Boost Classifier
2024-04-23 14:52:22,252:INFO:Total runtime is 0.08300922711690267 minutes
2024-04-23 14:52:22,254:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:22,254:INFO:Initializing create_model()
2024-04-23 14:52:22,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:22,254:INFO:Checking exceptions
2024-04-23 14:52:22,254:INFO:Importing libraries
2024-04-23 14:52:22,254:INFO:Copying training dataset
2024-04-23 14:52:22,254:INFO:Defining folds
2024-04-23 14:52:22,254:INFO:Declaring metric variables
2024-04-23 14:52:22,254:INFO:Importing untrained model
2024-04-23 14:52:22,254:INFO:Ada Boost Classifier Imported successfully
2024-04-23 14:52:22,266:INFO:Cross validation set to False
2024-04-23 14:52:22,266:INFO:Fitting Model
2024-04-23 14:52:22,490:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 14:52:24,204:INFO:Initializing predict_model()
2024-04-23 14:52:24,205:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                                      classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                                    estimator=None,
                                                                                    learning_rate=1.0,
                                                                                    n_estimators=50,
                                                                                    random_state=8390),
                                                      estimator=None,
                                                      learning_rate=1.0,
                                                      n_estimators=50,
                                                      probability_threshold=0.4,
                                                      random_state=8390))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196AC0>)
2024-04-23 14:52:24,205:INFO:Checking exceptions
2024-04-23 14:52:24,205:INFO:Preloading libraries
2024-04-23 14:52:24,369:INFO:_display_container: 3
2024-04-23 14:52:24,371:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.4,
                                     random_state=8390)
2024-04-23 14:52:24,371:INFO:create_model() successfully completed......................................
2024-04-23 14:52:24,466:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:24,466:INFO:Creating metrics dataframe
2024-04-23 14:52:24,474:INFO:Initializing Gradient Boosting Classifier
2024-04-23 14:52:24,474:INFO:Total runtime is 0.12004667123158773 minutes
2024-04-23 14:52:24,476:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:24,476:INFO:Initializing create_model()
2024-04-23 14:52:24,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:24,476:INFO:Checking exceptions
2024-04-23 14:52:24,476:INFO:Importing libraries
2024-04-23 14:52:24,476:INFO:Copying training dataset
2024-04-23 14:52:24,483:INFO:Defining folds
2024-04-23 14:52:24,483:INFO:Declaring metric variables
2024-04-23 14:52:24,484:INFO:Importing untrained model
2024-04-23 14:52:24,486:INFO:Gradient Boosting Classifier Imported successfully
2024-04-23 14:52:24,489:INFO:Cross validation set to False
2024-04-23 14:52:24,489:INFO:Fitting Model
2024-04-23 14:52:33,343:INFO:Initializing predict_model()
2024-04-23 14:52:33,343:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5194D60>)
2024-04-23 14:52:33,343:INFO:Checking exceptions
2024-04-23 14:52:33,343:INFO:Preloading libraries
2024-04-23 14:52:33,477:INFO:_display_container: 3
2024-04-23 14:52:33,479:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.4,
                                     random_state=8390, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 14:52:33,479:INFO:create_model() successfully completed......................................
2024-04-23 14:52:33,555:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:33,555:INFO:Creating metrics dataframe
2024-04-23 14:52:33,562:INFO:Initializing Linear Discriminant Analysis
2024-04-23 14:52:33,562:INFO:Total runtime is 0.27151693900426227 minutes
2024-04-23 14:52:33,566:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:33,566:INFO:Initializing create_model()
2024-04-23 14:52:33,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:33,567:INFO:Checking exceptions
2024-04-23 14:52:33,567:INFO:Importing libraries
2024-04-23 14:52:33,567:INFO:Copying training dataset
2024-04-23 14:52:33,571:INFO:Defining folds
2024-04-23 14:52:33,571:INFO:Declaring metric variables
2024-04-23 14:52:33,572:INFO:Importing untrained model
2024-04-23 14:52:33,574:INFO:Linear Discriminant Analysis Imported successfully
2024-04-23 14:52:33,578:INFO:Cross validation set to False
2024-04-23 14:52:33,578:INFO:Fitting Model
2024-04-23 14:52:33,835:INFO:Initializing predict_model()
2024-04-23 14:52:33,835:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                                            n_components=None,
                                                                                            priors=None,
                                                                                            shrinkage=None,
                                                                                            solver='svd',
                                                                                            store_covariance=False,
                                                                                            tol=0.0001),
                                                      covariance_estimator=None,
                                                      n_components=None,
                                                      priors=None,
                                                      probability_threshold=0.4,
                                                      shrinkage=None,
                                                      solver='svd',
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197240>)
2024-04-23 14:52:33,835:INFO:Checking exceptions
2024-04-23 14:52:33,835:INFO:Preloading libraries
2024-04-23 14:52:33,959:INFO:_display_container: 3
2024-04-23 14:52:33,960:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.4, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:52:33,960:INFO:create_model() successfully completed......................................
2024-04-23 14:52:34,031:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:34,032:INFO:Creating metrics dataframe
2024-04-23 14:52:34,037:INFO:Initializing Extra Trees Classifier
2024-04-23 14:52:34,037:INFO:Total runtime is 0.2794420003890991 minutes
2024-04-23 14:52:34,040:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:34,040:INFO:Initializing create_model()
2024-04-23 14:52:34,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:34,041:INFO:Checking exceptions
2024-04-23 14:52:34,041:INFO:Importing libraries
2024-04-23 14:52:34,041:INFO:Copying training dataset
2024-04-23 14:52:34,045:INFO:Defining folds
2024-04-23 14:52:34,045:INFO:Declaring metric variables
2024-04-23 14:52:34,047:INFO:Importing untrained model
2024-04-23 14:52:34,050:INFO:Extra Trees Classifier Imported successfully
2024-04-23 14:52:34,053:INFO:Cross validation set to False
2024-04-23 14:52:34,053:INFO:Fitting Model
2024-04-23 14:52:34,448:INFO:Initializing predict_model()
2024-04-23 14:52:34,448:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                      warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51979C0>)
2024-04-23 14:52:34,448:INFO:Checking exceptions
2024-04-23 14:52:34,448:INFO:Preloading libraries
2024-04-23 14:52:34,615:INFO:_display_container: 3
2024-04-23 14:52:34,617:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     mo...
                                                                     random_state=8390,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.4,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 14:52:34,617:INFO:create_model() successfully completed......................................
2024-04-23 14:52:34,690:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:34,691:INFO:Creating metrics dataframe
2024-04-23 14:52:34,698:INFO:Initializing Light Gradient Boosting Machine
2024-04-23 14:52:34,698:INFO:Total runtime is 0.29045827786127726 minutes
2024-04-23 14:52:34,700:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:34,700:INFO:Initializing create_model()
2024-04-23 14:52:34,700:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:34,700:INFO:Checking exceptions
2024-04-23 14:52:34,700:INFO:Importing libraries
2024-04-23 14:52:34,700:INFO:Copying training dataset
2024-04-23 14:52:34,706:INFO:Defining folds
2024-04-23 14:52:34,706:INFO:Declaring metric variables
2024-04-23 14:52:34,708:INFO:Importing untrained model
2024-04-23 14:52:34,710:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-23 14:52:34,715:INFO:Cross validation set to False
2024-04-23 14:52:34,715:INFO:Fitting Model
2024-04-23 14:52:34,958:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-04-23 14:52:34,958:INFO:[LightGBM] [Info] Number of positive: 1021, number of negative: 16226
2024-04-23 14:52:34,960:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001345 seconds.
2024-04-23 14:52:34,960:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-04-23 14:52:34,960:INFO:[LightGBM] [Info] Total Bins 4092
2024-04-23 14:52:34,961:INFO:[LightGBM] [Info] Number of data points in the train set: 17247, number of used features: 18
2024-04-23 14:52:34,961:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.059199 -> initscore=-2.765832
2024-04-23 14:52:34,961:INFO:[LightGBM] [Info] Start training from score -2.765832
2024-04-23 14:52:35,046:INFO:Initializing predict_model()
2024-04-23 14:52:35,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                subsample_freq=0),
                                                      colsample_bytree=1.0,
                                                      importance_type='split',
                                                      learning_rate=0.1,
                                                      max_depth=-1,
                                                      min_child_samples=20,
                                                      min_child_weight=0.001,
                                                      min_split_gain=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1, num_leaves=31,
                                                      objective=None,
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      reg_alpha=0.0,
                                                      reg_lambda=0.0,
                                                      subsample=1.0,
                                                      subsample_for_bin=200000,
                                                      subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51979C0>)
2024-04-23 14:52:35,046:INFO:Checking exceptions
2024-04-23 14:52:35,046:INFO:Preloading libraries
2024-04-23 14:52:35,192:INFO:_display_container: 3
2024-04-23 14:52:35,195:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=8...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.4,
                                     random_state=8390, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-04-23 14:52:35,195:INFO:create_model() successfully completed......................................
2024-04-23 14:52:35,251:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:35,251:INFO:Creating metrics dataframe
2024-04-23 14:52:35,258:INFO:Initializing Dummy Classifier
2024-04-23 14:52:35,258:INFO:Total runtime is 0.2997777024904887 minutes
2024-04-23 14:52:35,260:INFO:SubProcess create_model() called ==================================
2024-04-23 14:52:35,261:INFO:Initializing create_model()
2024-04-23 14:52:35,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C60750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:35,261:INFO:Checking exceptions
2024-04-23 14:52:35,261:INFO:Importing libraries
2024-04-23 14:52:35,261:INFO:Copying training dataset
2024-04-23 14:52:35,266:INFO:Defining folds
2024-04-23 14:52:35,266:INFO:Declaring metric variables
2024-04-23 14:52:35,269:INFO:Importing untrained model
2024-04-23 14:52:35,271:INFO:Dummy Classifier Imported successfully
2024-04-23 14:52:35,274:INFO:Cross validation set to False
2024-04-23 14:52:35,274:INFO:Fitting Model
2024-04-23 14:52:35,516:INFO:Initializing predict_model()
2024-04-23 14:52:35,517:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                                 random_state=8390,
                                                                                 strategy='prior'),
                                                      constant=None,
                                                      probability_threshold=0.4,
                                                      random_state=8390,
                                                      strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197CE0>)
2024-04-23 14:52:35,517:INFO:Checking exceptions
2024-04-23 14:52:35,517:INFO:Preloading libraries
2024-04-23 14:52:35,560:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:52:35,625:INFO:_display_container: 3
2024-04-23 14:52:35,626:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=8390,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.4,
                                     random_state=8390, strategy='prior')
2024-04-23 14:52:35,626:INFO:create_model() successfully completed......................................
2024-04-23 14:52:35,704:INFO:SubProcess create_model() end ==================================
2024-04-23 14:52:35,704:INFO:Creating metrics dataframe
2024-04-23 14:52:35,715:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 14:52:35,721:INFO:Initializing create_model()
2024-04-23 14:52:35,721:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.4,
                                     random_state=8390), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.4, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:52:35,721:INFO:Checking exceptions
2024-04-23 14:52:35,722:INFO:Importing libraries
2024-04-23 14:52:35,722:INFO:Copying training dataset
2024-04-23 14:52:35,725:INFO:Defining folds
2024-04-23 14:52:35,726:INFO:Declaring metric variables
2024-04-23 14:52:35,726:INFO:Importing untrained model
2024-04-23 14:52:35,726:INFO:Declaring custom model
2024-04-23 14:52:35,726:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 14:52:35,727:INFO:Cross validation set to False
2024-04-23 14:52:35,727:INFO:Fitting Model
2024-04-23 14:52:35,963:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 14:52:37,704:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.4,
                                     random_state=8390)
2024-04-23 14:52:37,704:INFO:create_model() successfully completed......................................
2024-04-23 14:52:37,785:INFO:_master_model_container: 0
2024-04-23 14:52:37,785:INFO:_display_container: 3
2024-04-23 14:52:37,786:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.4,
                                     random_state=8390)
2024-04-23 14:52:37,786:INFO:compare_models() successfully completed......................................
2024-04-23 14:52:43,609:INFO:Initializing plot_model()
2024-04-23 14:52:43,610:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.4,
                                     random_state=8390), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-23 14:52:43,610:INFO:Checking exceptions
2024-04-23 14:52:43,614:INFO:Preloading libraries
2024-04-23 14:52:43,616:INFO:Copying training dataset
2024-04-23 14:52:43,616:INFO:Plot type: confusion_matrix
2024-04-23 14:52:43,689:INFO:Fitting Model
2024-04-23 14:52:43,690:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2024-04-23 14:52:43,690:INFO:Scoring test/hold-out set
2024-04-23 14:52:43,790:INFO:Visual Rendered Successfully
2024-04-23 14:52:43,859:INFO:plot_model() successfully completed......................................
2024-04-23 14:53:24,686:INFO:Initializing compare_models()
2024-04-23 14:53:24,686:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, include=None, exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.3, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.3, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 14:53:24,686:INFO:Checking exceptions
2024-04-23 14:53:24,688:INFO:Preparing display monitor
2024-04-23 14:53:24,705:INFO:Initializing Logistic Regression
2024-04-23 14:53:24,705:INFO:Total runtime is 0.0 minutes
2024-04-23 14:53:24,707:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:24,707:INFO:Initializing create_model()
2024-04-23 14:53:24,707:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:24,708:INFO:Checking exceptions
2024-04-23 14:53:24,708:INFO:Importing libraries
2024-04-23 14:53:24,708:INFO:Copying training dataset
2024-04-23 14:53:24,713:INFO:Defining folds
2024-04-23 14:53:24,713:INFO:Declaring metric variables
2024-04-23 14:53:24,715:INFO:Importing untrained model
2024-04-23 14:53:24,716:INFO:Logistic Regression Imported successfully
2024-04-23 14:53:24,720:INFO:Cross validation set to False
2024-04-23 14:53:24,720:INFO:Fitting Model
2024-04-23 14:53:24,979:INFO:Initializing predict_model()
2024-04-23 14:53:24,979:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=8390,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB420>)
2024-04-23 14:53:24,979:INFO:Checking exceptions
2024-04-23 14:53:24,979:INFO:Preloading libraries
2024-04-23 14:53:25,098:INFO:_display_container: 4
2024-04-23 14:53:25,099:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.3,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 14:53:25,099:INFO:create_model() successfully completed......................................
2024-04-23 14:53:25,170:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:25,170:INFO:Creating metrics dataframe
2024-04-23 14:53:25,174:INFO:Initializing K Neighbors Classifier
2024-04-23 14:53:25,174:INFO:Total runtime is 0.007810906569163004 minutes
2024-04-23 14:53:25,177:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:25,177:INFO:Initializing create_model()
2024-04-23 14:53:25,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:25,177:INFO:Checking exceptions
2024-04-23 14:53:25,177:INFO:Importing libraries
2024-04-23 14:53:25,177:INFO:Copying training dataset
2024-04-23 14:53:25,185:INFO:Defining folds
2024-04-23 14:53:25,185:INFO:Declaring metric variables
2024-04-23 14:53:25,187:INFO:Importing untrained model
2024-04-23 14:53:25,189:INFO:K Neighbors Classifier Imported successfully
2024-04-23 14:53:25,192:INFO:Cross validation set to False
2024-04-23 14:53:25,192:INFO:Fitting Model
2024-04-23 14:53:25,436:INFO:Initializing predict_model()
2024-04-23 14:53:25,436:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='auto',
                                                      classifier=KNeighborsClassifier(algorithm='auto',
                                                                                      leaf_size=30,
                                                                                      metric='minkowski',
                                                                                      metric_params=None,
                                                                                      n_jobs=-1,
                                                                                      n_neighbors=5,
                                                                                      p=2,
                                                                                      weights='uniform'),
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2,
                                                      probability_threshold=0.3,
                                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5195120>)
2024-04-23 14:53:25,436:INFO:Checking exceptions
2024-04-23 14:53:25,436:INFO:Preloading libraries
2024-04-23 14:53:25,931:INFO:_display_container: 4
2024-04-23 14:53:25,934:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.3,
                                     weights='uniform')
2024-04-23 14:53:25,934:INFO:create_model() successfully completed......................................
2024-04-23 14:53:25,995:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:25,995:INFO:Creating metrics dataframe
2024-04-23 14:53:25,999:INFO:Initializing Naive Bayes
2024-04-23 14:53:25,999:INFO:Total runtime is 0.021566657225290935 minutes
2024-04-23 14:53:26,001:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:26,001:INFO:Initializing create_model()
2024-04-23 14:53:26,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:26,001:INFO:Checking exceptions
2024-04-23 14:53:26,001:INFO:Importing libraries
2024-04-23 14:53:26,001:INFO:Copying training dataset
2024-04-23 14:53:26,006:INFO:Defining folds
2024-04-23 14:53:26,006:INFO:Declaring metric variables
2024-04-23 14:53:26,008:INFO:Importing untrained model
2024-04-23 14:53:26,010:INFO:Naive Bayes Imported successfully
2024-04-23 14:53:26,014:INFO:Cross validation set to False
2024-04-23 14:53:26,014:INFO:Fitting Model
2024-04-23 14:53:26,264:INFO:Initializing predict_model()
2024-04-23 14:53:26,274:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                                            var_smoothing=1e-09),
                                                      priors=None,
                                                      probability_threshold=0.3,
                                                      var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51976A0>)
2024-04-23 14:53:26,274:INFO:Checking exceptions
2024-04-23 14:53:26,274:INFO:Preloading libraries
2024-04-23 14:53:26,408:INFO:_display_container: 4
2024-04-23 14:53:26,410:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.3,
                                     var_smoothing=1e-09)
2024-04-23 14:53:26,410:INFO:create_model() successfully completed......................................
2024-04-23 14:53:26,491:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:26,491:INFO:Creating metrics dataframe
2024-04-23 14:53:26,502:INFO:Initializing Decision Tree Classifier
2024-04-23 14:53:26,502:INFO:Total runtime is 0.029952824115753174 minutes
2024-04-23 14:53:26,505:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:26,505:INFO:Initializing create_model()
2024-04-23 14:53:26,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:26,505:INFO:Checking exceptions
2024-04-23 14:53:26,505:INFO:Importing libraries
2024-04-23 14:53:26,505:INFO:Copying training dataset
2024-04-23 14:53:26,511:INFO:Defining folds
2024-04-23 14:53:26,511:INFO:Declaring metric variables
2024-04-23 14:53:26,513:INFO:Importing untrained model
2024-04-23 14:53:26,515:INFO:Decision Tree Classifier Imported successfully
2024-04-23 14:53:26,517:INFO:Cross validation set to False
2024-04-23 14:53:26,517:INFO:Fitting Model
2024-04-23 14:53:27,171:INFO:Initializing predict_model()
2024-04-23 14:53:27,171:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=8390,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197880>)
2024-04-23 14:53:27,172:INFO:Checking exceptions
2024-04-23 14:53:27,172:INFO:Preloading libraries
2024-04-23 14:53:27,291:INFO:_display_container: 4
2024-04-23 14:53:27,292:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=8390,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.3,
                                     random_state=8390, splitter='best')
2024-04-23 14:53:27,292:INFO:create_model() successfully completed......................................
2024-04-23 14:53:27,355:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:27,355:INFO:Creating metrics dataframe
2024-04-23 14:53:27,361:INFO:Initializing SVM - Linear Kernel
2024-04-23 14:53:27,361:INFO:Total runtime is 0.04426223834355672 minutes
2024-04-23 14:53:27,363:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:27,363:INFO:Initializing create_model()
2024-04-23 14:53:27,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:27,363:INFO:Checking exceptions
2024-04-23 14:53:27,363:INFO:Importing libraries
2024-04-23 14:53:27,364:INFO:Copying training dataset
2024-04-23 14:53:27,368:INFO:Defining folds
2024-04-23 14:53:27,368:INFO:Declaring metric variables
2024-04-23 14:53:27,370:INFO:Importing untrained model
2024-04-23 14:53:27,372:INFO:SVM - Linear Kernel Imported successfully
2024-04-23 14:53:27,375:INFO:Cross validation set to False
2024-04-23 14:53:27,375:INFO:Fitting Model
2024-04-23 14:53:27,621:INFO:Initializing predict_model()
2024-04-23 14:53:27,621:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                               validation_fraction=0.1,
                                                                               verbose=0,
                                                                               warm_start=False),
                                                      early_stopping=False,
                                                      epsilon=0.1, eta0=0.001,
                                                      fit_intercept=True,
                                                      l1_ratio=0.15,
                                                      learning_rate='optimal',
                                                      loss='hinge',
                                                      max_iter=1000,
                                                      n_iter_no_change=5,
                                                      n_jobs=-1, penalty='l2',
                                                      power_t=0.5,
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      shuffle=True, tol=0.001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51951C0>)
2024-04-23 14:53:27,621:INFO:Checking exceptions
2024-04-23 14:53:27,621:INFO:Preloading libraries
2024-04-23 14:53:27,662:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:53:27,734:INFO:_display_container: 4
2024-04-23 14:53:27,734:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=839...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.3,
                                     random_state=8390, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2024-04-23 14:53:27,734:INFO:create_model() successfully completed......................................
2024-04-23 14:53:27,821:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:27,821:INFO:Creating metrics dataframe
2024-04-23 14:53:27,830:INFO:Initializing Ridge Classifier
2024-04-23 14:53:27,830:INFO:Total runtime is 0.05207751194636027 minutes
2024-04-23 14:53:27,832:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:27,833:INFO:Initializing create_model()
2024-04-23 14:53:27,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:27,833:INFO:Checking exceptions
2024-04-23 14:53:27,833:INFO:Importing libraries
2024-04-23 14:53:27,833:INFO:Copying training dataset
2024-04-23 14:53:27,839:INFO:Defining folds
2024-04-23 14:53:27,839:INFO:Declaring metric variables
2024-04-23 14:53:27,841:INFO:Importing untrained model
2024-04-23 14:53:27,843:INFO:Ridge Classifier Imported successfully
2024-04-23 14:53:27,846:INFO:Cross validation set to False
2024-04-23 14:53:27,846:INFO:Fitting Model
2024-04-23 14:53:28,084:INFO:Initializing predict_model()
2024-04-23 14:53:28,084:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(alpha=1.0,
                                                      class_weight=None,
                                                      classifier=RidgeClassifier(alpha=1.0,
                                                                                 class_weight=None,
                                                                                 copy_X=True,
                                                                                 fit_intercept=True,
                                                                                 max_iter=None,
                                                                                 positive=False,
                                                                                 random_state=8390,
                                                                                 solver='auto',
                                                                                 tol=0.0001),
                                                      copy_X=True,
                                                      fit_intercept=True,
                                                      max_iter=None,
                                                      positive=False,
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      solver='auto',
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197EC0>)
2024-04-23 14:53:28,084:INFO:Checking exceptions
2024-04-23 14:53:28,084:INFO:Preloading libraries
2024-04-23 14:53:28,130:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:53:28,200:INFO:_display_container: 4
2024-04-23 14:53:28,201:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=8390,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.3,
                                     random_state=8390, solver='auto',
                                     tol=0.0001)
2024-04-23 14:53:28,201:INFO:create_model() successfully completed......................................
2024-04-23 14:53:28,268:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:28,269:INFO:Creating metrics dataframe
2024-04-23 14:53:28,274:INFO:Initializing Random Forest Classifier
2024-04-23 14:53:28,275:INFO:Total runtime is 0.05950331290562948 minutes
2024-04-23 14:53:28,278:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:28,278:INFO:Initializing create_model()
2024-04-23 14:53:28,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:28,278:INFO:Checking exceptions
2024-04-23 14:53:28,278:INFO:Importing libraries
2024-04-23 14:53:28,278:INFO:Copying training dataset
2024-04-23 14:53:28,283:INFO:Defining folds
2024-04-23 14:53:28,283:INFO:Declaring metric variables
2024-04-23 14:53:28,285:INFO:Importing untrained model
2024-04-23 14:53:28,287:INFO:Random Forest Classifier Imported successfully
2024-04-23 14:53:28,290:INFO:Cross validation set to False
2024-04-23 14:53:28,290:INFO:Fitting Model
2024-04-23 14:53:29,080:INFO:Initializing predict_model()
2024-04-23 14:53:29,080:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC510B6A0>)
2024-04-23 14:53:29,080:INFO:Checking exceptions
2024-04-23 14:53:29,081:INFO:Preloading libraries
2024-04-23 14:53:29,241:INFO:_display_container: 4
2024-04-23 14:53:29,243:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       mo...
                                                                       random_state=8390,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.3,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 14:53:29,243:INFO:create_model() successfully completed......................................
2024-04-23 14:53:29,307:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:29,308:INFO:Creating metrics dataframe
2024-04-23 14:53:29,315:INFO:Initializing Quadratic Discriminant Analysis
2024-04-23 14:53:29,315:INFO:Total runtime is 0.07683760325113932 minutes
2024-04-23 14:53:29,318:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:29,318:INFO:Initializing create_model()
2024-04-23 14:53:29,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:29,318:INFO:Checking exceptions
2024-04-23 14:53:29,318:INFO:Importing libraries
2024-04-23 14:53:29,318:INFO:Copying training dataset
2024-04-23 14:53:29,323:INFO:Defining folds
2024-04-23 14:53:29,323:INFO:Declaring metric variables
2024-04-23 14:53:29,324:INFO:Importing untrained model
2024-04-23 14:53:29,327:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-23 14:53:29,330:INFO:Cross validation set to False
2024-04-23 14:53:29,331:INFO:Fitting Model
2024-04-23 14:53:29,558:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-23 14:53:29,571:INFO:Initializing predict_model()
2024-04-23 14:53:29,571:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                                               reg_param=0.0,
                                                                                               store_covariance=False,
                                                                                               tol=0.0001),
                                                      priors=None,
                                                      probability_threshold=0.3,
                                                      reg_param=0.0,
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196AC0>)
2024-04-23 14:53:29,571:INFO:Checking exceptions
2024-04-23 14:53:29,571:INFO:Preloading libraries
2024-04-23 14:53:29,692:INFO:_display_container: 4
2024-04-23 14:53:29,693:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.3,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:53:29,694:INFO:create_model() successfully completed......................................
2024-04-23 14:53:29,765:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:29,765:INFO:Creating metrics dataframe
2024-04-23 14:53:29,771:INFO:Initializing Ada Boost Classifier
2024-04-23 14:53:29,772:INFO:Total runtime is 0.08444825808207194 minutes
2024-04-23 14:53:29,774:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:29,774:INFO:Initializing create_model()
2024-04-23 14:53:29,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:29,774:INFO:Checking exceptions
2024-04-23 14:53:29,774:INFO:Importing libraries
2024-04-23 14:53:29,774:INFO:Copying training dataset
2024-04-23 14:53:29,779:INFO:Defining folds
2024-04-23 14:53:29,779:INFO:Declaring metric variables
2024-04-23 14:53:29,781:INFO:Importing untrained model
2024-04-23 14:53:29,783:INFO:Ada Boost Classifier Imported successfully
2024-04-23 14:53:29,785:INFO:Cross validation set to False
2024-04-23 14:53:29,785:INFO:Fitting Model
2024-04-23 14:53:30,008:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 14:53:31,718:INFO:Initializing predict_model()
2024-04-23 14:53:31,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                                      classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                                    estimator=None,
                                                                                    learning_rate=1.0,
                                                                                    n_estimators=50,
                                                                                    random_state=8390),
                                                      estimator=None,
                                                      learning_rate=1.0,
                                                      n_estimators=50,
                                                      probability_threshold=0.3,
                                                      random_state=8390))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197EC0>)
2024-04-23 14:53:31,718:INFO:Checking exceptions
2024-04-23 14:53:31,718:INFO:Preloading libraries
2024-04-23 14:53:31,868:INFO:_display_container: 4
2024-04-23 14:53:31,869:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.3,
                                     random_state=8390)
2024-04-23 14:53:31,870:INFO:create_model() successfully completed......................................
2024-04-23 14:53:31,931:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:31,931:INFO:Creating metrics dataframe
2024-04-23 14:53:31,939:INFO:Initializing Gradient Boosting Classifier
2024-04-23 14:53:31,940:INFO:Total runtime is 0.12057751019795737 minutes
2024-04-23 14:53:31,944:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:31,944:INFO:Initializing create_model()
2024-04-23 14:53:31,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:31,945:INFO:Checking exceptions
2024-04-23 14:53:31,945:INFO:Importing libraries
2024-04-23 14:53:31,945:INFO:Copying training dataset
2024-04-23 14:53:31,952:INFO:Defining folds
2024-04-23 14:53:31,952:INFO:Declaring metric variables
2024-04-23 14:53:31,954:INFO:Importing untrained model
2024-04-23 14:53:31,956:INFO:Gradient Boosting Classifier Imported successfully
2024-04-23 14:53:31,960:INFO:Cross validation set to False
2024-04-23 14:53:31,960:INFO:Fitting Model
2024-04-23 14:53:41,013:INFO:Initializing predict_model()
2024-04-23 14:53:41,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197100>)
2024-04-23 14:53:41,013:INFO:Checking exceptions
2024-04-23 14:53:41,013:INFO:Preloading libraries
2024-04-23 14:53:41,144:INFO:_display_container: 4
2024-04-23 14:53:41,145:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.3,
                                     random_state=8390, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 14:53:41,146:INFO:create_model() successfully completed......................................
2024-04-23 14:53:41,212:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:41,212:INFO:Creating metrics dataframe
2024-04-23 14:53:41,219:INFO:Initializing Linear Discriminant Analysis
2024-04-23 14:53:41,219:INFO:Total runtime is 0.2752273162206014 minutes
2024-04-23 14:53:41,222:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:41,222:INFO:Initializing create_model()
2024-04-23 14:53:41,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:41,222:INFO:Checking exceptions
2024-04-23 14:53:41,222:INFO:Importing libraries
2024-04-23 14:53:41,222:INFO:Copying training dataset
2024-04-23 14:53:41,228:INFO:Defining folds
2024-04-23 14:53:41,228:INFO:Declaring metric variables
2024-04-23 14:53:41,230:INFO:Importing untrained model
2024-04-23 14:53:41,232:INFO:Linear Discriminant Analysis Imported successfully
2024-04-23 14:53:41,234:INFO:Cross validation set to False
2024-04-23 14:53:41,235:INFO:Fitting Model
2024-04-23 14:53:41,484:INFO:Initializing predict_model()
2024-04-23 14:53:41,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                                            n_components=None,
                                                                                            priors=None,
                                                                                            shrinkage=None,
                                                                                            solver='svd',
                                                                                            store_covariance=False,
                                                                                            tol=0.0001),
                                                      covariance_estimator=None,
                                                      n_components=None,
                                                      priors=None,
                                                      probability_threshold=0.3,
                                                      shrinkage=None,
                                                      solver='svd',
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51953A0>)
2024-04-23 14:53:41,484:INFO:Checking exceptions
2024-04-23 14:53:41,484:INFO:Preloading libraries
2024-04-23 14:53:41,600:INFO:_display_container: 4
2024-04-23 14:53:41,601:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.3, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:53:41,601:INFO:create_model() successfully completed......................................
2024-04-23 14:53:41,677:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:41,677:INFO:Creating metrics dataframe
2024-04-23 14:53:41,687:INFO:Initializing Extra Trees Classifier
2024-04-23 14:53:41,687:INFO:Total runtime is 0.2830312530199687 minutes
2024-04-23 14:53:41,689:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:41,689:INFO:Initializing create_model()
2024-04-23 14:53:41,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:41,689:INFO:Checking exceptions
2024-04-23 14:53:41,689:INFO:Importing libraries
2024-04-23 14:53:41,689:INFO:Copying training dataset
2024-04-23 14:53:41,694:INFO:Defining folds
2024-04-23 14:53:41,694:INFO:Declaring metric variables
2024-04-23 14:53:41,696:INFO:Importing untrained model
2024-04-23 14:53:41,698:INFO:Extra Trees Classifier Imported successfully
2024-04-23 14:53:41,701:INFO:Cross validation set to False
2024-04-23 14:53:41,701:INFO:Fitting Model
2024-04-23 14:53:42,084:INFO:Initializing predict_model()
2024-04-23 14:53:42,084:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                      warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197D80>)
2024-04-23 14:53:42,084:INFO:Checking exceptions
2024-04-23 14:53:42,084:INFO:Preloading libraries
2024-04-23 14:53:42,241:INFO:_display_container: 4
2024-04-23 14:53:42,244:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     mo...
                                                                     random_state=8390,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.3,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 14:53:42,244:INFO:create_model() successfully completed......................................
2024-04-23 14:53:42,313:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:42,313:INFO:Creating metrics dataframe
2024-04-23 14:53:42,320:INFO:Initializing Light Gradient Boosting Machine
2024-04-23 14:53:42,320:INFO:Total runtime is 0.2935868819554647 minutes
2024-04-23 14:53:42,322:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:42,322:INFO:Initializing create_model()
2024-04-23 14:53:42,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:42,322:INFO:Checking exceptions
2024-04-23 14:53:42,322:INFO:Importing libraries
2024-04-23 14:53:42,322:INFO:Copying training dataset
2024-04-23 14:53:42,328:INFO:Defining folds
2024-04-23 14:53:42,328:INFO:Declaring metric variables
2024-04-23 14:53:42,328:INFO:Importing untrained model
2024-04-23 14:53:42,328:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-23 14:53:42,334:INFO:Cross validation set to False
2024-04-23 14:53:42,334:INFO:Fitting Model
2024-04-23 14:53:42,575:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-04-23 14:53:42,576:INFO:[LightGBM] [Info] Number of positive: 1021, number of negative: 16226
2024-04-23 14:53:42,577:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000861 seconds.
2024-04-23 14:53:42,577:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-04-23 14:53:42,577:INFO:[LightGBM] [Info] Total Bins 4092
2024-04-23 14:53:42,577:INFO:[LightGBM] [Info] Number of data points in the train set: 17247, number of used features: 18
2024-04-23 14:53:42,578:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.059199 -> initscore=-2.765832
2024-04-23 14:53:42,578:INFO:[LightGBM] [Info] Start training from score -2.765832
2024-04-23 14:53:42,662:INFO:Initializing predict_model()
2024-04-23 14:53:42,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                subsample_freq=0),
                                                      colsample_bytree=1.0,
                                                      importance_type='split',
                                                      learning_rate=0.1,
                                                      max_depth=-1,
                                                      min_child_samples=20,
                                                      min_child_weight=0.001,
                                                      min_split_gain=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1, num_leaves=31,
                                                      objective=None,
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      reg_alpha=0.0,
                                                      reg_lambda=0.0,
                                                      subsample=1.0,
                                                      subsample_for_bin=200000,
                                                      subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196E80>)
2024-04-23 14:53:42,662:INFO:Checking exceptions
2024-04-23 14:53:42,662:INFO:Preloading libraries
2024-04-23 14:53:42,803:INFO:_display_container: 4
2024-04-23 14:53:42,803:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=8...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.3,
                                     random_state=8390, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-04-23 14:53:42,803:INFO:create_model() successfully completed......................................
2024-04-23 14:53:42,868:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:42,868:INFO:Creating metrics dataframe
2024-04-23 14:53:42,874:INFO:Initializing Dummy Classifier
2024-04-23 14:53:42,874:INFO:Total runtime is 0.3028180480003357 minutes
2024-04-23 14:53:42,876:INFO:SubProcess create_model() called ==================================
2024-04-23 14:53:42,877:INFO:Initializing create_model()
2024-04-23 14:53:42,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41BD310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:42,877:INFO:Checking exceptions
2024-04-23 14:53:42,877:INFO:Importing libraries
2024-04-23 14:53:42,877:INFO:Copying training dataset
2024-04-23 14:53:42,882:INFO:Defining folds
2024-04-23 14:53:42,882:INFO:Declaring metric variables
2024-04-23 14:53:42,884:INFO:Importing untrained model
2024-04-23 14:53:42,885:INFO:Dummy Classifier Imported successfully
2024-04-23 14:53:42,888:INFO:Cross validation set to False
2024-04-23 14:53:42,888:INFO:Fitting Model
2024-04-23 14:53:43,127:INFO:Initializing predict_model()
2024-04-23 14:53:43,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                                 random_state=8390,
                                                                                 strategy='prior'),
                                                      constant=None,
                                                      probability_threshold=0.3,
                                                      random_state=8390,
                                                      strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197EC0>)
2024-04-23 14:53:43,127:INFO:Checking exceptions
2024-04-23 14:53:43,127:INFO:Preloading libraries
2024-04-23 14:53:43,174:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:53:43,248:INFO:_display_container: 4
2024-04-23 14:53:43,249:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=8390,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.3,
                                     random_state=8390, strategy='prior')
2024-04-23 14:53:43,250:INFO:create_model() successfully completed......................................
2024-04-23 14:53:43,334:INFO:SubProcess create_model() end ==================================
2024-04-23 14:53:43,334:INFO:Creating metrics dataframe
2024-04-23 14:53:43,352:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 14:53:43,362:INFO:Initializing create_model()
2024-04-23 14:53:43,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.3,
                                     random_state=8390), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.3, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:53:43,362:INFO:Checking exceptions
2024-04-23 14:53:43,363:INFO:Importing libraries
2024-04-23 14:53:43,363:INFO:Copying training dataset
2024-04-23 14:53:43,367:INFO:Defining folds
2024-04-23 14:53:43,367:INFO:Declaring metric variables
2024-04-23 14:53:43,367:INFO:Importing untrained model
2024-04-23 14:53:43,367:INFO:Declaring custom model
2024-04-23 14:53:43,368:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 14:53:43,369:INFO:Cross validation set to False
2024-04-23 14:53:43,369:INFO:Fitting Model
2024-04-23 14:53:43,602:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 14:53:45,317:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.3,
                                     random_state=8390)
2024-04-23 14:53:45,317:INFO:create_model() successfully completed......................................
2024-04-23 14:53:45,400:INFO:_master_model_container: 0
2024-04-23 14:53:45,400:INFO:_display_container: 4
2024-04-23 14:53:45,400:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.3,
                                     random_state=8390)
2024-04-23 14:53:45,401:INFO:compare_models() successfully completed......................................
2024-04-23 14:54:16,352:INFO:Initializing compare_models()
2024-04-23 14:54:16,352:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, include=None, exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.09, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.09, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 14:54:16,353:INFO:Checking exceptions
2024-04-23 14:54:16,355:INFO:Preparing display monitor
2024-04-23 14:54:16,368:INFO:Initializing Logistic Regression
2024-04-23 14:54:16,368:INFO:Total runtime is 0.0 minutes
2024-04-23 14:54:16,370:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:16,370:INFO:Initializing create_model()
2024-04-23 14:54:16,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:16,370:INFO:Checking exceptions
2024-04-23 14:54:16,370:INFO:Importing libraries
2024-04-23 14:54:16,370:INFO:Copying training dataset
2024-04-23 14:54:16,375:INFO:Defining folds
2024-04-23 14:54:16,375:INFO:Declaring metric variables
2024-04-23 14:54:16,377:INFO:Importing untrained model
2024-04-23 14:54:16,379:INFO:Logistic Regression Imported successfully
2024-04-23 14:54:16,382:INFO:Cross validation set to False
2024-04-23 14:54:16,382:INFO:Fitting Model
2024-04-23 14:54:16,664:INFO:Initializing predict_model()
2024-04-23 14:54:16,664:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=8390,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC52FB060>)
2024-04-23 14:54:16,664:INFO:Checking exceptions
2024-04-23 14:54:16,664:INFO:Preloading libraries
2024-04-23 14:54:16,784:INFO:_display_container: 5
2024-04-23 14:54:16,785:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 14:54:16,785:INFO:create_model() successfully completed......................................
2024-04-23 14:54:16,849:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:16,849:INFO:Creating metrics dataframe
2024-04-23 14:54:16,853:INFO:Initializing K Neighbors Classifier
2024-04-23 14:54:16,853:INFO:Total runtime is 0.008081281185150146 minutes
2024-04-23 14:54:16,855:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:16,855:INFO:Initializing create_model()
2024-04-23 14:54:16,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:16,856:INFO:Checking exceptions
2024-04-23 14:54:16,856:INFO:Importing libraries
2024-04-23 14:54:16,856:INFO:Copying training dataset
2024-04-23 14:54:16,862:INFO:Defining folds
2024-04-23 14:54:16,862:INFO:Declaring metric variables
2024-04-23 14:54:16,864:INFO:Importing untrained model
2024-04-23 14:54:16,866:INFO:K Neighbors Classifier Imported successfully
2024-04-23 14:54:16,869:INFO:Cross validation set to False
2024-04-23 14:54:16,869:INFO:Fitting Model
2024-04-23 14:54:17,119:INFO:Initializing predict_model()
2024-04-23 14:54:17,119:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='auto',
                                                      classifier=KNeighborsClassifier(algorithm='auto',
                                                                                      leaf_size=30,
                                                                                      metric='minkowski',
                                                                                      metric_params=None,
                                                                                      n_jobs=-1,
                                                                                      n_neighbors=5,
                                                                                      p=2,
                                                                                      weights='uniform'),
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2,
                                                      probability_threshold=0.09,
                                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC510AF20>)
2024-04-23 14:54:17,119:INFO:Checking exceptions
2024-04-23 14:54:17,119:INFO:Preloading libraries
2024-04-23 14:54:17,584:INFO:_display_container: 5
2024-04-23 14:54:17,585:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.09,
                                     weights='uniform')
2024-04-23 14:54:17,585:INFO:create_model() successfully completed......................................
2024-04-23 14:54:17,641:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:17,641:INFO:Creating metrics dataframe
2024-04-23 14:54:17,645:INFO:Initializing Naive Bayes
2024-04-23 14:54:17,645:INFO:Total runtime is 0.021293377876281737 minutes
2024-04-23 14:54:17,647:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:17,647:INFO:Initializing create_model()
2024-04-23 14:54:17,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:17,647:INFO:Checking exceptions
2024-04-23 14:54:17,647:INFO:Importing libraries
2024-04-23 14:54:17,647:INFO:Copying training dataset
2024-04-23 14:54:17,652:INFO:Defining folds
2024-04-23 14:54:17,653:INFO:Declaring metric variables
2024-04-23 14:54:17,654:INFO:Importing untrained model
2024-04-23 14:54:17,656:INFO:Naive Bayes Imported successfully
2024-04-23 14:54:17,660:INFO:Cross validation set to False
2024-04-23 14:54:17,660:INFO:Fitting Model
2024-04-23 14:54:17,897:INFO:Initializing predict_model()
2024-04-23 14:54:17,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                                            var_smoothing=1e-09),
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196C00>)
2024-04-23 14:54:17,897:INFO:Checking exceptions
2024-04-23 14:54:17,897:INFO:Preloading libraries
2024-04-23 14:54:18,024:INFO:_display_container: 5
2024-04-23 14:54:18,025:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.09,
                                     var_smoothing=1e-09)
2024-04-23 14:54:18,025:INFO:create_model() successfully completed......................................
2024-04-23 14:54:18,094:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:18,094:INFO:Creating metrics dataframe
2024-04-23 14:54:18,098:INFO:Initializing Decision Tree Classifier
2024-04-23 14:54:18,098:INFO:Total runtime is 0.02884352207183838 minutes
2024-04-23 14:54:18,100:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:18,101:INFO:Initializing create_model()
2024-04-23 14:54:18,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:18,101:INFO:Checking exceptions
2024-04-23 14:54:18,101:INFO:Importing libraries
2024-04-23 14:54:18,101:INFO:Copying training dataset
2024-04-23 14:54:18,106:INFO:Defining folds
2024-04-23 14:54:18,106:INFO:Declaring metric variables
2024-04-23 14:54:18,109:INFO:Importing untrained model
2024-04-23 14:54:18,112:INFO:Decision Tree Classifier Imported successfully
2024-04-23 14:54:18,114:INFO:Cross validation set to False
2024-04-23 14:54:18,114:INFO:Fitting Model
2024-04-23 14:54:18,746:INFO:Initializing predict_model()
2024-04-23 14:54:18,746:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=8390,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5194EA0>)
2024-04-23 14:54:18,746:INFO:Checking exceptions
2024-04-23 14:54:18,746:INFO:Preloading libraries
2024-04-23 14:54:18,855:INFO:_display_container: 5
2024-04-23 14:54:18,857:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=8390,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.09,
                                     random_state=8390, splitter='best')
2024-04-23 14:54:18,857:INFO:create_model() successfully completed......................................
2024-04-23 14:54:18,924:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:18,925:INFO:Creating metrics dataframe
2024-04-23 14:54:18,931:INFO:Initializing SVM - Linear Kernel
2024-04-23 14:54:18,931:INFO:Total runtime is 0.04271464347839356 minutes
2024-04-23 14:54:18,933:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:18,933:INFO:Initializing create_model()
2024-04-23 14:54:18,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:18,934:INFO:Checking exceptions
2024-04-23 14:54:18,934:INFO:Importing libraries
2024-04-23 14:54:18,934:INFO:Copying training dataset
2024-04-23 14:54:18,946:INFO:Defining folds
2024-04-23 14:54:18,946:INFO:Declaring metric variables
2024-04-23 14:54:18,948:INFO:Importing untrained model
2024-04-23 14:54:18,951:INFO:SVM - Linear Kernel Imported successfully
2024-04-23 14:54:18,956:INFO:Cross validation set to False
2024-04-23 14:54:18,956:INFO:Fitting Model
2024-04-23 14:54:19,201:INFO:Initializing predict_model()
2024-04-23 14:54:19,201:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                               validation_fraction=0.1,
                                                                               verbose=0,
                                                                               warm_start=False),
                                                      early_stopping=False,
                                                      epsilon=0.1, eta0=0.001,
                                                      fit_intercept=True,
                                                      l1_ratio=0.15,
                                                      learning_rate='optimal',
                                                      loss='hinge',
                                                      max_iter=1000,
                                                      n_iter_no_change=5,
                                                      n_jobs=-1, penalty='l2',
                                                      power_t=0.5,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      shuffle=True, tol=0.001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196DE0>)
2024-04-23 14:54:19,201:INFO:Checking exceptions
2024-04-23 14:54:19,201:INFO:Preloading libraries
2024-04-23 14:54:19,244:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:54:19,312:INFO:_display_container: 5
2024-04-23 14:54:19,315:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=839...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.09,
                                     random_state=8390, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2024-04-23 14:54:19,315:INFO:create_model() successfully completed......................................
2024-04-23 14:54:19,393:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:19,393:INFO:Creating metrics dataframe
2024-04-23 14:54:19,398:INFO:Initializing Ridge Classifier
2024-04-23 14:54:19,398:INFO:Total runtime is 0.0505051851272583 minutes
2024-04-23 14:54:19,399:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:19,400:INFO:Initializing create_model()
2024-04-23 14:54:19,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:19,400:INFO:Checking exceptions
2024-04-23 14:54:19,400:INFO:Importing libraries
2024-04-23 14:54:19,400:INFO:Copying training dataset
2024-04-23 14:54:19,405:INFO:Defining folds
2024-04-23 14:54:19,405:INFO:Declaring metric variables
2024-04-23 14:54:19,407:INFO:Importing untrained model
2024-04-23 14:54:19,409:INFO:Ridge Classifier Imported successfully
2024-04-23 14:54:19,412:INFO:Cross validation set to False
2024-04-23 14:54:19,412:INFO:Fitting Model
2024-04-23 14:54:19,650:INFO:Initializing predict_model()
2024-04-23 14:54:19,650:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(alpha=1.0,
                                                      class_weight=None,
                                                      classifier=RidgeClassifier(alpha=1.0,
                                                                                 class_weight=None,
                                                                                 copy_X=True,
                                                                                 fit_intercept=True,
                                                                                 max_iter=None,
                                                                                 positive=False,
                                                                                 random_state=8390,
                                                                                 solver='auto',
                                                                                 tol=0.0001),
                                                      copy_X=True,
                                                      fit_intercept=True,
                                                      max_iter=None,
                                                      positive=False,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      solver='auto',
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196C00>)
2024-04-23 14:54:19,651:INFO:Checking exceptions
2024-04-23 14:54:19,651:INFO:Preloading libraries
2024-04-23 14:54:19,692:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:54:19,753:INFO:_display_container: 5
2024-04-23 14:54:19,754:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=8390,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.09,
                                     random_state=8390, solver='auto',
                                     tol=0.0001)
2024-04-23 14:54:19,754:INFO:create_model() successfully completed......................................
2024-04-23 14:54:19,815:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:19,815:INFO:Creating metrics dataframe
2024-04-23 14:54:19,820:INFO:Initializing Random Forest Classifier
2024-04-23 14:54:19,820:INFO:Total runtime is 0.05753542979558309 minutes
2024-04-23 14:54:19,822:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:19,822:INFO:Initializing create_model()
2024-04-23 14:54:19,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:19,822:INFO:Checking exceptions
2024-04-23 14:54:19,822:INFO:Importing libraries
2024-04-23 14:54:19,822:INFO:Copying training dataset
2024-04-23 14:54:19,827:INFO:Defining folds
2024-04-23 14:54:19,827:INFO:Declaring metric variables
2024-04-23 14:54:19,829:INFO:Importing untrained model
2024-04-23 14:54:19,831:INFO:Random Forest Classifier Imported successfully
2024-04-23 14:54:19,834:INFO:Cross validation set to False
2024-04-23 14:54:19,834:INFO:Fitting Model
2024-04-23 14:54:20,624:INFO:Initializing predict_model()
2024-04-23 14:54:20,625:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51972E0>)
2024-04-23 14:54:20,625:INFO:Checking exceptions
2024-04-23 14:54:20,625:INFO:Preloading libraries
2024-04-23 14:54:20,790:INFO:_display_container: 5
2024-04-23 14:54:20,792:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       mo...
                                                                       random_state=8390,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.09,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 14:54:20,792:INFO:create_model() successfully completed......................................
2024-04-23 14:54:20,870:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:20,870:INFO:Creating metrics dataframe
2024-04-23 14:54:20,876:INFO:Initializing Quadratic Discriminant Analysis
2024-04-23 14:54:20,876:INFO:Total runtime is 0.07513600985209147 minutes
2024-04-23 14:54:20,877:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:20,878:INFO:Initializing create_model()
2024-04-23 14:54:20,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:20,878:INFO:Checking exceptions
2024-04-23 14:54:20,878:INFO:Importing libraries
2024-04-23 14:54:20,878:INFO:Copying training dataset
2024-04-23 14:54:20,882:INFO:Defining folds
2024-04-23 14:54:20,882:INFO:Declaring metric variables
2024-04-23 14:54:20,885:INFO:Importing untrained model
2024-04-23 14:54:20,887:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-23 14:54:20,889:INFO:Cross validation set to False
2024-04-23 14:54:20,890:INFO:Fitting Model
2024-04-23 14:54:21,120:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-23 14:54:21,133:INFO:Initializing predict_model()
2024-04-23 14:54:21,133:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                                               reg_param=0.0,
                                                                                               store_covariance=False,
                                                                                               tol=0.0001),
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      reg_param=0.0,
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197A60>)
2024-04-23 14:54:21,133:INFO:Checking exceptions
2024-04-23 14:54:21,133:INFO:Preloading libraries
2024-04-23 14:54:21,251:INFO:_display_container: 5
2024-04-23 14:54:21,252:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.09,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:54:21,252:INFO:create_model() successfully completed......................................
2024-04-23 14:54:21,324:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:21,324:INFO:Creating metrics dataframe
2024-04-23 14:54:21,329:INFO:Initializing Ada Boost Classifier
2024-04-23 14:54:21,329:INFO:Total runtime is 0.08269100983937581 minutes
2024-04-23 14:54:21,329:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:21,329:INFO:Initializing create_model()
2024-04-23 14:54:21,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:21,329:INFO:Checking exceptions
2024-04-23 14:54:21,329:INFO:Importing libraries
2024-04-23 14:54:21,329:INFO:Copying training dataset
2024-04-23 14:54:21,338:INFO:Defining folds
2024-04-23 14:54:21,338:INFO:Declaring metric variables
2024-04-23 14:54:21,340:INFO:Importing untrained model
2024-04-23 14:54:21,342:INFO:Ada Boost Classifier Imported successfully
2024-04-23 14:54:21,346:INFO:Cross validation set to False
2024-04-23 14:54:21,346:INFO:Fitting Model
2024-04-23 14:54:21,565:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 14:54:23,315:INFO:Initializing predict_model()
2024-04-23 14:54:23,315:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                                      classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                                    estimator=None,
                                                                                    learning_rate=1.0,
                                                                                    n_estimators=50,
                                                                                    random_state=8390),
                                                      estimator=None,
                                                      learning_rate=1.0,
                                                      n_estimators=50,
                                                      probability_threshold=0.09,
                                                      random_state=8390))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197B00>)
2024-04-23 14:54:23,315:INFO:Checking exceptions
2024-04-23 14:54:23,315:INFO:Preloading libraries
2024-04-23 14:54:23,480:INFO:_display_container: 5
2024-04-23 14:54:23,481:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8390)
2024-04-23 14:54:23,481:INFO:create_model() successfully completed......................................
2024-04-23 14:54:23,542:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:23,542:INFO:Creating metrics dataframe
2024-04-23 14:54:23,549:INFO:Initializing Gradient Boosting Classifier
2024-04-23 14:54:23,549:INFO:Total runtime is 0.11968025763829548 minutes
2024-04-23 14:54:23,551:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:23,551:INFO:Initializing create_model()
2024-04-23 14:54:23,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:23,552:INFO:Checking exceptions
2024-04-23 14:54:23,552:INFO:Importing libraries
2024-04-23 14:54:23,552:INFO:Copying training dataset
2024-04-23 14:54:23,556:INFO:Defining folds
2024-04-23 14:54:23,557:INFO:Declaring metric variables
2024-04-23 14:54:23,559:INFO:Importing untrained model
2024-04-23 14:54:23,561:INFO:Gradient Boosting Classifier Imported successfully
2024-04-23 14:54:23,564:INFO:Cross validation set to False
2024-04-23 14:54:23,564:INFO:Fitting Model
2024-04-23 14:54:32,831:INFO:Initializing predict_model()
2024-04-23 14:54:32,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5195120>)
2024-04-23 14:54:32,832:INFO:Checking exceptions
2024-04-23 14:54:32,832:INFO:Preloading libraries
2024-04-23 14:54:32,965:INFO:_display_container: 5
2024-04-23 14:54:32,967:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=8390, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 14:54:32,968:INFO:create_model() successfully completed......................................
2024-04-23 14:54:33,044:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:33,044:INFO:Creating metrics dataframe
2024-04-23 14:54:33,050:INFO:Initializing Linear Discriminant Analysis
2024-04-23 14:54:33,050:INFO:Total runtime is 0.278039546807607 minutes
2024-04-23 14:54:33,052:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:33,052:INFO:Initializing create_model()
2024-04-23 14:54:33,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:33,052:INFO:Checking exceptions
2024-04-23 14:54:33,052:INFO:Importing libraries
2024-04-23 14:54:33,052:INFO:Copying training dataset
2024-04-23 14:54:33,058:INFO:Defining folds
2024-04-23 14:54:33,058:INFO:Declaring metric variables
2024-04-23 14:54:33,059:INFO:Importing untrained model
2024-04-23 14:54:33,062:INFO:Linear Discriminant Analysis Imported successfully
2024-04-23 14:54:33,065:INFO:Cross validation set to False
2024-04-23 14:54:33,065:INFO:Fitting Model
2024-04-23 14:54:33,311:INFO:Initializing predict_model()
2024-04-23 14:54:33,311:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                                            n_components=None,
                                                                                            priors=None,
                                                                                            shrinkage=None,
                                                                                            solver='svd',
                                                                                            store_covariance=False,
                                                                                            tol=0.0001),
                                                      covariance_estimator=None,
                                                      n_components=None,
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      shrinkage=None,
                                                      solver='svd',
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196F20>)
2024-04-23 14:54:33,311:INFO:Checking exceptions
2024-04-23 14:54:33,311:INFO:Preloading libraries
2024-04-23 14:54:33,427:INFO:_display_container: 5
2024-04-23 14:54:33,428:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.09, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2024-04-23 14:54:33,428:INFO:create_model() successfully completed......................................
2024-04-23 14:54:33,494:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:33,494:INFO:Creating metrics dataframe
2024-04-23 14:54:33,500:INFO:Initializing Extra Trees Classifier
2024-04-23 14:54:33,500:INFO:Total runtime is 0.285539170106252 minutes
2024-04-23 14:54:33,502:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:33,504:INFO:Initializing create_model()
2024-04-23 14:54:33,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:33,504:INFO:Checking exceptions
2024-04-23 14:54:33,504:INFO:Importing libraries
2024-04-23 14:54:33,504:INFO:Copying training dataset
2024-04-23 14:54:33,510:INFO:Defining folds
2024-04-23 14:54:33,510:INFO:Declaring metric variables
2024-04-23 14:54:33,512:INFO:Importing untrained model
2024-04-23 14:54:33,514:INFO:Extra Trees Classifier Imported successfully
2024-04-23 14:54:33,517:INFO:Cross validation set to False
2024-04-23 14:54:33,517:INFO:Fitting Model
2024-04-23 14:54:33,903:INFO:Initializing predict_model()
2024-04-23 14:54:33,903:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                      warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51976A0>)
2024-04-23 14:54:33,903:INFO:Checking exceptions
2024-04-23 14:54:33,903:INFO:Preloading libraries
2024-04-23 14:54:34,069:INFO:_display_container: 5
2024-04-23 14:54:34,070:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     mo...
                                                                     random_state=8390,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.09,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 14:54:34,071:INFO:create_model() successfully completed......................................
2024-04-23 14:54:34,150:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:34,151:INFO:Creating metrics dataframe
2024-04-23 14:54:34,161:INFO:Initializing Light Gradient Boosting Machine
2024-04-23 14:54:34,161:INFO:Total runtime is 0.2965519785881042 minutes
2024-04-23 14:54:34,164:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:34,164:INFO:Initializing create_model()
2024-04-23 14:54:34,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:34,164:INFO:Checking exceptions
2024-04-23 14:54:34,164:INFO:Importing libraries
2024-04-23 14:54:34,165:INFO:Copying training dataset
2024-04-23 14:54:34,171:INFO:Defining folds
2024-04-23 14:54:34,171:INFO:Declaring metric variables
2024-04-23 14:54:34,174:INFO:Importing untrained model
2024-04-23 14:54:34,177:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-23 14:54:34,180:INFO:Cross validation set to False
2024-04-23 14:54:34,180:INFO:Fitting Model
2024-04-23 14:54:34,422:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-04-23 14:54:34,423:INFO:[LightGBM] [Info] Number of positive: 1021, number of negative: 16226
2024-04-23 14:54:34,424:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001079 seconds.
2024-04-23 14:54:34,424:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-04-23 14:54:34,424:INFO:[LightGBM] [Info] Total Bins 4092
2024-04-23 14:54:34,424:INFO:[LightGBM] [Info] Number of data points in the train set: 17247, number of used features: 18
2024-04-23 14:54:34,424:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.059199 -> initscore=-2.765832
2024-04-23 14:54:34,424:INFO:[LightGBM] [Info] Start training from score -2.765832
2024-04-23 14:54:34,512:INFO:Initializing predict_model()
2024-04-23 14:54:34,512:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                subsample_freq=0),
                                                      colsample_bytree=1.0,
                                                      importance_type='split',
                                                      learning_rate=0.1,
                                                      max_depth=-1,
                                                      min_child_samples=20,
                                                      min_child_weight=0.001,
                                                      min_split_gain=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1, num_leaves=31,
                                                      objective=None,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      reg_alpha=0.0,
                                                      reg_lambda=0.0,
                                                      subsample=1.0,
                                                      subsample_for_bin=200000,
                                                      subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196FC0>)
2024-04-23 14:54:34,512:INFO:Checking exceptions
2024-04-23 14:54:34,512:INFO:Preloading libraries
2024-04-23 14:54:34,659:INFO:_display_container: 5
2024-04-23 14:54:34,660:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=8...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.09,
                                     random_state=8390, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-04-23 14:54:34,661:INFO:create_model() successfully completed......................................
2024-04-23 14:54:34,718:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:34,718:INFO:Creating metrics dataframe
2024-04-23 14:54:34,724:INFO:Initializing Dummy Classifier
2024-04-23 14:54:34,724:INFO:Total runtime is 0.3059349536895752 minutes
2024-04-23 14:54:34,726:INFO:SubProcess create_model() called ==================================
2024-04-23 14:54:34,727:INFO:Initializing create_model()
2024-04-23 14:54:34,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC2C22690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:34,727:INFO:Checking exceptions
2024-04-23 14:54:34,727:INFO:Importing libraries
2024-04-23 14:54:34,727:INFO:Copying training dataset
2024-04-23 14:54:34,728:INFO:Defining folds
2024-04-23 14:54:34,728:INFO:Declaring metric variables
2024-04-23 14:54:34,728:INFO:Importing untrained model
2024-04-23 14:54:34,734:INFO:Dummy Classifier Imported successfully
2024-04-23 14:54:34,734:INFO:Cross validation set to False
2024-04-23 14:54:34,734:INFO:Fitting Model
2024-04-23 14:54:34,977:INFO:Initializing predict_model()
2024-04-23 14:54:34,977:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                                 random_state=8390,
                                                                                 strategy='prior'),
                                                      constant=None,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197C40>)
2024-04-23 14:54:34,977:INFO:Checking exceptions
2024-04-23 14:54:34,977:INFO:Preloading libraries
2024-04-23 14:54:35,022:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 14:54:35,106:INFO:_display_container: 5
2024-04-23 14:54:35,108:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=8390,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.09,
                                     random_state=8390, strategy='prior')
2024-04-23 14:54:35,108:INFO:create_model() successfully completed......................................
2024-04-23 14:54:35,184:INFO:SubProcess create_model() end ==================================
2024-04-23 14:54:35,184:INFO:Creating metrics dataframe
2024-04-23 14:54:35,193:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 14:54:35,198:INFO:Initializing create_model()
2024-04-23 14:54:35,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8390), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:54:35,199:INFO:Checking exceptions
2024-04-23 14:54:35,200:INFO:Importing libraries
2024-04-23 14:54:35,200:INFO:Copying training dataset
2024-04-23 14:54:35,204:INFO:Defining folds
2024-04-23 14:54:35,204:INFO:Declaring metric variables
2024-04-23 14:54:35,204:INFO:Importing untrained model
2024-04-23 14:54:35,204:INFO:Declaring custom model
2024-04-23 14:54:35,204:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 14:54:35,204:INFO:Cross validation set to False
2024-04-23 14:54:35,204:INFO:Fitting Model
2024-04-23 14:54:35,434:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 14:54:37,228:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8390)
2024-04-23 14:54:37,228:INFO:create_model() successfully completed......................................
2024-04-23 14:54:37,311:INFO:_master_model_container: 0
2024-04-23 14:54:37,312:INFO:_display_container: 5
2024-04-23 14:54:37,312:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8390)
2024-04-23 14:54:37,312:INFO:compare_models() successfully completed......................................
2024-04-23 14:55:29,562:INFO:Initializing compare_models()
2024-04-23 14:55:29,562:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, include=['lr'], exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.09, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, 'include': ['lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.09, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 14:55:29,562:INFO:Checking exceptions
2024-04-23 14:55:29,565:INFO:Preparing display monitor
2024-04-23 14:55:29,576:INFO:Initializing Logistic Regression
2024-04-23 14:55:29,576:INFO:Total runtime is 0.0 minutes
2024-04-23 14:55:29,578:INFO:SubProcess create_model() called ==================================
2024-04-23 14:55:29,578:INFO:Initializing create_model()
2024-04-23 14:55:29,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53FAA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:55:29,578:INFO:Checking exceptions
2024-04-23 14:55:29,578:INFO:Importing libraries
2024-04-23 14:55:29,578:INFO:Copying training dataset
2024-04-23 14:55:29,583:INFO:Defining folds
2024-04-23 14:55:29,583:INFO:Declaring metric variables
2024-04-23 14:55:29,584:INFO:Importing untrained model
2024-04-23 14:55:29,587:INFO:Logistic Regression Imported successfully
2024-04-23 14:55:29,590:INFO:Cross validation set to False
2024-04-23 14:55:29,590:INFO:Fitting Model
2024-04-23 14:55:29,864:INFO:Initializing predict_model()
2024-04-23 14:55:29,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=8390,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51D8FE0>)
2024-04-23 14:55:29,864:INFO:Checking exceptions
2024-04-23 14:55:29,864:INFO:Preloading libraries
2024-04-23 14:55:29,979:INFO:_display_container: 6
2024-04-23 14:55:29,980:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 14:55:29,980:INFO:create_model() successfully completed......................................
2024-04-23 14:55:30,049:INFO:SubProcess create_model() end ==================================
2024-04-23 14:55:30,050:INFO:Creating metrics dataframe
2024-04-23 14:55:30,055:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 14:55:30,060:INFO:Initializing create_model()
2024-04-23 14:55:30,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 14:55:30,060:INFO:Checking exceptions
2024-04-23 14:55:30,061:INFO:Importing libraries
2024-04-23 14:55:30,061:INFO:Copying training dataset
2024-04-23 14:55:30,066:INFO:Defining folds
2024-04-23 14:55:30,066:INFO:Declaring metric variables
2024-04-23 14:55:30,066:INFO:Importing untrained model
2024-04-23 14:55:30,066:INFO:Declaring custom model
2024-04-23 14:55:30,067:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 14:55:30,068:INFO:Cross validation set to False
2024-04-23 14:55:30,068:INFO:Fitting Model
2024-04-23 14:55:30,309:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 14:55:30,309:INFO:create_model() successfully completed......................................
2024-04-23 14:55:30,376:INFO:_master_model_container: 0
2024-04-23 14:55:30,376:INFO:_display_container: 6
2024-04-23 14:55:30,377:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 14:55:30,377:INFO:compare_models() successfully completed......................................
2024-04-23 14:55:34,380:INFO:Initializing plot_model()
2024-04-23 14:55:34,380:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-23 14:55:34,380:INFO:Checking exceptions
2024-04-23 14:55:34,383:INFO:Preloading libraries
2024-04-23 14:55:34,383:INFO:Copying training dataset
2024-04-23 14:55:34,383:INFO:Plot type: confusion_matrix
2024-04-23 14:55:34,472:INFO:Fitting Model
2024-04-23 14:55:34,472:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-23 14:55:34,474:INFO:Scoring test/hold-out set
2024-04-23 14:55:34,539:INFO:Visual Rendered Successfully
2024-04-23 14:55:34,600:INFO:plot_model() successfully completed......................................
2024-04-23 15:03:15,492:INFO:Initializing compare_models()
2024-04-23 15:03:15,494:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, include=None, exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.09, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.09, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 15:03:15,494:INFO:Checking exceptions
2024-04-23 15:03:15,497:INFO:Preparing display monitor
2024-04-23 15:03:15,510:INFO:Initializing Logistic Regression
2024-04-23 15:03:15,510:INFO:Total runtime is 0.0 minutes
2024-04-23 15:03:15,511:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:15,512:INFO:Initializing create_model()
2024-04-23 15:03:15,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:15,512:INFO:Checking exceptions
2024-04-23 15:03:15,512:INFO:Importing libraries
2024-04-23 15:03:15,512:INFO:Copying training dataset
2024-04-23 15:03:15,516:INFO:Defining folds
2024-04-23 15:03:15,516:INFO:Declaring metric variables
2024-04-23 15:03:15,518:INFO:Importing untrained model
2024-04-23 15:03:15,520:INFO:Logistic Regression Imported successfully
2024-04-23 15:03:15,523:INFO:Cross validation set to False
2024-04-23 15:03:15,523:INFO:Fitting Model
2024-04-23 15:03:15,783:INFO:Initializing predict_model()
2024-04-23 15:03:15,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=8390,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AF09FBBA0>)
2024-04-23 15:03:15,783:INFO:Checking exceptions
2024-04-23 15:03:15,783:INFO:Preloading libraries
2024-04-23 15:03:15,910:INFO:_display_container: 7
2024-04-23 15:03:15,911:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8390,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=8390, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 15:03:15,911:INFO:create_model() successfully completed......................................
2024-04-23 15:03:15,969:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:15,969:INFO:Creating metrics dataframe
2024-04-23 15:03:15,974:INFO:Initializing K Neighbors Classifier
2024-04-23 15:03:15,974:INFO:Total runtime is 0.007740290959676107 minutes
2024-04-23 15:03:15,976:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:15,977:INFO:Initializing create_model()
2024-04-23 15:03:15,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:15,977:INFO:Checking exceptions
2024-04-23 15:03:15,977:INFO:Importing libraries
2024-04-23 15:03:15,977:INFO:Copying training dataset
2024-04-23 15:03:15,983:INFO:Defining folds
2024-04-23 15:03:15,983:INFO:Declaring metric variables
2024-04-23 15:03:15,984:INFO:Importing untrained model
2024-04-23 15:03:15,985:INFO:K Neighbors Classifier Imported successfully
2024-04-23 15:03:15,989:INFO:Cross validation set to False
2024-04-23 15:03:15,989:INFO:Fitting Model
2024-04-23 15:03:16,229:INFO:Initializing predict_model()
2024-04-23 15:03:16,229:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='auto',
                                                      classifier=KNeighborsClassifier(algorithm='auto',
                                                                                      leaf_size=30,
                                                                                      metric='minkowski',
                                                                                      metric_params=None,
                                                                                      n_jobs=-1,
                                                                                      n_neighbors=5,
                                                                                      p=2,
                                                                                      weights='uniform'),
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2,
                                                      probability_threshold=0.09,
                                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537FBA0>)
2024-04-23 15:03:16,229:INFO:Checking exceptions
2024-04-23 15:03:16,229:INFO:Preloading libraries
2024-04-23 15:03:16,729:INFO:_display_container: 7
2024-04-23 15:03:16,734:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.09,
                                     weights='uniform')
2024-04-23 15:03:16,734:INFO:create_model() successfully completed......................................
2024-04-23 15:03:16,790:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:16,790:INFO:Creating metrics dataframe
2024-04-23 15:03:16,795:INFO:Initializing Naive Bayes
2024-04-23 15:03:16,795:INFO:Total runtime is 0.021422000726064046 minutes
2024-04-23 15:03:16,797:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:16,797:INFO:Initializing create_model()
2024-04-23 15:03:16,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:16,797:INFO:Checking exceptions
2024-04-23 15:03:16,797:INFO:Importing libraries
2024-04-23 15:03:16,798:INFO:Copying training dataset
2024-04-23 15:03:16,802:INFO:Defining folds
2024-04-23 15:03:16,802:INFO:Declaring metric variables
2024-04-23 15:03:16,804:INFO:Importing untrained model
2024-04-23 15:03:16,805:INFO:Naive Bayes Imported successfully
2024-04-23 15:03:16,808:INFO:Cross validation set to False
2024-04-23 15:03:16,808:INFO:Fitting Model
2024-04-23 15:03:17,050:INFO:Initializing predict_model()
2024-04-23 15:03:17,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                                            var_smoothing=1e-09),
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537D080>)
2024-04-23 15:03:17,050:INFO:Checking exceptions
2024-04-23 15:03:17,050:INFO:Preloading libraries
2024-04-23 15:03:17,167:INFO:_display_container: 7
2024-04-23 15:03:17,169:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.09,
                                     var_smoothing=1e-09)
2024-04-23 15:03:17,169:INFO:create_model() successfully completed......................................
2024-04-23 15:03:17,228:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:17,228:INFO:Creating metrics dataframe
2024-04-23 15:03:17,234:INFO:Initializing Decision Tree Classifier
2024-04-23 15:03:17,234:INFO:Total runtime is 0.02874226172765096 minutes
2024-04-23 15:03:17,237:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:17,237:INFO:Initializing create_model()
2024-04-23 15:03:17,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:17,237:INFO:Checking exceptions
2024-04-23 15:03:17,237:INFO:Importing libraries
2024-04-23 15:03:17,237:INFO:Copying training dataset
2024-04-23 15:03:17,242:INFO:Defining folds
2024-04-23 15:03:17,242:INFO:Declaring metric variables
2024-04-23 15:03:17,244:INFO:Importing untrained model
2024-04-23 15:03:17,247:INFO:Decision Tree Classifier Imported successfully
2024-04-23 15:03:17,250:INFO:Cross validation set to False
2024-04-23 15:03:17,250:INFO:Fitting Model
2024-04-23 15:03:17,941:INFO:Initializing predict_model()
2024-04-23 15:03:17,941:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=8390,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537F420>)
2024-04-23 15:03:17,942:INFO:Checking exceptions
2024-04-23 15:03:17,942:INFO:Preloading libraries
2024-04-23 15:03:18,057:INFO:_display_container: 7
2024-04-23 15:03:18,058:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=8390,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.09,
                                     random_state=8390, splitter='best')
2024-04-23 15:03:18,058:INFO:create_model() successfully completed......................................
2024-04-23 15:03:18,124:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:18,125:INFO:Creating metrics dataframe
2024-04-23 15:03:18,130:INFO:Initializing SVM - Linear Kernel
2024-04-23 15:03:18,130:INFO:Total runtime is 0.043680707613627114 minutes
2024-04-23 15:03:18,132:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:18,132:INFO:Initializing create_model()
2024-04-23 15:03:18,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:18,132:INFO:Checking exceptions
2024-04-23 15:03:18,132:INFO:Importing libraries
2024-04-23 15:03:18,132:INFO:Copying training dataset
2024-04-23 15:03:18,138:INFO:Defining folds
2024-04-23 15:03:18,138:INFO:Declaring metric variables
2024-04-23 15:03:18,139:INFO:Importing untrained model
2024-04-23 15:03:18,141:INFO:SVM - Linear Kernel Imported successfully
2024-04-23 15:03:18,146:INFO:Cross validation set to False
2024-04-23 15:03:18,147:INFO:Fitting Model
2024-04-23 15:03:18,409:INFO:Initializing predict_model()
2024-04-23 15:03:18,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                               validation_fraction=0.1,
                                                                               verbose=0,
                                                                               warm_start=False),
                                                      early_stopping=False,
                                                      epsilon=0.1, eta0=0.001,
                                                      fit_intercept=True,
                                                      l1_ratio=0.15,
                                                      learning_rate='optimal',
                                                      loss='hinge',
                                                      max_iter=1000,
                                                      n_iter_no_change=5,
                                                      n_jobs=-1, penalty='l2',
                                                      power_t=0.5,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      shuffle=True, tol=0.001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537E020>)
2024-04-23 15:03:18,409:INFO:Checking exceptions
2024-04-23 15:03:18,409:INFO:Preloading libraries
2024-04-23 15:03:18,456:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:03:18,528:INFO:_display_container: 7
2024-04-23 15:03:18,528:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=839...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.09,
                                     random_state=8390, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2024-04-23 15:03:18,528:INFO:create_model() successfully completed......................................
2024-04-23 15:03:18,594:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:18,595:INFO:Creating metrics dataframe
2024-04-23 15:03:18,602:INFO:Initializing Ridge Classifier
2024-04-23 15:03:18,602:INFO:Total runtime is 0.05154773791631063 minutes
2024-04-23 15:03:18,604:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:18,604:INFO:Initializing create_model()
2024-04-23 15:03:18,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:18,605:INFO:Checking exceptions
2024-04-23 15:03:18,605:INFO:Importing libraries
2024-04-23 15:03:18,605:INFO:Copying training dataset
2024-04-23 15:03:18,610:INFO:Defining folds
2024-04-23 15:03:18,610:INFO:Declaring metric variables
2024-04-23 15:03:18,612:INFO:Importing untrained model
2024-04-23 15:03:18,614:INFO:Ridge Classifier Imported successfully
2024-04-23 15:03:18,617:INFO:Cross validation set to False
2024-04-23 15:03:18,617:INFO:Fitting Model
2024-04-23 15:03:18,860:INFO:Initializing predict_model()
2024-04-23 15:03:18,860:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(alpha=1.0,
                                                      class_weight=None,
                                                      classifier=RidgeClassifier(alpha=1.0,
                                                                                 class_weight=None,
                                                                                 copy_X=True,
                                                                                 fit_intercept=True,
                                                                                 max_iter=None,
                                                                                 positive=False,
                                                                                 random_state=8390,
                                                                                 solver='auto',
                                                                                 tol=0.0001),
                                                      copy_X=True,
                                                      fit_intercept=True,
                                                      max_iter=None,
                                                      positive=False,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      solver='auto',
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537E5C0>)
2024-04-23 15:03:18,860:INFO:Checking exceptions
2024-04-23 15:03:18,860:INFO:Preloading libraries
2024-04-23 15:03:18,907:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:03:18,981:INFO:_display_container: 7
2024-04-23 15:03:18,982:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=8390,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.09,
                                     random_state=8390, solver='auto',
                                     tol=0.0001)
2024-04-23 15:03:18,982:INFO:create_model() successfully completed......................................
2024-04-23 15:03:19,051:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:19,051:INFO:Creating metrics dataframe
2024-04-23 15:03:19,056:INFO:Initializing Random Forest Classifier
2024-04-23 15:03:19,056:INFO:Total runtime is 0.059101665019989015 minutes
2024-04-23 15:03:19,058:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:19,058:INFO:Initializing create_model()
2024-04-23 15:03:19,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:19,059:INFO:Checking exceptions
2024-04-23 15:03:19,059:INFO:Importing libraries
2024-04-23 15:03:19,059:INFO:Copying training dataset
2024-04-23 15:03:19,063:INFO:Defining folds
2024-04-23 15:03:19,063:INFO:Declaring metric variables
2024-04-23 15:03:19,065:INFO:Importing untrained model
2024-04-23 15:03:19,068:INFO:Random Forest Classifier Imported successfully
2024-04-23 15:03:19,071:INFO:Cross validation set to False
2024-04-23 15:03:19,071:INFO:Fitting Model
2024-04-23 15:03:19,856:INFO:Initializing predict_model()
2024-04-23 15:03:19,856:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537C860>)
2024-04-23 15:03:19,857:INFO:Checking exceptions
2024-04-23 15:03:19,857:INFO:Preloading libraries
2024-04-23 15:03:20,024:INFO:_display_container: 7
2024-04-23 15:03:20,026:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       mo...
                                                                       random_state=8390,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.09,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 15:03:20,026:INFO:create_model() successfully completed......................................
2024-04-23 15:03:20,101:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:20,102:INFO:Creating metrics dataframe
2024-04-23 15:03:20,108:INFO:Initializing Quadratic Discriminant Analysis
2024-04-23 15:03:20,108:INFO:Total runtime is 0.07663926680882772 minutes
2024-04-23 15:03:20,110:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:20,111:INFO:Initializing create_model()
2024-04-23 15:03:20,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:20,111:INFO:Checking exceptions
2024-04-23 15:03:20,111:INFO:Importing libraries
2024-04-23 15:03:20,111:INFO:Copying training dataset
2024-04-23 15:03:20,119:INFO:Defining folds
2024-04-23 15:03:20,119:INFO:Declaring metric variables
2024-04-23 15:03:20,121:INFO:Importing untrained model
2024-04-23 15:03:20,122:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-23 15:03:20,125:INFO:Cross validation set to False
2024-04-23 15:03:20,125:INFO:Fitting Model
2024-04-23 15:03:20,368:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-23 15:03:20,381:INFO:Initializing predict_model()
2024-04-23 15:03:20,381:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                                               reg_param=0.0,
                                                                                               store_covariance=False,
                                                                                               tol=0.0001),
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      reg_param=0.0,
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537EF20>)
2024-04-23 15:03:20,381:INFO:Checking exceptions
2024-04-23 15:03:20,381:INFO:Preloading libraries
2024-04-23 15:03:20,517:INFO:_display_container: 7
2024-04-23 15:03:20,518:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.09,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 15:03:20,518:INFO:create_model() successfully completed......................................
2024-04-23 15:03:20,602:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:20,603:INFO:Creating metrics dataframe
2024-04-23 15:03:20,612:INFO:Initializing Ada Boost Classifier
2024-04-23 15:03:20,612:INFO:Total runtime is 0.08504655758539836 minutes
2024-04-23 15:03:20,617:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:20,617:INFO:Initializing create_model()
2024-04-23 15:03:20,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:20,617:INFO:Checking exceptions
2024-04-23 15:03:20,617:INFO:Importing libraries
2024-04-23 15:03:20,617:INFO:Copying training dataset
2024-04-23 15:03:20,622:INFO:Defining folds
2024-04-23 15:03:20,622:INFO:Declaring metric variables
2024-04-23 15:03:20,625:INFO:Importing untrained model
2024-04-23 15:03:20,627:INFO:Ada Boost Classifier Imported successfully
2024-04-23 15:03:20,631:INFO:Cross validation set to False
2024-04-23 15:03:20,631:INFO:Fitting Model
2024-04-23 15:03:20,860:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 15:03:22,599:INFO:Initializing predict_model()
2024-04-23 15:03:22,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                                      classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                                    estimator=None,
                                                                                    learning_rate=1.0,
                                                                                    n_estimators=50,
                                                                                    random_state=8390),
                                                      estimator=None,
                                                      learning_rate=1.0,
                                                      n_estimators=50,
                                                      probability_threshold=0.09,
                                                      random_state=8390))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537F920>)
2024-04-23 15:03:22,599:INFO:Checking exceptions
2024-04-23 15:03:22,599:INFO:Preloading libraries
2024-04-23 15:03:22,768:INFO:_display_container: 7
2024-04-23 15:03:22,769:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8390)
2024-04-23 15:03:22,769:INFO:create_model() successfully completed......................................
2024-04-23 15:03:22,848:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:22,848:INFO:Creating metrics dataframe
2024-04-23 15:03:22,855:INFO:Initializing Gradient Boosting Classifier
2024-04-23 15:03:22,855:INFO:Total runtime is 0.12243192990620932 minutes
2024-04-23 15:03:22,858:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:22,859:INFO:Initializing create_model()
2024-04-23 15:03:22,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:22,859:INFO:Checking exceptions
2024-04-23 15:03:22,859:INFO:Importing libraries
2024-04-23 15:03:22,859:INFO:Copying training dataset
2024-04-23 15:03:22,864:INFO:Defining folds
2024-04-23 15:03:22,865:INFO:Declaring metric variables
2024-04-23 15:03:22,867:INFO:Importing untrained model
2024-04-23 15:03:22,868:INFO:Gradient Boosting Classifier Imported successfully
2024-04-23 15:03:22,871:INFO:Cross validation set to False
2024-04-23 15:03:22,871:INFO:Fitting Model
2024-04-23 15:03:32,091:INFO:Initializing predict_model()
2024-04-23 15:03:32,091:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537FBA0>)
2024-04-23 15:03:32,091:INFO:Checking exceptions
2024-04-23 15:03:32,091:INFO:Preloading libraries
2024-04-23 15:03:32,221:INFO:_display_container: 7
2024-04-23 15:03:32,223:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=8390, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 15:03:32,223:INFO:create_model() successfully completed......................................
2024-04-23 15:03:32,299:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:32,299:INFO:Creating metrics dataframe
2024-04-23 15:03:32,305:INFO:Initializing Linear Discriminant Analysis
2024-04-23 15:03:32,305:INFO:Total runtime is 0.2799210627873739 minutes
2024-04-23 15:03:32,307:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:32,307:INFO:Initializing create_model()
2024-04-23 15:03:32,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:32,307:INFO:Checking exceptions
2024-04-23 15:03:32,307:INFO:Importing libraries
2024-04-23 15:03:32,307:INFO:Copying training dataset
2024-04-23 15:03:32,313:INFO:Defining folds
2024-04-23 15:03:32,313:INFO:Declaring metric variables
2024-04-23 15:03:32,314:INFO:Importing untrained model
2024-04-23 15:03:32,316:INFO:Linear Discriminant Analysis Imported successfully
2024-04-23 15:03:32,319:INFO:Cross validation set to False
2024-04-23 15:03:32,319:INFO:Fitting Model
2024-04-23 15:03:32,566:INFO:Initializing predict_model()
2024-04-23 15:03:32,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                                            n_components=None,
                                                                                            priors=None,
                                                                                            shrinkage=None,
                                                                                            solver='svd',
                                                                                            store_covariance=False,
                                                                                            tol=0.0001),
                                                      covariance_estimator=None,
                                                      n_components=None,
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      shrinkage=None,
                                                      solver='svd',
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537D300>)
2024-04-23 15:03:32,566:INFO:Checking exceptions
2024-04-23 15:03:32,566:INFO:Preloading libraries
2024-04-23 15:03:32,676:INFO:_display_container: 7
2024-04-23 15:03:32,678:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.09, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2024-04-23 15:03:32,678:INFO:create_model() successfully completed......................................
2024-04-23 15:03:32,746:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:32,746:INFO:Creating metrics dataframe
2024-04-23 15:03:32,754:INFO:Initializing Extra Trees Classifier
2024-04-23 15:03:32,755:INFO:Total runtime is 0.2874175628026327 minutes
2024-04-23 15:03:32,757:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:32,757:INFO:Initializing create_model()
2024-04-23 15:03:32,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:32,757:INFO:Checking exceptions
2024-04-23 15:03:32,757:INFO:Importing libraries
2024-04-23 15:03:32,758:INFO:Copying training dataset
2024-04-23 15:03:32,764:INFO:Defining folds
2024-04-23 15:03:32,764:INFO:Declaring metric variables
2024-04-23 15:03:32,765:INFO:Importing untrained model
2024-04-23 15:03:32,768:INFO:Extra Trees Classifier Imported successfully
2024-04-23 15:03:32,770:INFO:Cross validation set to False
2024-04-23 15:03:32,770:INFO:Fitting Model
2024-04-23 15:03:33,162:INFO:Initializing predict_model()
2024-04-23 15:03:33,162:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                      warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537F7E0>)
2024-04-23 15:03:33,163:INFO:Checking exceptions
2024-04-23 15:03:33,163:INFO:Preloading libraries
2024-04-23 15:03:33,320:INFO:_display_container: 7
2024-04-23 15:03:33,321:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     mo...
                                                                     random_state=8390,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.09,
                                     random_state=8390, verbose=0,
                                     warm_start=False)
2024-04-23 15:03:33,321:INFO:create_model() successfully completed......................................
2024-04-23 15:03:33,387:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:33,387:INFO:Creating metrics dataframe
2024-04-23 15:03:33,394:INFO:Initializing Light Gradient Boosting Machine
2024-04-23 15:03:33,394:INFO:Total runtime is 0.2980805436770122 minutes
2024-04-23 15:03:33,397:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:33,397:INFO:Initializing create_model()
2024-04-23 15:03:33,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:33,397:INFO:Checking exceptions
2024-04-23 15:03:33,397:INFO:Importing libraries
2024-04-23 15:03:33,397:INFO:Copying training dataset
2024-04-23 15:03:33,401:INFO:Defining folds
2024-04-23 15:03:33,401:INFO:Declaring metric variables
2024-04-23 15:03:33,403:INFO:Importing untrained model
2024-04-23 15:03:33,405:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-23 15:03:33,407:INFO:Cross validation set to False
2024-04-23 15:03:33,407:INFO:Fitting Model
2024-04-23 15:03:33,645:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-04-23 15:03:33,646:INFO:[LightGBM] [Info] Number of positive: 1021, number of negative: 16226
2024-04-23 15:03:33,647:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000973 seconds.
2024-04-23 15:03:33,647:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-04-23 15:03:33,647:INFO:[LightGBM] [Info] Total Bins 4092
2024-04-23 15:03:33,647:INFO:[LightGBM] [Info] Number of data points in the train set: 17247, number of used features: 18
2024-04-23 15:03:33,648:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.059199 -> initscore=-2.765832
2024-04-23 15:03:33,648:INFO:[LightGBM] [Info] Start training from score -2.765832
2024-04-23 15:03:33,728:INFO:Initializing predict_model()
2024-04-23 15:03:33,728:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                subsample_freq=0),
                                                      colsample_bytree=1.0,
                                                      importance_type='split',
                                                      learning_rate=0.1,
                                                      max_depth=-1,
                                                      min_child_samples=20,
                                                      min_child_weight=0.001,
                                                      min_split_gain=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1, num_leaves=31,
                                                      objective=None,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      reg_alpha=0.0,
                                                      reg_lambda=0.0,
                                                      subsample=1.0,
                                                      subsample_for_bin=200000,
                                                      subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537D260>)
2024-04-23 15:03:33,728:INFO:Checking exceptions
2024-04-23 15:03:33,728:INFO:Preloading libraries
2024-04-23 15:03:33,866:INFO:_display_container: 7
2024-04-23 15:03:33,867:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=8...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.09,
                                     random_state=8390, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-04-23 15:03:33,868:INFO:create_model() successfully completed......................................
2024-04-23 15:03:33,924:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:33,924:INFO:Creating metrics dataframe
2024-04-23 15:03:33,930:INFO:Initializing Dummy Classifier
2024-04-23 15:03:33,930:INFO:Total runtime is 0.3070104678471884 minutes
2024-04-23 15:03:33,932:INFO:SubProcess create_model() called ==================================
2024-04-23 15:03:33,932:INFO:Initializing create_model()
2024-04-23 15:03:33,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC53F9D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:33,932:INFO:Checking exceptions
2024-04-23 15:03:33,932:INFO:Importing libraries
2024-04-23 15:03:33,932:INFO:Copying training dataset
2024-04-23 15:03:33,937:INFO:Defining folds
2024-04-23 15:03:33,937:INFO:Declaring metric variables
2024-04-23 15:03:33,938:INFO:Importing untrained model
2024-04-23 15:03:33,940:INFO:Dummy Classifier Imported successfully
2024-04-23 15:03:33,943:INFO:Cross validation set to False
2024-04-23 15:03:33,943:INFO:Fitting Model
2024-04-23 15:03:34,198:INFO:Initializing predict_model()
2024-04-23 15:03:34,198:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                                 random_state=8390,
                                                                                 strategy='prior'),
                                                      constant=None,
                                                      probability_threshold=0.09,
                                                      random_state=8390,
                                                      strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537DBC0>)
2024-04-23 15:03:34,198:INFO:Checking exceptions
2024-04-23 15:03:34,198:INFO:Preloading libraries
2024-04-23 15:03:34,241:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:03:34,320:INFO:_display_container: 7
2024-04-23 15:03:34,321:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=8390,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.09,
                                     random_state=8390, strategy='prior')
2024-04-23 15:03:34,321:INFO:create_model() successfully completed......................................
2024-04-23 15:03:34,386:INFO:SubProcess create_model() end ==================================
2024-04-23 15:03:34,386:INFO:Creating metrics dataframe
2024-04-23 15:03:34,392:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 15:03:34,399:INFO:Initializing create_model()
2024-04-23 15:03:34,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC41BEB90>, estimator=CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8390), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:03:34,399:INFO:Checking exceptions
2024-04-23 15:03:34,400:INFO:Importing libraries
2024-04-23 15:03:34,400:INFO:Copying training dataset
2024-04-23 15:03:34,404:INFO:Defining folds
2024-04-23 15:03:34,404:INFO:Declaring metric variables
2024-04-23 15:03:34,404:INFO:Importing untrained model
2024-04-23 15:03:34,404:INFO:Declaring custom model
2024-04-23 15:03:34,405:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 15:03:34,406:INFO:Cross validation set to False
2024-04-23 15:03:34,406:INFO:Fitting Model
2024-04-23 15:03:34,634:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 15:03:36,375:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8390)
2024-04-23 15:03:36,375:INFO:create_model() successfully completed......................................
2024-04-23 15:03:36,458:INFO:_master_model_container: 0
2024-04-23 15:03:36,458:INFO:_display_container: 7
2024-04-23 15:03:36,458:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8390),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8390)
2024-04-23 15:03:36,459:INFO:compare_models() successfully completed......................................
2024-04-23 15:05:23,248:INFO:PyCaret ClassificationExperiment
2024-04-23 15:05:23,249:INFO:Logging name: clf-default-name
2024-04-23 15:05:23,249:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-23 15:05:23,249:INFO:version 3.3.1
2024-04-23 15:05:23,249:INFO:Initializing setup()
2024-04-23 15:05:23,249:INFO:self.USI: 9f27
2024-04-23 15:05:23,249:INFO:self._variable_keys: {'n_jobs_param', 'y_train', 'y', 'X_test', 'X', 'fold_groups_param', 'logging_param', 'y_test', 'USI', 'fold_generator', 'memory', 'idx', 'fold_shuffle_param', 'exp_id', 'is_multiclass', 'data', 'target_param', 'exp_name_log', '_ml_usecase', 'X_train', 'pipeline', '_available_plots', 'gpu_n_jobs_param', 'fix_imbalance', 'html_param', 'seed', 'log_plots_param', 'gpu_param'}
2024-04-23 15:05:23,249:INFO:Checking environment
2024-04-23 15:05:23,249:INFO:python_version: 3.11.9
2024-04-23 15:05:23,249:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-04-23 15:05:23,249:INFO:machine: AMD64
2024-04-23 15:05:23,249:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-23 15:05:23,252:INFO:Memory: svmem(total=33854128128, available=18310619136, percent=45.9, used=15543508992, free=18310619136)
2024-04-23 15:05:23,252:INFO:Physical Core: 14
2024-04-23 15:05:23,253:INFO:Logical Core: 20
2024-04-23 15:05:23,253:INFO:Checking libraries
2024-04-23 15:05:23,253:INFO:System:
2024-04-23 15:05:23,253:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-04-23 15:05:23,253:INFO:executable: c:\Users\Migrando1\SofwarePackages\python.exe
2024-04-23 15:05:23,253:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-23 15:05:23,253:INFO:PyCaret required dependencies:
2024-04-23 15:05:23,253:INFO:                 pip: 24.0
2024-04-23 15:05:23,253:INFO:          setuptools: 65.5.0
2024-04-23 15:05:23,253:INFO:             pycaret: 3.3.1
2024-04-23 15:05:23,253:INFO:             IPython: 8.23.0
2024-04-23 15:05:23,253:INFO:          ipywidgets: 8.1.2
2024-04-23 15:05:23,253:INFO:                tqdm: 4.66.2
2024-04-23 15:05:23,253:INFO:               numpy: 1.26.4
2024-04-23 15:05:23,253:INFO:              pandas: 2.1.4
2024-04-23 15:05:23,253:INFO:              jinja2: 3.1.3
2024-04-23 15:05:23,253:INFO:               scipy: 1.11.4
2024-04-23 15:05:23,253:INFO:              joblib: 1.3.2
2024-04-23 15:05:23,253:INFO:             sklearn: 1.4.2
2024-04-23 15:05:23,253:INFO:                pyod: 1.1.3
2024-04-23 15:05:23,253:INFO:            imblearn: 0.12.2
2024-04-23 15:05:23,253:INFO:   category_encoders: 2.6.3
2024-04-23 15:05:23,253:INFO:            lightgbm: 4.3.0
2024-04-23 15:05:23,253:INFO:               numba: 0.59.1
2024-04-23 15:05:23,253:INFO:            requests: 2.31.0
2024-04-23 15:05:23,253:INFO:          matplotlib: 3.7.5
2024-04-23 15:05:23,253:INFO:          scikitplot: 0.3.7
2024-04-23 15:05:23,253:INFO:         yellowbrick: 1.5
2024-04-23 15:05:23,253:INFO:              plotly: 5.21.0
2024-04-23 15:05:23,253:INFO:    plotly-resampler: Not installed
2024-04-23 15:05:23,253:INFO:             kaleido: 0.2.1
2024-04-23 15:05:23,253:INFO:           schemdraw: 0.15
2024-04-23 15:05:23,253:INFO:         statsmodels: 0.14.2
2024-04-23 15:05:23,253:INFO:              sktime: 0.26.0
2024-04-23 15:05:23,253:INFO:               tbats: 1.1.3
2024-04-23 15:05:23,253:INFO:            pmdarima: 2.0.4
2024-04-23 15:05:23,253:INFO:              psutil: 5.9.8
2024-04-23 15:05:23,253:INFO:          markupsafe: 2.1.5
2024-04-23 15:05:23,253:INFO:             pickle5: Not installed
2024-04-23 15:05:23,253:INFO:         cloudpickle: 3.0.0
2024-04-23 15:05:23,253:INFO:         deprecation: 2.1.0
2024-04-23 15:05:23,253:INFO:              xxhash: 3.4.1
2024-04-23 15:05:23,253:INFO:           wurlitzer: Not installed
2024-04-23 15:05:23,253:INFO:PyCaret optional dependencies:
2024-04-23 15:05:23,253:INFO:                shap: Not installed
2024-04-23 15:05:23,253:INFO:           interpret: Not installed
2024-04-23 15:05:23,253:INFO:                umap: Not installed
2024-04-23 15:05:23,253:INFO:     ydata_profiling: Not installed
2024-04-23 15:05:23,253:INFO:  explainerdashboard: Not installed
2024-04-23 15:05:23,253:INFO:             autoviz: Not installed
2024-04-23 15:05:23,253:INFO:           fairlearn: Not installed
2024-04-23 15:05:23,253:INFO:          deepchecks: Not installed
2024-04-23 15:05:23,254:INFO:             xgboost: Not installed
2024-04-23 15:05:23,254:INFO:            catboost: Not installed
2024-04-23 15:05:23,254:INFO:              kmodes: Not installed
2024-04-23 15:05:23,254:INFO:             mlxtend: Not installed
2024-04-23 15:05:23,254:INFO:       statsforecast: Not installed
2024-04-23 15:05:23,254:INFO:        tune_sklearn: Not installed
2024-04-23 15:05:23,254:INFO:                 ray: Not installed
2024-04-23 15:05:23,254:INFO:            hyperopt: Not installed
2024-04-23 15:05:23,254:INFO:              optuna: Not installed
2024-04-23 15:05:23,254:INFO:               skopt: Not installed
2024-04-23 15:05:23,254:INFO:              mlflow: Not installed
2024-04-23 15:05:23,254:INFO:              gradio: Not installed
2024-04-23 15:05:23,254:INFO:             fastapi: Not installed
2024-04-23 15:05:23,254:INFO:             uvicorn: Not installed
2024-04-23 15:05:23,254:INFO:              m2cgen: Not installed
2024-04-23 15:05:23,254:INFO:           evidently: Not installed
2024-04-23 15:05:23,254:INFO:               fugue: Not installed
2024-04-23 15:05:23,254:INFO:           streamlit: Not installed
2024-04-23 15:05:23,254:INFO:             prophet: Not installed
2024-04-23 15:05:23,254:INFO:None
2024-04-23 15:05:23,254:INFO:Set up data.
2024-04-23 15:05:23,331:INFO:Set up folding strategy.
2024-04-23 15:05:23,331:INFO:Set up train/test split.
2024-04-23 15:05:23,350:INFO:Set up index.
2024-04-23 15:05:23,350:INFO:Assigning column types.
2024-04-23 15:05:23,353:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-23 15:05:23,376:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-23 15:05:23,376:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 15:05:23,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,415:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-23 15:05:23,416:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 15:05:23,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,430:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-23 15:05:23,454:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 15:05:23,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,493:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 15:05:23,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,507:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-23 15:05:23,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:23,584:INFO:Preparing preprocessing pipeline...
2024-04-23 15:05:23,585:INFO:Set up simple imputation.
2024-04-23 15:05:23,590:INFO:Set up encoding of ordinal features.
2024-04-23 15:05:23,591:INFO:Set up encoding of categorical features.
2024-04-23 15:05:23,591:INFO:Set up feature normalization.
2024-04-23 15:05:23,591:INFO:Set up column name cleaning.
2024-04-23 15:05:24,016:INFO:Finished creating preprocessing pipeline.
2024-04-23 15:05:24,026:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MIGRAN~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=No...
                                                             min_group_name=None,
                                                             min_group_size=None,
                                                             normalize=False,
                                                             return_df=True,
                                                             verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-23 15:05:24,026:INFO:Creating final display dataframe.
2024-04-23 15:05:24,467:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3           Original data shape   
4        Transformed data shape   
5   Transformed train set shape   
6    Transformed test set shape   
7               Ignore features   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16                    Normalize   
17             Normalize method   
18               Fold Generator   
19                  Fold Number   
20                     CPU Jobs   
21                      Use GPU   
22               Log Experiment   
23              Experiment Name   
24                          USI   

                                                Value  
0                                                6472  
1                                          SalesCount  
2                                              Binary  
3                                         (24639, 26)  
4                                         (24639, 20)  
5                                         (17247, 20)  
6                                          (7392, 20)  
7                                                   6  
8                                                   1  
9                                                  18  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                  1  
15  CountEncoder(cols=None, combine_min_nan_groups...  
16                                               True  
17                                             minmax  
18                                    StratifiedKFold  
19                                                 10  
20                                                 -1  
21                                              False  
22                                              False  
23                                   clf-default-name  
24                                               9f27  
2024-04-23 15:05:24,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:24,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:24,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:24,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:05:24,546:INFO:setup() successfully completed in 1.31s...............
2024-04-23 15:05:37,752:INFO:Initializing get_config()
2024-04-23 15:05:37,752:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, variable=X_train_transformed)
2024-04-23 15:05:37,784:INFO:Variable: X_train returned as        1-Abschluss  1-Abschluss in DE  1-Deutscher Ehepartner  \
16903     1.000000           1.000000                0.374744   
8231      0.000000           1.000000                1.000000   
5631      0.057842           0.047421                0.000000   
22643     0.057842           1.000000                1.000000   
23348     0.000000           1.000000                1.000000   
...            ...                ...                     ...   
8880      0.954223           1.000000                1.000000   
14211     0.090845           1.000000                1.000000   
5400      0.954223           0.047421                0.374744   
9991      0.823634           0.000000                1.000000   
4072      0.823634           0.000000                1.000000   

       1-EB/NE erfllt?  1-Einreisejahr  1-Antrag EB  1-Antrag NE  \
16903          1.00000        0.265098       1.0000     0.702553   
8231           0.34616        1.000000       1.0000     1.000000   
5631           0.34616        0.154984       1.0000     1.000000   
22643          1.00000        0.514431       0.1282     0.083069   
23348          1.00000        0.514431       1.0000     0.702553   
...                ...             ...          ...          ...   
8880           0.00000        0.361630       1.0000     1.000000   
14211          0.34616        1.000000       1.0000     1.000000   
5400           0.00000        0.154984       1.0000     1.000000   
9991           0.00000        0.433665       1.0000     1.000000   
4072           1.00000        0.202765       1.0000     1.000000   

       1-Integrationstest  1-Jahr AR beantragt/bekommen  1-Jobcenter  \
16903            1.000000                      1.000000     1.000000   
8231             0.084392                      0.070058     1.000000   
5631             1.000000                      0.152969     1.000000   
22643            0.084392                      0.127082     1.000000   
23348            1.000000                      1.000000     1.000000   
...                   ...                           ...          ...   
8880             1.000000                      0.190804     1.000000   
14211            0.084392                      0.111151     1.000000   
5400             1.000000                      0.152969     0.399902   
9991             1.000000                      0.103186     1.000000   
4072             1.000000                      0.127082     1.000000   

       1-Kinder   1-Netto   1-Rente  1-Sprachzertifikat  \
16903       0.3  1.000000  1.000000            0.366243   
8231        0.0  0.929733  1.000000            0.366243   
5631        0.0  0.055628  1.000000            0.443908   
22643       0.0  0.055628  1.000000            1.000000   
23348       0.0  0.256018  1.000000            1.000000   
...         ...       ...       ...                 ...   
8880        0.0  1.000000  1.000000            1.000000   
14211       0.5  0.256018  1.000000            0.366243   
5400        0.0  0.450878  1.000000            0.443908   
9991        0.0  1.000000  0.034257            1.000000   
4072        0.0  1.000000  1.000000            0.315343   

       1-Test Sprache_Deutsch  1-Welches befristete AR haben Sie?  \
16903                     0.0                            1.000000   
8231                      0.0                            0.153846   
5631                      0.0                            0.214947   
22643                     0.0                            0.153846   
23348                     0.0                            1.000000   
...                       ...                                 ...   
8880                      0.0                            0.174381   
14211                     0.0                            0.102340   
5400                      0.0                            0.210907   
9991                      0.0                            0.173371   
4072                      0.0                            0.151153   

       1-Wie ist ihr aktueller Familienstand?  1-Beratung?  \
16903                                0.733942          1.0   
8231                                 1.000000          1.0   
5631                                 0.733942          1.0   
22643                                1.000000          1.0   
23348                                1.000000          0.0   
...                                       ...          ...   
8880                                 1.000000          0.0   
14211                                1.000000          1.0   
5400                                 0.733942          0.0   
9991                                 1.000000          1.0   
4072                                 1.000000          1.0   

       1-Gltiger Nationalpass  
16903                1.000000  
8231                 1.000000  
5631                 1.000000  
22643                0.086259  
23348                1.000000  
...                       ...  
8880                 1.000000  
14211                1.000000  
5400                 1.000000  
9991                 0.086259  
4072                 0.086259  

[17247 rows x 19 columns]
2024-04-23 15:05:37,785:INFO:get_config() successfully completed......................................
2024-04-23 15:05:51,828:INFO:Initializing compare_models()
2024-04-23 15:05:51,828:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, include=None, exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.09, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.09, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 15:05:51,828:INFO:Checking exceptions
2024-04-23 15:05:51,832:INFO:Preparing display monitor
2024-04-23 15:05:51,844:INFO:Initializing Logistic Regression
2024-04-23 15:05:51,844:INFO:Total runtime is 0.0 minutes
2024-04-23 15:05:51,845:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:51,846:INFO:Initializing create_model()
2024-04-23 15:05:51,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:51,846:INFO:Checking exceptions
2024-04-23 15:05:51,846:INFO:Importing libraries
2024-04-23 15:05:51,846:INFO:Copying training dataset
2024-04-23 15:05:51,850:INFO:Defining folds
2024-04-23 15:05:51,850:INFO:Declaring metric variables
2024-04-23 15:05:51,852:INFO:Importing untrained model
2024-04-23 15:05:51,854:INFO:Logistic Regression Imported successfully
2024-04-23 15:05:51,858:INFO:Cross validation set to False
2024-04-23 15:05:51,858:INFO:Fitting Model
2024-04-23 15:05:52,138:INFO:Initializing predict_model()
2024-04-23 15:05:52,138:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=6472,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537E7A0>)
2024-04-23 15:05:52,138:INFO:Checking exceptions
2024-04-23 15:05:52,138:INFO:Preloading libraries
2024-04-23 15:05:52,262:INFO:_display_container: 2
2024-04-23 15:05:52,263:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=6472,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=6472, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 15:05:52,263:INFO:create_model() successfully completed......................................
2024-04-23 15:05:52,320:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:52,320:INFO:Creating metrics dataframe
2024-04-23 15:05:52,324:INFO:Initializing K Neighbors Classifier
2024-04-23 15:05:52,324:INFO:Total runtime is 0.008003481229146321 minutes
2024-04-23 15:05:52,326:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:52,326:INFO:Initializing create_model()
2024-04-23 15:05:52,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:52,327:INFO:Checking exceptions
2024-04-23 15:05:52,327:INFO:Importing libraries
2024-04-23 15:05:52,327:INFO:Copying training dataset
2024-04-23 15:05:52,332:INFO:Defining folds
2024-04-23 15:05:52,332:INFO:Declaring metric variables
2024-04-23 15:05:52,333:INFO:Importing untrained model
2024-04-23 15:05:52,335:INFO:K Neighbors Classifier Imported successfully
2024-04-23 15:05:52,340:INFO:Cross validation set to False
2024-04-23 15:05:52,340:INFO:Fitting Model
2024-04-23 15:05:52,591:INFO:Initializing predict_model()
2024-04-23 15:05:52,591:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='auto',
                                                      classifier=KNeighborsClassifier(algorithm='auto',
                                                                                      leaf_size=30,
                                                                                      metric='minkowski',
                                                                                      metric_params=None,
                                                                                      n_jobs=-1,
                                                                                      n_neighbors=5,
                                                                                      p=2,
                                                                                      weights='uniform'),
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2,
                                                      probability_threshold=0.09,
                                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197B00>)
2024-04-23 15:05:52,591:INFO:Checking exceptions
2024-04-23 15:05:52,591:INFO:Preloading libraries
2024-04-23 15:05:53,064:INFO:_display_container: 2
2024-04-23 15:05:53,065:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.09,
                                     weights='uniform')
2024-04-23 15:05:53,065:INFO:create_model() successfully completed......................................
2024-04-23 15:05:53,121:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:53,121:INFO:Creating metrics dataframe
2024-04-23 15:05:53,125:INFO:Initializing Naive Bayes
2024-04-23 15:05:53,126:INFO:Total runtime is 0.021367069085439047 minutes
2024-04-23 15:05:53,127:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:53,128:INFO:Initializing create_model()
2024-04-23 15:05:53,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:53,128:INFO:Checking exceptions
2024-04-23 15:05:53,128:INFO:Importing libraries
2024-04-23 15:05:53,128:INFO:Copying training dataset
2024-04-23 15:05:53,132:INFO:Defining folds
2024-04-23 15:05:53,132:INFO:Declaring metric variables
2024-04-23 15:05:53,134:INFO:Importing untrained model
2024-04-23 15:05:53,135:INFO:Naive Bayes Imported successfully
2024-04-23 15:05:53,139:INFO:Cross validation set to False
2024-04-23 15:05:53,139:INFO:Fitting Model
2024-04-23 15:05:53,393:INFO:Initializing predict_model()
2024-04-23 15:05:53,393:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                                            var_smoothing=1e-09),
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51953A0>)
2024-04-23 15:05:53,393:INFO:Checking exceptions
2024-04-23 15:05:53,393:INFO:Preloading libraries
2024-04-23 15:05:53,519:INFO:_display_container: 2
2024-04-23 15:05:53,520:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.09,
                                     var_smoothing=1e-09)
2024-04-23 15:05:53,520:INFO:create_model() successfully completed......................................
2024-04-23 15:05:53,579:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:53,580:INFO:Creating metrics dataframe
2024-04-23 15:05:53,584:INFO:Initializing Decision Tree Classifier
2024-04-23 15:05:53,585:INFO:Total runtime is 0.02901906967163086 minutes
2024-04-23 15:05:53,588:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:53,588:INFO:Initializing create_model()
2024-04-23 15:05:53,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:53,588:INFO:Checking exceptions
2024-04-23 15:05:53,588:INFO:Importing libraries
2024-04-23 15:05:53,588:INFO:Copying training dataset
2024-04-23 15:05:53,594:INFO:Defining folds
2024-04-23 15:05:53,594:INFO:Declaring metric variables
2024-04-23 15:05:53,596:INFO:Importing untrained model
2024-04-23 15:05:53,598:INFO:Decision Tree Classifier Imported successfully
2024-04-23 15:05:53,602:INFO:Cross validation set to False
2024-04-23 15:05:53,602:INFO:Fitting Model
2024-04-23 15:05:53,889:INFO:Initializing predict_model()
2024-04-23 15:05:53,889:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=6472,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC51954E0>)
2024-04-23 15:05:53,889:INFO:Checking exceptions
2024-04-23 15:05:53,890:INFO:Preloading libraries
2024-04-23 15:05:54,015:INFO:_display_container: 2
2024-04-23 15:05:54,016:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6472,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.09,
                                     random_state=6472, splitter='best')
2024-04-23 15:05:54,016:INFO:create_model() successfully completed......................................
2024-04-23 15:05:54,072:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:54,072:INFO:Creating metrics dataframe
2024-04-23 15:05:54,078:INFO:Initializing SVM - Linear Kernel
2024-04-23 15:05:54,079:INFO:Total runtime is 0.03723044792811076 minutes
2024-04-23 15:05:54,081:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:54,081:INFO:Initializing create_model()
2024-04-23 15:05:54,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:54,082:INFO:Checking exceptions
2024-04-23 15:05:54,082:INFO:Importing libraries
2024-04-23 15:05:54,082:INFO:Copying training dataset
2024-04-23 15:05:54,086:INFO:Defining folds
2024-04-23 15:05:54,086:INFO:Declaring metric variables
2024-04-23 15:05:54,088:INFO:Importing untrained model
2024-04-23 15:05:54,090:INFO:SVM - Linear Kernel Imported successfully
2024-04-23 15:05:54,095:INFO:Cross validation set to False
2024-04-23 15:05:54,095:INFO:Fitting Model
2024-04-23 15:05:54,358:INFO:Initializing predict_model()
2024-04-23 15:05:54,358:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                               validation_fraction=0.1,
                                                                               verbose=0,
                                                                               warm_start=False),
                                                      early_stopping=False,
                                                      epsilon=0.1, eta0=0.001,
                                                      fit_intercept=True,
                                                      l1_ratio=0.15,
                                                      learning_rate='optimal',
                                                      loss='hinge',
                                                      max_iter=1000,
                                                      n_iter_no_change=5,
                                                      n_jobs=-1, penalty='l2',
                                                      power_t=0.5,
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      shuffle=True, tol=0.001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197BA0>)
2024-04-23 15:05:54,358:INFO:Checking exceptions
2024-04-23 15:05:54,358:INFO:Preloading libraries
2024-04-23 15:05:54,411:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:05:54,470:INFO:_display_container: 2
2024-04-23 15:05:54,471:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=647...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.09,
                                     random_state=6472, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2024-04-23 15:05:54,472:INFO:create_model() successfully completed......................................
2024-04-23 15:05:54,527:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:54,528:INFO:Creating metrics dataframe
2024-04-23 15:05:54,532:INFO:Initializing Ridge Classifier
2024-04-23 15:05:54,539:INFO:Total runtime is 0.04491246143976848 minutes
2024-04-23 15:05:54,541:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:54,541:INFO:Initializing create_model()
2024-04-23 15:05:54,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:54,541:INFO:Checking exceptions
2024-04-23 15:05:54,541:INFO:Importing libraries
2024-04-23 15:05:54,541:INFO:Copying training dataset
2024-04-23 15:05:54,546:INFO:Defining folds
2024-04-23 15:05:54,546:INFO:Declaring metric variables
2024-04-23 15:05:54,548:INFO:Importing untrained model
2024-04-23 15:05:54,549:INFO:Ridge Classifier Imported successfully
2024-04-23 15:05:54,553:INFO:Cross validation set to False
2024-04-23 15:05:54,553:INFO:Fitting Model
2024-04-23 15:05:54,810:INFO:Initializing predict_model()
2024-04-23 15:05:54,810:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(alpha=1.0,
                                                      class_weight=None,
                                                      classifier=RidgeClassifier(alpha=1.0,
                                                                                 class_weight=None,
                                                                                 copy_X=True,
                                                                                 fit_intercept=True,
                                                                                 max_iter=None,
                                                                                 positive=False,
                                                                                 random_state=6472,
                                                                                 solver='auto',
                                                                                 tol=0.0001),
                                                      copy_X=True,
                                                      fit_intercept=True,
                                                      max_iter=None,
                                                      positive=False,
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      solver='auto',
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5197C40>)
2024-04-23 15:05:54,810:INFO:Checking exceptions
2024-04-23 15:05:54,810:INFO:Preloading libraries
2024-04-23 15:05:54,866:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:05:54,926:INFO:_display_container: 2
2024-04-23 15:05:54,927:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=6472,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.09,
                                     random_state=6472, solver='auto',
                                     tol=0.0001)
2024-04-23 15:05:54,928:INFO:create_model() successfully completed......................................
2024-04-23 15:05:54,985:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:54,985:INFO:Creating metrics dataframe
2024-04-23 15:05:54,991:INFO:Initializing Random Forest Classifier
2024-04-23 15:05:54,991:INFO:Total runtime is 0.05244617064793905 minutes
2024-04-23 15:05:54,993:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:54,993:INFO:Initializing create_model()
2024-04-23 15:05:54,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:54,993:INFO:Checking exceptions
2024-04-23 15:05:54,993:INFO:Importing libraries
2024-04-23 15:05:54,993:INFO:Copying training dataset
2024-04-23 15:05:54,999:INFO:Defining folds
2024-04-23 15:05:54,999:INFO:Declaring metric variables
2024-04-23 15:05:55,000:INFO:Importing untrained model
2024-04-23 15:05:55,002:INFO:Random Forest Classifier Imported successfully
2024-04-23 15:05:55,007:INFO:Cross validation set to False
2024-04-23 15:05:55,007:INFO:Fitting Model
2024-04-23 15:05:55,426:INFO:Initializing predict_model()
2024-04-23 15:05:55,426:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537DDA0>)
2024-04-23 15:05:55,426:INFO:Checking exceptions
2024-04-23 15:05:55,426:INFO:Preloading libraries
2024-04-23 15:05:55,608:INFO:_display_container: 2
2024-04-23 15:05:55,611:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       mo...
                                                                       random_state=6472,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.09,
                                     random_state=6472, verbose=0,
                                     warm_start=False)
2024-04-23 15:05:55,611:INFO:create_model() successfully completed......................................
2024-04-23 15:05:55,673:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:55,673:INFO:Creating metrics dataframe
2024-04-23 15:05:55,679:INFO:Initializing Quadratic Discriminant Analysis
2024-04-23 15:05:55,679:INFO:Total runtime is 0.06390566031138102 minutes
2024-04-23 15:05:55,681:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:55,681:INFO:Initializing create_model()
2024-04-23 15:05:55,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:55,682:INFO:Checking exceptions
2024-04-23 15:05:55,682:INFO:Importing libraries
2024-04-23 15:05:55,682:INFO:Copying training dataset
2024-04-23 15:05:55,686:INFO:Defining folds
2024-04-23 15:05:55,687:INFO:Declaring metric variables
2024-04-23 15:05:55,688:INFO:Importing untrained model
2024-04-23 15:05:55,690:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-23 15:05:55,693:INFO:Cross validation set to False
2024-04-23 15:05:55,693:INFO:Fitting Model
2024-04-23 15:05:55,939:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-23 15:05:55,953:INFO:Initializing predict_model()
2024-04-23 15:05:55,953:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                                               reg_param=0.0,
                                                                                               store_covariance=False,
                                                                                               tol=0.0001),
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      reg_param=0.0,
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC5196E80>)
2024-04-23 15:05:55,953:INFO:Checking exceptions
2024-04-23 15:05:55,953:INFO:Preloading libraries
2024-04-23 15:05:56,006:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-23 15:05:56,006:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-23 15:05:56,007:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-23 15:05:56,011:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-23 15:05:56,011:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-04-23 15:05:56,012:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-04-23 15:05:56,019:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\metrics.py", line 136, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(traceback.format_exc())

2024-04-23 15:05:56,022:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:05:56,100:INFO:_display_container: 2
2024-04-23 15:05:56,102:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.09,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 15:05:56,102:INFO:create_model() successfully completed......................................
2024-04-23 15:05:56,171:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:56,172:INFO:Creating metrics dataframe
2024-04-23 15:05:56,177:INFO:Initializing Ada Boost Classifier
2024-04-23 15:05:56,177:INFO:Total runtime is 0.07221792936325074 minutes
2024-04-23 15:05:56,179:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:56,179:INFO:Initializing create_model()
2024-04-23 15:05:56,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:56,179:INFO:Checking exceptions
2024-04-23 15:05:56,180:INFO:Importing libraries
2024-04-23 15:05:56,180:INFO:Copying training dataset
2024-04-23 15:05:56,186:INFO:Defining folds
2024-04-23 15:05:56,186:INFO:Declaring metric variables
2024-04-23 15:05:56,189:INFO:Importing untrained model
2024-04-23 15:05:56,191:INFO:Ada Boost Classifier Imported successfully
2024-04-23 15:05:56,196:INFO:Cross validation set to False
2024-04-23 15:05:56,196:INFO:Fitting Model
2024-04-23 15:05:56,432:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 15:05:56,758:INFO:Initializing predict_model()
2024-04-23 15:05:56,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                                      classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                                    estimator=None,
                                                                                    learning_rate=1.0,
                                                                                    n_estimators=50,
                                                                                    random_state=6472),
                                                      estimator=None,
                                                      learning_rate=1.0,
                                                      n_estimators=50,
                                                      probability_threshold=0.09,
                                                      random_state=6472))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537CB80>)
2024-04-23 15:05:56,760:INFO:Checking exceptions
2024-04-23 15:05:56,760:INFO:Preloading libraries
2024-04-23 15:05:56,917:INFO:_display_container: 2
2024-04-23 15:05:56,918:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=6472),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=6472)
2024-04-23 15:05:56,918:INFO:create_model() successfully completed......................................
2024-04-23 15:05:56,986:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:56,986:INFO:Creating metrics dataframe
2024-04-23 15:05:56,993:INFO:Initializing Gradient Boosting Classifier
2024-04-23 15:05:56,993:INFO:Total runtime is 0.08581309715906779 minutes
2024-04-23 15:05:56,995:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:56,996:INFO:Initializing create_model()
2024-04-23 15:05:56,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:56,996:INFO:Checking exceptions
2024-04-23 15:05:56,996:INFO:Importing libraries
2024-04-23 15:05:56,996:INFO:Copying training dataset
2024-04-23 15:05:57,000:INFO:Defining folds
2024-04-23 15:05:57,000:INFO:Declaring metric variables
2024-04-23 15:05:57,002:INFO:Importing untrained model
2024-04-23 15:05:57,006:INFO:Gradient Boosting Classifier Imported successfully
2024-04-23 15:05:57,009:INFO:Cross validation set to False
2024-04-23 15:05:57,009:INFO:Fitting Model
2024-04-23 15:05:58,266:INFO:Initializing predict_model()
2024-04-23 15:05:58,266:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537D6C0>)
2024-04-23 15:05:58,266:INFO:Checking exceptions
2024-04-23 15:05:58,266:INFO:Preloading libraries
2024-04-23 15:05:58,408:INFO:_display_container: 2
2024-04-23 15:05:58,410:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=6472, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 15:05:58,410:INFO:create_model() successfully completed......................................
2024-04-23 15:05:58,475:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:58,475:INFO:Creating metrics dataframe
2024-04-23 15:05:58,483:INFO:Initializing Linear Discriminant Analysis
2024-04-23 15:05:58,483:INFO:Total runtime is 0.11065040429433187 minutes
2024-04-23 15:05:58,485:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:58,486:INFO:Initializing create_model()
2024-04-23 15:05:58,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:58,486:INFO:Checking exceptions
2024-04-23 15:05:58,486:INFO:Importing libraries
2024-04-23 15:05:58,486:INFO:Copying training dataset
2024-04-23 15:05:58,491:INFO:Defining folds
2024-04-23 15:05:58,491:INFO:Declaring metric variables
2024-04-23 15:05:58,494:INFO:Importing untrained model
2024-04-23 15:05:58,497:INFO:Linear Discriminant Analysis Imported successfully
2024-04-23 15:05:58,501:INFO:Cross validation set to False
2024-04-23 15:05:58,501:INFO:Fitting Model
2024-04-23 15:05:58,784:INFO:Initializing predict_model()
2024-04-23 15:05:58,784:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                                            n_components=None,
                                                                                            priors=None,
                                                                                            shrinkage=None,
                                                                                            solver='svd',
                                                                                            store_covariance=False,
                                                                                            tol=0.0001),
                                                      covariance_estimator=None,
                                                      n_components=None,
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      shrinkage=None,
                                                      solver='svd',
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537EC00>)
2024-04-23 15:05:58,784:INFO:Checking exceptions
2024-04-23 15:05:58,784:INFO:Preloading libraries
2024-04-23 15:05:58,909:INFO:_display_container: 2
2024-04-23 15:05:58,910:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.09, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2024-04-23 15:05:58,910:INFO:create_model() successfully completed......................................
2024-04-23 15:05:58,971:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:58,971:INFO:Creating metrics dataframe
2024-04-23 15:05:58,979:INFO:Initializing Extra Trees Classifier
2024-04-23 15:05:58,979:INFO:Total runtime is 0.11891047954559326 minutes
2024-04-23 15:05:58,981:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:58,981:INFO:Initializing create_model()
2024-04-23 15:05:58,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:58,981:INFO:Checking exceptions
2024-04-23 15:05:58,981:INFO:Importing libraries
2024-04-23 15:05:58,982:INFO:Copying training dataset
2024-04-23 15:05:58,986:INFO:Defining folds
2024-04-23 15:05:58,986:INFO:Declaring metric variables
2024-04-23 15:05:58,988:INFO:Importing untrained model
2024-04-23 15:05:58,991:INFO:Extra Trees Classifier Imported successfully
2024-04-23 15:05:58,994:INFO:Cross validation set to False
2024-04-23 15:05:58,995:INFO:Fitting Model
2024-04-23 15:05:59,402:INFO:Initializing predict_model()
2024-04-23 15:05:59,402:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                      warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537EDE0>)
2024-04-23 15:05:59,403:INFO:Checking exceptions
2024-04-23 15:05:59,403:INFO:Preloading libraries
2024-04-23 15:05:59,578:INFO:_display_container: 2
2024-04-23 15:05:59,579:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     mo...
                                                                     random_state=6472,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.09,
                                     random_state=6472, verbose=0,
                                     warm_start=False)
2024-04-23 15:05:59,580:INFO:create_model() successfully completed......................................
2024-04-23 15:05:59,641:INFO:SubProcess create_model() end ==================================
2024-04-23 15:05:59,642:INFO:Creating metrics dataframe
2024-04-23 15:05:59,648:INFO:Initializing Light Gradient Boosting Machine
2024-04-23 15:05:59,649:INFO:Total runtime is 0.13007673422495525 minutes
2024-04-23 15:05:59,650:INFO:SubProcess create_model() called ==================================
2024-04-23 15:05:59,651:INFO:Initializing create_model()
2024-04-23 15:05:59,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:05:59,651:INFO:Checking exceptions
2024-04-23 15:05:59,651:INFO:Importing libraries
2024-04-23 15:05:59,651:INFO:Copying training dataset
2024-04-23 15:05:59,656:INFO:Defining folds
2024-04-23 15:05:59,656:INFO:Declaring metric variables
2024-04-23 15:05:59,657:INFO:Importing untrained model
2024-04-23 15:05:59,659:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-23 15:05:59,663:INFO:Cross validation set to False
2024-04-23 15:05:59,663:INFO:Fitting Model
2024-04-23 15:05:59,917:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-04-23 15:05:59,917:INFO:[LightGBM] [Info] Number of positive: 1021, number of negative: 16226
2024-04-23 15:05:59,919:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000639 seconds.
2024-04-23 15:05:59,919:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-04-23 15:05:59,919:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-04-23 15:05:59,919:INFO:[LightGBM] [Info] Total Bins 134
2024-04-23 15:05:59,919:INFO:[LightGBM] [Info] Number of data points in the train set: 17247, number of used features: 18
2024-04-23 15:05:59,920:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.059199 -> initscore=-2.765832
2024-04-23 15:05:59,920:INFO:[LightGBM] [Info] Start training from score -2.765832
2024-04-23 15:06:00,004:INFO:Initializing predict_model()
2024-04-23 15:06:00,005:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                subsample_freq=0),
                                                      colsample_bytree=1.0,
                                                      importance_type='split',
                                                      learning_rate=0.1,
                                                      max_depth=-1,
                                                      min_child_samples=20,
                                                      min_child_weight=0.001,
                                                      min_split_gain=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1, num_leaves=31,
                                                      objective=None,
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      reg_alpha=0.0,
                                                      reg_lambda=0.0,
                                                      subsample=1.0,
                                                      subsample_for_bin=200000,
                                                      subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537DF80>)
2024-04-23 15:06:00,005:INFO:Checking exceptions
2024-04-23 15:06:00,005:INFO:Preloading libraries
2024-04-23 15:06:00,166:INFO:_display_container: 2
2024-04-23 15:06:00,168:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=6...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.09,
                                     random_state=6472, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-04-23 15:06:00,168:INFO:create_model() successfully completed......................................
2024-04-23 15:06:00,226:INFO:SubProcess create_model() end ==================================
2024-04-23 15:06:00,226:INFO:Creating metrics dataframe
2024-04-23 15:06:00,232:INFO:Initializing Dummy Classifier
2024-04-23 15:06:00,232:INFO:Total runtime is 0.13978915214538576 minutes
2024-04-23 15:06:00,233:INFO:SubProcess create_model() called ==================================
2024-04-23 15:06:00,234:INFO:Initializing create_model()
2024-04-23 15:06:00,234:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5138410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:06:00,234:INFO:Checking exceptions
2024-04-23 15:06:00,234:INFO:Importing libraries
2024-04-23 15:06:00,234:INFO:Copying training dataset
2024-04-23 15:06:00,238:INFO:Defining folds
2024-04-23 15:06:00,238:INFO:Declaring metric variables
2024-04-23 15:06:00,240:INFO:Importing untrained model
2024-04-23 15:06:00,242:INFO:Dummy Classifier Imported successfully
2024-04-23 15:06:00,245:INFO:Cross validation set to False
2024-04-23 15:06:00,245:INFO:Fitting Model
2024-04-23 15:06:00,504:INFO:Initializing predict_model()
2024-04-23 15:06:00,504:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                                 random_state=6472,
                                                                                 strategy='prior'),
                                                      constant=None,
                                                      probability_threshold=0.09,
                                                      random_state=6472,
                                                      strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537F600>)
2024-04-23 15:06:00,504:INFO:Checking exceptions
2024-04-23 15:06:00,504:INFO:Preloading libraries
2024-04-23 15:06:00,563:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:06:00,641:INFO:_display_container: 2
2024-04-23 15:06:00,642:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=6472,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.09,
                                     random_state=6472, strategy='prior')
2024-04-23 15:06:00,642:INFO:create_model() successfully completed......................................
2024-04-23 15:06:00,709:INFO:SubProcess create_model() end ==================================
2024-04-23 15:06:00,710:INFO:Creating metrics dataframe
2024-04-23 15:06:00,718:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 15:06:00,726:INFO:Initializing create_model()
2024-04-23 15:06:00,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC511A410>, estimator=CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=6472),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=6472), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:06:00,727:INFO:Checking exceptions
2024-04-23 15:06:00,728:INFO:Importing libraries
2024-04-23 15:06:00,728:INFO:Copying training dataset
2024-04-23 15:06:00,733:INFO:Defining folds
2024-04-23 15:06:00,733:INFO:Declaring metric variables
2024-04-23 15:06:00,733:INFO:Importing untrained model
2024-04-23 15:06:00,733:INFO:Declaring custom model
2024-04-23 15:06:00,733:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 15:06:00,734:INFO:Cross validation set to False
2024-04-23 15:06:00,734:INFO:Fitting Model
2024-04-23 15:06:00,981:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 15:06:01,302:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=6472),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=6472)
2024-04-23 15:06:01,302:INFO:create_model() successfully completed......................................
2024-04-23 15:06:01,375:INFO:_master_model_container: 0
2024-04-23 15:06:01,375:INFO:_display_container: 2
2024-04-23 15:06:01,376:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=6472),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=6472)
2024-04-23 15:06:01,376:INFO:compare_models() successfully completed......................................
2024-04-23 15:07:39,324:INFO:PyCaret ClassificationExperiment
2024-04-23 15:07:39,326:INFO:Logging name: clf-default-name
2024-04-23 15:07:39,326:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-23 15:07:39,326:INFO:version 3.3.1
2024-04-23 15:07:39,326:INFO:Initializing setup()
2024-04-23 15:07:39,326:INFO:self.USI: 0a14
2024-04-23 15:07:39,326:INFO:self._variable_keys: {'n_jobs_param', 'y_train', 'y', 'X_test', 'X', 'fold_groups_param', 'logging_param', 'y_test', 'USI', 'fold_generator', 'memory', 'idx', 'fold_shuffle_param', 'exp_id', 'is_multiclass', 'data', 'target_param', 'exp_name_log', '_ml_usecase', 'X_train', 'pipeline', '_available_plots', 'gpu_n_jobs_param', 'fix_imbalance', 'html_param', 'seed', 'log_plots_param', 'gpu_param'}
2024-04-23 15:07:39,326:INFO:Checking environment
2024-04-23 15:07:39,326:INFO:python_version: 3.11.9
2024-04-23 15:07:39,326:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-04-23 15:07:39,326:INFO:machine: AMD64
2024-04-23 15:07:39,326:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-23 15:07:39,330:INFO:Memory: svmem(total=33854128128, available=18256687104, percent=46.1, used=15597441024, free=18256687104)
2024-04-23 15:07:39,330:INFO:Physical Core: 14
2024-04-23 15:07:39,330:INFO:Logical Core: 20
2024-04-23 15:07:39,330:INFO:Checking libraries
2024-04-23 15:07:39,330:INFO:System:
2024-04-23 15:07:39,330:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-04-23 15:07:39,330:INFO:executable: c:\Users\Migrando1\SofwarePackages\python.exe
2024-04-23 15:07:39,330:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-23 15:07:39,330:INFO:PyCaret required dependencies:
2024-04-23 15:07:39,330:INFO:                 pip: 24.0
2024-04-23 15:07:39,330:INFO:          setuptools: 65.5.0
2024-04-23 15:07:39,330:INFO:             pycaret: 3.3.1
2024-04-23 15:07:39,330:INFO:             IPython: 8.23.0
2024-04-23 15:07:39,330:INFO:          ipywidgets: 8.1.2
2024-04-23 15:07:39,330:INFO:                tqdm: 4.66.2
2024-04-23 15:07:39,330:INFO:               numpy: 1.26.4
2024-04-23 15:07:39,330:INFO:              pandas: 2.1.4
2024-04-23 15:07:39,330:INFO:              jinja2: 3.1.3
2024-04-23 15:07:39,330:INFO:               scipy: 1.11.4
2024-04-23 15:07:39,330:INFO:              joblib: 1.3.2
2024-04-23 15:07:39,330:INFO:             sklearn: 1.4.2
2024-04-23 15:07:39,330:INFO:                pyod: 1.1.3
2024-04-23 15:07:39,330:INFO:            imblearn: 0.12.2
2024-04-23 15:07:39,330:INFO:   category_encoders: 2.6.3
2024-04-23 15:07:39,330:INFO:            lightgbm: 4.3.0
2024-04-23 15:07:39,330:INFO:               numba: 0.59.1
2024-04-23 15:07:39,330:INFO:            requests: 2.31.0
2024-04-23 15:07:39,330:INFO:          matplotlib: 3.7.5
2024-04-23 15:07:39,330:INFO:          scikitplot: 0.3.7
2024-04-23 15:07:39,330:INFO:         yellowbrick: 1.5
2024-04-23 15:07:39,330:INFO:              plotly: 5.21.0
2024-04-23 15:07:39,330:INFO:    plotly-resampler: Not installed
2024-04-23 15:07:39,330:INFO:             kaleido: 0.2.1
2024-04-23 15:07:39,330:INFO:           schemdraw: 0.15
2024-04-23 15:07:39,330:INFO:         statsmodels: 0.14.2
2024-04-23 15:07:39,330:INFO:              sktime: 0.26.0
2024-04-23 15:07:39,330:INFO:               tbats: 1.1.3
2024-04-23 15:07:39,330:INFO:            pmdarima: 2.0.4
2024-04-23 15:07:39,330:INFO:              psutil: 5.9.8
2024-04-23 15:07:39,331:INFO:          markupsafe: 2.1.5
2024-04-23 15:07:39,331:INFO:             pickle5: Not installed
2024-04-23 15:07:39,331:INFO:         cloudpickle: 3.0.0
2024-04-23 15:07:39,331:INFO:         deprecation: 2.1.0
2024-04-23 15:07:39,331:INFO:              xxhash: 3.4.1
2024-04-23 15:07:39,331:INFO:           wurlitzer: Not installed
2024-04-23 15:07:39,331:INFO:PyCaret optional dependencies:
2024-04-23 15:07:39,331:INFO:                shap: Not installed
2024-04-23 15:07:39,331:INFO:           interpret: Not installed
2024-04-23 15:07:39,331:INFO:                umap: Not installed
2024-04-23 15:07:39,331:INFO:     ydata_profiling: Not installed
2024-04-23 15:07:39,331:INFO:  explainerdashboard: Not installed
2024-04-23 15:07:39,331:INFO:             autoviz: Not installed
2024-04-23 15:07:39,331:INFO:           fairlearn: Not installed
2024-04-23 15:07:39,331:INFO:          deepchecks: Not installed
2024-04-23 15:07:39,331:INFO:             xgboost: Not installed
2024-04-23 15:07:39,331:INFO:            catboost: Not installed
2024-04-23 15:07:39,331:INFO:              kmodes: Not installed
2024-04-23 15:07:39,331:INFO:             mlxtend: Not installed
2024-04-23 15:07:39,331:INFO:       statsforecast: Not installed
2024-04-23 15:07:39,331:INFO:        tune_sklearn: Not installed
2024-04-23 15:07:39,331:INFO:                 ray: Not installed
2024-04-23 15:07:39,331:INFO:            hyperopt: Not installed
2024-04-23 15:07:39,331:INFO:              optuna: Not installed
2024-04-23 15:07:39,331:INFO:               skopt: Not installed
2024-04-23 15:07:39,331:INFO:              mlflow: Not installed
2024-04-23 15:07:39,331:INFO:              gradio: Not installed
2024-04-23 15:07:39,331:INFO:             fastapi: Not installed
2024-04-23 15:07:39,331:INFO:             uvicorn: Not installed
2024-04-23 15:07:39,331:INFO:              m2cgen: Not installed
2024-04-23 15:07:39,331:INFO:           evidently: Not installed
2024-04-23 15:07:39,331:INFO:               fugue: Not installed
2024-04-23 15:07:39,331:INFO:           streamlit: Not installed
2024-04-23 15:07:39,331:INFO:             prophet: Not installed
2024-04-23 15:07:39,331:INFO:None
2024-04-23 15:07:39,331:INFO:Set up data.
2024-04-23 15:07:39,408:INFO:Set up folding strategy.
2024-04-23 15:07:39,408:INFO:Set up train/test split.
2024-04-23 15:07:39,431:INFO:Set up index.
2024-04-23 15:07:39,431:INFO:Assigning column types.
2024-04-23 15:07:39,433:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-23 15:07:39,457:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-23 15:07:39,457:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 15:07:39,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,494:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-23 15:07:39,494:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 15:07:39,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,508:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-23 15:07:39,533:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 15:07:39,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-23 15:07:39,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,590:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-23 15:07:39,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:39,668:INFO:Preparing preprocessing pipeline...
2024-04-23 15:07:39,670:INFO:Set up simple imputation.
2024-04-23 15:07:39,674:INFO:Set up encoding of ordinal features.
2024-04-23 15:07:39,675:INFO:Set up encoding of categorical features.
2024-04-23 15:07:39,675:INFO:Set up feature normalization.
2024-04-23 15:07:39,675:INFO:Set up column name cleaning.
2024-04-23 15:07:39,953:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:07:40,737:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pipeline.py:247: UserWarning: Persisting input arguments took 0.69s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2024-04-23 15:07:40,788:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:07:41,612:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pipeline.py:254: UserWarning: Persisting input arguments took 0.71s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2024-04-23 15:07:41,668:INFO:Finished creating preprocessing pipeline.
2024-04-23 15:07:43,541:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MIGRAN~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=No...
                                                                         'mapping':     1-Gltiger Nationalpass_0  1-Gltiger Nationalpass_1
 1                      -1.0                      -1.0
 2                       1.0                      -1.0
 3                       0.0                       2.0
-1                       0.0                       0.0
-2                       0.0                       0.0}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-23 15:07:43,541:INFO:Creating final display dataframe.
2024-04-23 15:07:45,881:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pipeline.py:287: UserWarning: Persisting input arguments took 2.14s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_full_transform(

2024-04-23 15:07:45,988:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:07:48,129:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pipeline.py:287: UserWarning: Persisting input arguments took 2.07s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_full_transform(

2024-04-23 15:07:48,196:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3           Original data shape   
4        Transformed data shape   
5   Transformed train set shape   
6    Transformed test set shape   
7               Ignore features   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16                    Normalize   
17             Normalize method   
18               Fold Generator   
19                  Fold Number   
20                     CPU Jobs   
21                      Use GPU   
22               Log Experiment   
23              Experiment Name   
24                          USI   

                                                Value  
0                                                8273  
1                                          SalesCount  
2                                              Binary  
3                                         (24639, 26)  
4                                        (24639, 119)  
5                                        (17247, 119)  
6                                         (7392, 119)  
7                                                   6  
8                                                   1  
9                                                  18  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                  1  
15  HelmertEncoder(cols=None, drop_invariant=False...  
16                                               True  
17                                             minmax  
18                                    StratifiedKFold  
19                                                 10  
20                                                 -1  
21                                              False  
22                                              False  
23                                   clf-default-name  
24                                               0a14  
2024-04-23 15:07:48,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:48,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:48,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:48,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-23 15:07:48,276:INFO:setup() successfully completed in 8.97s...............
2024-04-23 15:08:29,725:INFO:Initializing get_config()
2024-04-23 15:08:29,725:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, variable=X_train_transformed)
2024-04-23 15:08:29,771:INFO:Variable: X_train returned as        1-Abschluss_0  1-Abschluss_1  1-Abschluss_2  1-Abschluss_3  \
19732            0.0            0.0            0.0            0.0   
24107            1.0            0.0            0.0            0.0   
3466             0.5            1.0            0.0            0.0   
1018             0.5            1.0            0.0            0.0   
17794            0.5            1.0            0.0            0.0   
...              ...            ...            ...            ...   
23464            0.5            1.0            0.0            0.0   
12933            1.0            0.0            0.0            0.0   
17140            1.0            0.0            0.0            0.0   
3054             1.0            0.0            0.0            0.0   
24390            0.5            1.0            0.0            0.0   

       1-Abschluss_4  1-Abschluss in DE_0  1-Abschluss in DE_1  \
19732            0.0                  0.0                  0.0   
24107            0.0                  1.0                  0.0   
3466             0.0                  1.0                  0.0   
1018             0.0                  1.0                  0.0   
17794            0.0                  1.0                  0.0   
...              ...                  ...                  ...   
23464            0.0                  1.0                  0.0   
12933            0.0                  0.5                  1.0   
17140            0.0                  1.0                  0.0   
3054             0.0                  1.0                  0.0   
24390            0.0                  1.0                  0.0   

       1-Deutscher Ehepartner_0  1-Deutscher Ehepartner_1  1-EB/NE erfllt?_0  \
19732                       0.0                       0.0                0.0   
24107                       1.0                       0.0                1.0   
3466                        0.0                       0.0                0.0   
1018                        1.0                       0.0                0.0   
17794                       0.5                       1.0                0.0   
...                         ...                       ...                ...   
23464                       1.0                       0.0                0.0   
12933                       0.5                       1.0                1.0   
17140                       0.0                       0.0                0.0   
3054                        1.0                       0.0                0.0   
24390                       0.0                       0.0                0.0   

       ...  1-Welches befristete AR haben Sie?_41  \
19732  ...                                    0.0   
24107  ...                                    0.0   
3466   ...                                    0.0   
1018   ...                                    0.0   
17794  ...                                    0.0   
...    ...                                    ...   
23464  ...                                    0.0   
12933  ...                                    0.0   
17140  ...                                    0.0   
3054   ...                                    0.0   
24390  ...                                    0.0   

       1-Welches befristete AR haben Sie?_42  \
19732                                    0.0   
24107                                    0.0   
3466                                     0.0   
1018                                     0.0   
17794                                    0.0   
...                                      ...   
23464                                    0.0   
12933                                    0.0   
17140                                    0.0   
3054                                     0.0   
24390                                    0.0   

       1-Welches befristete AR haben Sie?_43  \
19732                                    0.0   
24107                                    0.0   
3466                                     0.0   
1018                                     0.0   
17794                                    0.0   
...                                      ...   
23464                                    0.0   
12933                                    0.0   
17140                                    0.0   
3054                                     0.0   
24390                                    0.0   

       1-Welches befristete AR haben Sie?_44  \
19732                                    0.0   
24107                                    0.0   
3466                                     0.0   
1018                                     0.0   
17794                                    0.0   
...                                      ...   
23464                                    0.0   
12933                                    0.0   
17140                                    0.0   
3054                                     0.0   
24390                                    0.0   

       1-Wie ist ihr aktueller Familienstand?_0  \
19732                                       0.0   
24107                                       1.0   
3466                                        0.0   
1018                                        1.0   
17794                                       0.0   
...                                         ...   
23464                                       1.0   
12933                                       0.0   
17140                                       0.0   
3054                                        1.0   
24390                                       0.0   

       1-Wie ist ihr aktueller Familienstand?_1  1-Beratung?  \
19732                                       0.0          0.0   
24107                                       0.0          0.0   
3466                                        0.0          1.0   
1018                                        0.0          0.0   
17794                                       0.0          1.0   
...                                         ...          ...   
23464                                       0.0          0.0   
12933                                       0.0          0.0   
17140                                       0.0          1.0   
3054                                        0.0          0.0   
24390                                       0.0          0.0   

       1-Gltiger Nationalpass_0  1-Gltiger Nationalpass_1  intercept  
19732                       0.0                       0.0        0.0  
24107                       1.0                       0.0        0.0  
3466                        0.0                       0.0        0.0  
1018                        0.0                       0.0        0.0  
17794                       0.0                       0.0        0.0  
...                         ...                       ...        ...  
23464                       0.0                       0.0        0.0  
12933                       0.0                       0.0        0.0  
17140                       0.0                       0.0        0.0  
3054                        0.5                       1.0        0.0  
24390                       0.0                       0.0        0.0  

[17247 rows x 118 columns]
2024-04-23 15:08:29,771:INFO:get_config() successfully completed......................................
2024-04-23 15:08:43,980:INFO:Initializing compare_models()
2024-04-23 15:08:43,980:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, include=None, exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.09, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.09, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 15:08:43,980:INFO:Checking exceptions
2024-04-23 15:08:43,983:INFO:Preparing display monitor
2024-04-23 15:08:43,995:INFO:Initializing Logistic Regression
2024-04-23 15:08:43,995:INFO:Total runtime is 8.54333241780599e-06 minutes
2024-04-23 15:08:43,997:INFO:SubProcess create_model() called ==================================
2024-04-23 15:08:43,998:INFO:Initializing create_model()
2024-04-23 15:08:43,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:08:43,998:INFO:Checking exceptions
2024-04-23 15:08:43,998:INFO:Importing libraries
2024-04-23 15:08:43,998:INFO:Copying training dataset
2024-04-23 15:08:44,002:INFO:Defining folds
2024-04-23 15:08:44,002:INFO:Declaring metric variables
2024-04-23 15:08:44,005:INFO:Importing untrained model
2024-04-23 15:08:44,007:INFO:Logistic Regression Imported successfully
2024-04-23 15:08:44,010:INFO:Cross validation set to False
2024-04-23 15:08:44,010:INFO:Fitting Model
2024-04-23 15:08:44,169:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:08:44,281:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:08:48,028:INFO:Initializing predict_model()
2024-04-23 15:08:48,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=8273,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC2C8C540>)
2024-04-23 15:08:48,028:INFO:Checking exceptions
2024-04-23 15:08:48,028:INFO:Preloading libraries
2024-04-23 15:08:48,185:INFO:_display_container: 2
2024-04-23 15:08:48,186:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=8273,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.09,
                                     random_state=8273, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2024-04-23 15:08:48,186:INFO:create_model() successfully completed......................................
2024-04-23 15:08:48,253:INFO:SubProcess create_model() end ==================================
2024-04-23 15:08:48,253:INFO:Creating metrics dataframe
2024-04-23 15:08:48,259:INFO:Initializing K Neighbors Classifier
2024-04-23 15:08:48,259:INFO:Total runtime is 0.07107735872268676 minutes
2024-04-23 15:08:48,262:INFO:SubProcess create_model() called ==================================
2024-04-23 15:08:48,262:INFO:Initializing create_model()
2024-04-23 15:08:48,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:08:48,262:INFO:Checking exceptions
2024-04-23 15:08:48,262:INFO:Importing libraries
2024-04-23 15:08:48,262:INFO:Copying training dataset
2024-04-23 15:08:48,268:INFO:Defining folds
2024-04-23 15:08:48,268:INFO:Declaring metric variables
2024-04-23 15:08:48,269:INFO:Importing untrained model
2024-04-23 15:08:48,271:INFO:K Neighbors Classifier Imported successfully
2024-04-23 15:08:48,275:INFO:Cross validation set to False
2024-04-23 15:08:48,275:INFO:Fitting Model
2024-04-23 15:08:48,430:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:08:48,537:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:08:52,092:INFO:Initializing predict_model()
2024-04-23 15:08:52,093:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='auto',
                                                      classifier=KNeighborsClassifier(algorithm='auto',
                                                                                      leaf_size=30,
                                                                                      metric='minkowski',
                                                                                      metric_params=None,
                                                                                      n_jobs=-1,
                                                                                      n_neighbors=5,
                                                                                      p=2,
                                                                                      weights='uniform'),
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2,
                                                      probability_threshold=0.09,
                                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537F100>)
2024-04-23 15:08:52,093:INFO:Checking exceptions
2024-04-23 15:08:52,093:INFO:Preloading libraries
2024-04-23 15:08:52,894:INFO:_display_container: 2
2024-04-23 15:08:52,895:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.09,
                                     weights='uniform')
2024-04-23 15:08:52,895:INFO:create_model() successfully completed......................................
2024-04-23 15:08:52,952:INFO:SubProcess create_model() end ==================================
2024-04-23 15:08:52,952:INFO:Creating metrics dataframe
2024-04-23 15:08:52,957:INFO:Initializing Naive Bayes
2024-04-23 15:08:52,957:INFO:Total runtime is 0.14937880436579387 minutes
2024-04-23 15:08:52,959:INFO:SubProcess create_model() called ==================================
2024-04-23 15:08:52,959:INFO:Initializing create_model()
2024-04-23 15:08:52,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:08:52,959:INFO:Checking exceptions
2024-04-23 15:08:52,959:INFO:Importing libraries
2024-04-23 15:08:52,959:INFO:Copying training dataset
2024-04-23 15:08:52,964:INFO:Defining folds
2024-04-23 15:08:52,964:INFO:Declaring metric variables
2024-04-23 15:08:52,966:INFO:Importing untrained model
2024-04-23 15:08:52,968:INFO:Naive Bayes Imported successfully
2024-04-23 15:08:52,971:INFO:Cross validation set to False
2024-04-23 15:08:52,971:INFO:Fitting Model
2024-04-23 15:08:53,133:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:08:53,236:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:08:56,785:INFO:Initializing predict_model()
2024-04-23 15:08:56,785:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1)))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                                            var_smoothing=1e-09),
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537C540>)
2024-04-23 15:08:56,785:INFO:Checking exceptions
2024-04-23 15:08:56,785:INFO:Preloading libraries
2024-04-23 15:08:56,952:INFO:_display_container: 2
2024-04-23 15:08:56,952:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.09,
                                     var_smoothing=1e-09)
2024-04-23 15:08:56,952:INFO:create_model() successfully completed......................................
2024-04-23 15:08:57,030:INFO:SubProcess create_model() end ==================================
2024-04-23 15:08:57,030:INFO:Creating metrics dataframe
2024-04-23 15:08:57,037:INFO:Initializing Decision Tree Classifier
2024-04-23 15:08:57,037:INFO:Total runtime is 0.21737895409266156 minutes
2024-04-23 15:08:57,039:INFO:SubProcess create_model() called ==================================
2024-04-23 15:08:57,039:INFO:Initializing create_model()
2024-04-23 15:08:57,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:08:57,040:INFO:Checking exceptions
2024-04-23 15:08:57,040:INFO:Importing libraries
2024-04-23 15:08:57,040:INFO:Copying training dataset
2024-04-23 15:08:57,046:INFO:Defining folds
2024-04-23 15:08:57,047:INFO:Declaring metric variables
2024-04-23 15:08:57,048:INFO:Importing untrained model
2024-04-23 15:08:57,050:INFO:Decision Tree Classifier Imported successfully
2024-04-23 15:08:57,054:INFO:Cross validation set to False
2024-04-23 15:08:57,054:INFO:Fitting Model
2024-04-23 15:08:57,202:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:08:57,306:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:01,005:INFO:Initializing predict_model()
2024-04-23 15:09:01,005:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=8273,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537CEA0>)
2024-04-23 15:09:01,005:INFO:Checking exceptions
2024-04-23 15:09:01,005:INFO:Preloading libraries
2024-04-23 15:09:01,158:INFO:_display_container: 2
2024-04-23 15:09:01,159:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=8273,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.09,
                                     random_state=8273, splitter='best')
2024-04-23 15:09:01,159:INFO:create_model() successfully completed......................................
2024-04-23 15:09:01,229:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:01,229:INFO:Creating metrics dataframe
2024-04-23 15:09:01,240:INFO:Initializing SVM - Linear Kernel
2024-04-23 15:09:01,240:INFO:Total runtime is 0.28741576671600344 minutes
2024-04-23 15:09:01,242:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:01,243:INFO:Initializing create_model()
2024-04-23 15:09:01,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:01,243:INFO:Checking exceptions
2024-04-23 15:09:01,243:INFO:Importing libraries
2024-04-23 15:09:01,243:INFO:Copying training dataset
2024-04-23 15:09:01,248:INFO:Defining folds
2024-04-23 15:09:01,248:INFO:Declaring metric variables
2024-04-23 15:09:01,250:INFO:Importing untrained model
2024-04-23 15:09:01,252:INFO:SVM - Linear Kernel Imported successfully
2024-04-23 15:09:01,255:INFO:Cross validation set to False
2024-04-23 15:09:01,255:INFO:Fitting Model
2024-04-23 15:09:01,411:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:01,519:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:05,207:INFO:Initializing predict_model()
2024-04-23 15:09:05,207:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                               validation_fraction=0.1,
                                                                               verbose=0,
                                                                               warm_start=False),
                                                      early_stopping=False,
                                                      epsilon=0.1, eta0=0.001,
                                                      fit_intercept=True,
                                                      l1_ratio=0.15,
                                                      learning_rate='optimal',
                                                      loss='hinge',
                                                      max_iter=1000,
                                                      n_iter_no_change=5,
                                                      n_jobs=-1, penalty='l2',
                                                      power_t=0.5,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      shuffle=True, tol=0.001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537F6A0>)
2024-04-23 15:09:05,207:INFO:Checking exceptions
2024-04-23 15:09:05,207:INFO:Preloading libraries
2024-04-23 15:09:05,272:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:09:05,350:INFO:_display_container: 2
2024-04-23 15:09:05,351:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=827...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.09,
                                     random_state=8273, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2024-04-23 15:09:05,351:INFO:create_model() successfully completed......................................
2024-04-23 15:09:05,413:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:05,413:INFO:Creating metrics dataframe
2024-04-23 15:09:05,418:INFO:Initializing Ridge Classifier
2024-04-23 15:09:05,418:INFO:Total runtime is 0.3570636113484701 minutes
2024-04-23 15:09:05,420:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:05,420:INFO:Initializing create_model()
2024-04-23 15:09:05,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:05,420:INFO:Checking exceptions
2024-04-23 15:09:05,420:INFO:Importing libraries
2024-04-23 15:09:05,420:INFO:Copying training dataset
2024-04-23 15:09:05,425:INFO:Defining folds
2024-04-23 15:09:05,425:INFO:Declaring metric variables
2024-04-23 15:09:05,427:INFO:Importing untrained model
2024-04-23 15:09:05,429:INFO:Ridge Classifier Imported successfully
2024-04-23 15:09:05,432:INFO:Cross validation set to False
2024-04-23 15:09:05,432:INFO:Fitting Model
2024-04-23 15:09:05,578:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:05,680:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:09,236:INFO:Initializing predict_model()
2024-04-23 15:09:09,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(alpha=1.0,
                                                      class_weight=None,
                                                      classifier=RidgeClassifier(alpha=1.0,
                                                                                 class_weight=None,
                                                                                 copy_X=True,
                                                                                 fit_intercept=True,
                                                                                 max_iter=None,
                                                                                 positive=False,
                                                                                 random_state=8273,
                                                                                 solver='auto',
                                                                                 tol=0.0001),
                                                      copy_X=True,
                                                      fit_intercept=True,
                                                      max_iter=None,
                                                      positive=False,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      solver='auto',
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537EFC0>)
2024-04-23 15:09:09,236:INFO:Checking exceptions
2024-04-23 15:09:09,236:INFO:Preloading libraries
2024-04-23 15:09:09,371:INFO:_display_container: 2
2024-04-23 15:09:09,372:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=8273,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.09,
                                     random_state=8273, solver='auto',
                                     tol=0.0001)
2024-04-23 15:09:09,372:INFO:create_model() successfully completed......................................
2024-04-23 15:09:09,432:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:09,433:INFO:Creating metrics dataframe
2024-04-23 15:09:09,439:INFO:Initializing Random Forest Classifier
2024-04-23 15:09:09,439:INFO:Total runtime is 0.4240802685419719 minutes
2024-04-23 15:09:09,441:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:09,441:INFO:Initializing create_model()
2024-04-23 15:09:09,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:09,441:INFO:Checking exceptions
2024-04-23 15:09:09,441:INFO:Importing libraries
2024-04-23 15:09:09,441:INFO:Copying training dataset
2024-04-23 15:09:09,448:INFO:Defining folds
2024-04-23 15:09:09,448:INFO:Declaring metric variables
2024-04-23 15:09:09,450:INFO:Importing untrained model
2024-04-23 15:09:09,452:INFO:Random Forest Classifier Imported successfully
2024-04-23 15:09:09,455:INFO:Cross validation set to False
2024-04-23 15:09:09,455:INFO:Fitting Model
2024-04-23 15:09:09,600:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:09,702:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:13,624:INFO:Initializing predict_model()
2024-04-23 15:09:13,624:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537D580>)
2024-04-23 15:09:13,624:INFO:Checking exceptions
2024-04-23 15:09:13,624:INFO:Preloading libraries
2024-04-23 15:09:13,834:INFO:_display_container: 2
2024-04-23 15:09:13,834:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       mo...
                                                                       random_state=8273,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.09,
                                     random_state=8273, verbose=0,
                                     warm_start=False)
2024-04-23 15:09:13,834:INFO:create_model() successfully completed......................................
2024-04-23 15:09:13,904:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:13,904:INFO:Creating metrics dataframe
2024-04-23 15:09:13,919:INFO:Initializing Quadratic Discriminant Analysis
2024-04-23 15:09:13,920:INFO:Total runtime is 0.4987504045168559 minutes
2024-04-23 15:09:13,922:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:13,923:INFO:Initializing create_model()
2024-04-23 15:09:13,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:13,923:INFO:Checking exceptions
2024-04-23 15:09:13,923:INFO:Importing libraries
2024-04-23 15:09:13,923:INFO:Copying training dataset
2024-04-23 15:09:13,929:INFO:Defining folds
2024-04-23 15:09:13,929:INFO:Declaring metric variables
2024-04-23 15:09:13,931:INFO:Importing untrained model
2024-04-23 15:09:13,933:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-23 15:09:13,937:INFO:Cross validation set to False
2024-04-23 15:09:13,937:INFO:Fitting Model
2024-04-23 15:09:14,089:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:14,200:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:14,494:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-23 15:09:18,070:INFO:Initializing predict_model()
2024-04-23 15:09:18,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                                               reg_param=0.0,
                                                                                               store_covariance=False,
                                                                                               tol=0.0001),
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      reg_param=0.0,
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537F4C0>)
2024-04-23 15:09:18,070:INFO:Checking exceptions
2024-04-23 15:09:18,070:INFO:Preloading libraries
2024-04-23 15:09:18,245:INFO:_display_container: 2
2024-04-23 15:09:18,247:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.09,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2024-04-23 15:09:18,247:INFO:create_model() successfully completed......................................
2024-04-23 15:09:18,308:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:18,308:INFO:Creating metrics dataframe
2024-04-23 15:09:18,314:INFO:Initializing Ada Boost Classifier
2024-04-23 15:09:18,314:INFO:Total runtime is 0.5719960530598959 minutes
2024-04-23 15:09:18,317:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:18,317:INFO:Initializing create_model()
2024-04-23 15:09:18,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:18,317:INFO:Checking exceptions
2024-04-23 15:09:18,317:INFO:Importing libraries
2024-04-23 15:09:18,317:INFO:Copying training dataset
2024-04-23 15:09:18,322:INFO:Defining folds
2024-04-23 15:09:18,322:INFO:Declaring metric variables
2024-04-23 15:09:18,323:INFO:Importing untrained model
2024-04-23 15:09:18,326:INFO:Ada Boost Classifier Imported successfully
2024-04-23 15:09:18,330:INFO:Cross validation set to False
2024-04-23 15:09:18,330:INFO:Fitting Model
2024-04-23 15:09:18,491:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:18,597:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:18,745:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 15:09:23,129:INFO:Initializing predict_model()
2024-04-23 15:09:23,129:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                                      classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                                    estimator=None,
                                                                                    learning_rate=1.0,
                                                                                    n_estimators=50,
                                                                                    random_state=8273),
                                                      estimator=None,
                                                      learning_rate=1.0,
                                                      n_estimators=50,
                                                      probability_threshold=0.09,
                                                      random_state=8273))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537CE00>)
2024-04-23 15:09:23,129:INFO:Checking exceptions
2024-04-23 15:09:23,129:INFO:Preloading libraries
2024-04-23 15:09:23,441:INFO:_display_container: 2
2024-04-23 15:09:23,442:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8273),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8273)
2024-04-23 15:09:23,442:INFO:create_model() successfully completed......................................
2024-04-23 15:09:23,523:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:23,523:INFO:Creating metrics dataframe
2024-04-23 15:09:23,530:INFO:Initializing Gradient Boosting Classifier
2024-04-23 15:09:23,530:INFO:Total runtime is 0.6589148203531902 minutes
2024-04-23 15:09:23,533:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:23,533:INFO:Initializing create_model()
2024-04-23 15:09:23,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:23,533:INFO:Checking exceptions
2024-04-23 15:09:23,533:INFO:Importing libraries
2024-04-23 15:09:23,533:INFO:Copying training dataset
2024-04-23 15:09:23,538:INFO:Defining folds
2024-04-23 15:09:23,539:INFO:Declaring metric variables
2024-04-23 15:09:23,540:INFO:Importing untrained model
2024-04-23 15:09:23,542:INFO:Gradient Boosting Classifier Imported successfully
2024-04-23 15:09:23,546:INFO:Cross validation set to False
2024-04-23 15:09:23,547:INFO:Fitting Model
2024-04-23 15:09:23,702:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:23,818:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:30,444:INFO:Initializing predict_model()
2024-04-23 15:09:30,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537EFC0>)
2024-04-23 15:09:30,444:INFO:Checking exceptions
2024-04-23 15:09:30,445:INFO:Preloading libraries
2024-04-23 15:09:30,608:INFO:_display_container: 2
2024-04-23 15:09:30,610:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=8273, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 15:09:30,610:INFO:create_model() successfully completed......................................
2024-04-23 15:09:30,686:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:30,686:INFO:Creating metrics dataframe
2024-04-23 15:09:30,694:INFO:Initializing Linear Discriminant Analysis
2024-04-23 15:09:30,694:INFO:Total runtime is 0.7783278028170268 minutes
2024-04-23 15:09:30,698:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:30,698:INFO:Initializing create_model()
2024-04-23 15:09:30,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:30,698:INFO:Checking exceptions
2024-04-23 15:09:30,698:INFO:Importing libraries
2024-04-23 15:09:30,698:INFO:Copying training dataset
2024-04-23 15:09:30,703:INFO:Defining folds
2024-04-23 15:09:30,703:INFO:Declaring metric variables
2024-04-23 15:09:30,705:INFO:Importing untrained model
2024-04-23 15:09:30,706:INFO:Linear Discriminant Analysis Imported successfully
2024-04-23 15:09:30,710:INFO:Cross validation set to False
2024-04-23 15:09:30,710:INFO:Fitting Model
2024-04-23 15:09:30,869:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:30,979:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:34,878:INFO:Initializing predict_model()
2024-04-23 15:09:34,878:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                 CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                                            n_components=None,
                                                                                            priors=None,
                                                                                            shrinkage=None,
                                                                                            solver='svd',
                                                                                            store_covariance=False,
                                                                                            tol=0.0001),
                                                      covariance_estimator=None,
                                                      n_components=None,
                                                      priors=None,
                                                      probability_threshold=0.09,
                                                      shrinkage=None,
                                                      solver='svd',
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537E160>)
2024-04-23 15:09:34,878:INFO:Checking exceptions
2024-04-23 15:09:34,878:INFO:Preloading libraries
2024-04-23 15:09:35,023:INFO:_display_container: 2
2024-04-23 15:09:35,025:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.09, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2024-04-23 15:09:35,025:INFO:create_model() successfully completed......................................
2024-04-23 15:09:35,096:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:35,096:INFO:Creating metrics dataframe
2024-04-23 15:09:35,102:INFO:Initializing Extra Trees Classifier
2024-04-23 15:09:35,102:INFO:Total runtime is 0.851785691579183 minutes
2024-04-23 15:09:35,103:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:35,103:INFO:Initializing create_model()
2024-04-23 15:09:35,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:35,104:INFO:Checking exceptions
2024-04-23 15:09:35,104:INFO:Importing libraries
2024-04-23 15:09:35,104:INFO:Copying training dataset
2024-04-23 15:09:35,109:INFO:Defining folds
2024-04-23 15:09:35,109:INFO:Declaring metric variables
2024-04-23 15:09:35,112:INFO:Importing untrained model
2024-04-23 15:09:35,114:INFO:Extra Trees Classifier Imported successfully
2024-04-23 15:09:35,117:INFO:Cross validation set to False
2024-04-23 15:09:35,117:INFO:Fitting Model
2024-04-23 15:09:35,270:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:35,378:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:39,198:INFO:Initializing predict_model()
2024-04-23 15:09:39,198:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                      warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537D580>)
2024-04-23 15:09:39,198:INFO:Checking exceptions
2024-04-23 15:09:39,198:INFO:Preloading libraries
2024-04-23 15:09:39,393:INFO:_display_container: 2
2024-04-23 15:09:39,396:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     mo...
                                                                     random_state=8273,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None, n_estimators=100,
                                     n_jobs=-1, oob_score=False,
                                     probability_threshold=0.09,
                                     random_state=8273, verbose=0,
                                     warm_start=False)
2024-04-23 15:09:39,396:INFO:create_model() successfully completed......................................
2024-04-23 15:09:39,454:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:39,454:INFO:Creating metrics dataframe
2024-04-23 15:09:39,463:INFO:Initializing Light Gradient Boosting Machine
2024-04-23 15:09:39,463:INFO:Total runtime is 0.924477767944336 minutes
2024-04-23 15:09:39,466:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:39,466:INFO:Initializing create_model()
2024-04-23 15:09:39,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:39,467:INFO:Checking exceptions
2024-04-23 15:09:39,467:INFO:Importing libraries
2024-04-23 15:09:39,467:INFO:Copying training dataset
2024-04-23 15:09:39,472:INFO:Defining folds
2024-04-23 15:09:39,472:INFO:Declaring metric variables
2024-04-23 15:09:39,473:INFO:Importing untrained model
2024-04-23 15:09:39,478:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-23 15:09:39,482:INFO:Cross validation set to False
2024-04-23 15:09:39,482:INFO:Fitting Model
2024-04-23 15:09:39,640:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:39,753:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:39,943:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-04-23 15:09:39,944:INFO:[LightGBM] [Info] Number of positive: 1021, number of negative: 16226
2024-04-23 15:09:39,948:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002136 seconds.
2024-04-23 15:09:39,948:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-04-23 15:09:39,948:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-04-23 15:09:39,949:INFO:[LightGBM] [Info] Total Bins 307
2024-04-23 15:09:39,949:INFO:[LightGBM] [Info] Number of data points in the train set: 17247, number of used features: 105
2024-04-23 15:09:39,950:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.059199 -> initscore=-2.765832
2024-04-23 15:09:39,950:INFO:[LightGBM] [Info] Start training from score -2.765832
2024-04-23 15:09:43,645:INFO:Initializing predict_model()
2024-04-23 15:09:43,645:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                                                subsample_freq=0),
                                                      colsample_bytree=1.0,
                                                      importance_type='split',
                                                      learning_rate=0.1,
                                                      max_depth=-1,
                                                      min_child_samples=20,
                                                      min_child_weight=0.001,
                                                      min_split_gain=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1, num_leaves=31,
                                                      objective=None,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      reg_alpha=0.0,
                                                      reg_lambda=0.0,
                                                      subsample=1.0,
                                                      subsample_for_bin=200000,
                                                      subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537D4E0>)
2024-04-23 15:09:43,645:INFO:Checking exceptions
2024-04-23 15:09:43,645:INFO:Preloading libraries
2024-04-23 15:09:43,802:INFO:_display_container: 2
2024-04-23 15:09:43,804:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=8...
                                                               subsample_for_bin=200000,
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.09,
                                     random_state=8273, reg_alpha=0.0,
                                     reg_lambda=0.0, subsample=1.0,
                                     subsample_for_bin=200000,
                                     subsample_freq=0)
2024-04-23 15:09:43,804:INFO:create_model() successfully completed......................................
2024-04-23 15:09:43,863:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:43,863:INFO:Creating metrics dataframe
2024-04-23 15:09:43,871:INFO:Initializing Dummy Classifier
2024-04-23 15:09:43,871:INFO:Total runtime is 0.9979364434878032 minutes
2024-04-23 15:09:43,873:INFO:SubProcess create_model() called ==================================
2024-04-23 15:09:43,873:INFO:Initializing create_model()
2024-04-23 15:09:43,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC41CDED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:43,874:INFO:Checking exceptions
2024-04-23 15:09:43,874:INFO:Importing libraries
2024-04-23 15:09:43,874:INFO:Copying training dataset
2024-04-23 15:09:43,879:INFO:Defining folds
2024-04-23 15:09:43,879:INFO:Declaring metric variables
2024-04-23 15:09:43,881:INFO:Importing untrained model
2024-04-23 15:09:43,883:INFO:Dummy Classifier Imported successfully
2024-04-23 15:09:43,886:INFO:Cross validation set to False
2024-04-23 15:09:43,886:INFO:Fitting Model
2024-04-23 15:09:44,042:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:44,157:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:47,834:INFO:Initializing predict_model()
2024-04-23 15:09:47,834:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                                 random_state=8273,
                                                                                 strategy='prior'),
                                                      constant=None,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537D3A0>)
2024-04-23 15:09:47,834:INFO:Checking exceptions
2024-04-23 15:09:47,834:INFO:Preloading libraries
2024-04-23 15:09:47,899:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-23 15:09:47,970:INFO:_display_container: 2
2024-04-23 15:09:47,971:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=8273,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.09,
                                     random_state=8273, strategy='prior')
2024-04-23 15:09:47,971:INFO:create_model() successfully completed......................................
2024-04-23 15:09:48,039:INFO:SubProcess create_model() end ==================================
2024-04-23 15:09:48,039:INFO:Creating metrics dataframe
2024-04-23 15:09:48,046:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 15:09:48,051:INFO:Initializing create_model()
2024-04-23 15:09:48,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8273),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8273), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:09:48,051:INFO:Checking exceptions
2024-04-23 15:09:48,052:INFO:Importing libraries
2024-04-23 15:09:48,052:INFO:Copying training dataset
2024-04-23 15:09:48,057:INFO:Defining folds
2024-04-23 15:09:48,057:INFO:Declaring metric variables
2024-04-23 15:09:48,057:INFO:Importing untrained model
2024-04-23 15:09:48,057:INFO:Declaring custom model
2024-04-23 15:09:48,058:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 15:09:48,059:INFO:Cross validation set to False
2024-04-23 15:09:48,060:INFO:Fitting Model
2024-04-23 15:09:48,218:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:48,326:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:09:48,477:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-23 15:09:49,381:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8273),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8273)
2024-04-23 15:09:49,381:INFO:create_model() successfully completed......................................
2024-04-23 15:09:49,457:INFO:_master_model_container: 0
2024-04-23 15:09:49,457:INFO:_display_container: 2
2024-04-23 15:09:49,457:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=8273),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50,
                                     probability_threshold=0.09,
                                     random_state=8273)
2024-04-23 15:09:49,457:INFO:compare_models() successfully completed......................................
2024-04-23 15:10:05,201:INFO:Initializing compare_models()
2024-04-23 15:10:05,202:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, include=['gbc'], exclude=None, fold=None, round=4, cross_validation=False, sort=Recall, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.09, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, 'include': ['gbc'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Recall', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.09, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-23 15:10:05,202:INFO:Checking exceptions
2024-04-23 15:10:05,204:INFO:Preparing display monitor
2024-04-23 15:10:05,216:INFO:Initializing Gradient Boosting Classifier
2024-04-23 15:10:05,216:INFO:Total runtime is 0.0 minutes
2024-04-23 15:10:05,218:INFO:SubProcess create_model() called ==================================
2024-04-23 15:10:05,218:INFO:Initializing create_model()
2024-04-23 15:10:05,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016AC5136E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:10:05,218:INFO:Checking exceptions
2024-04-23 15:10:05,218:INFO:Importing libraries
2024-04-23 15:10:05,218:INFO:Copying training dataset
2024-04-23 15:10:05,223:INFO:Defining folds
2024-04-23 15:10:05,223:INFO:Declaring metric variables
2024-04-23 15:10:05,224:INFO:Importing untrained model
2024-04-23 15:10:05,226:INFO:Gradient Boosting Classifier Imported successfully
2024-04-23 15:10:05,228:INFO:Cross validation set to False
2024-04-23 15:10:05,228:INFO:Fitting Model
2024-04-23 15:10:05,397:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:10:05,512:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:10:11,955:INFO:Initializing predict_model()
2024-04-23 15:10:11,955:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['1-Kinder'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['1-Abschluss', '1-Abschluss in DE'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.09,
                                                      random_state=8273,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016AC537F380>)
2024-04-23 15:10:11,955:INFO:Checking exceptions
2024-04-23 15:10:11,955:INFO:Preloading libraries
2024-04-23 15:10:12,123:INFO:_display_container: 3
2024-04-23 15:10:12,125:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=8273, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 15:10:12,125:INFO:create_model() successfully completed......................................
2024-04-23 15:10:12,194:INFO:SubProcess create_model() end ==================================
2024-04-23 15:10:12,194:INFO:Creating metrics dataframe
2024-04-23 15:10:12,199:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-23 15:10:12,205:INFO:Initializing create_model()
2024-04-23 15:10:12,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=8273, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.09, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-23 15:10:12,205:INFO:Checking exceptions
2024-04-23 15:10:12,207:INFO:Importing libraries
2024-04-23 15:10:12,207:INFO:Copying training dataset
2024-04-23 15:10:12,212:INFO:Defining folds
2024-04-23 15:10:12,212:INFO:Declaring metric variables
2024-04-23 15:10:12,212:INFO:Importing untrained model
2024-04-23 15:10:12,212:INFO:Declaring custom model
2024-04-23 15:10:12,212:INFO:CustomProbabilityThresholdClassifier Imported successfully
2024-04-23 15:10:12,214:INFO:Cross validation set to False
2024-04-23 15:10:12,214:INFO:Fitting Model
2024-04-23 15:10:12,367:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:10:12,481:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\category_encoders\base_contrast_encoder.py:126: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)
  warnings.warn("Intercept column might not be added anymore in future releases (c.f. issue #370)",

2024-04-23 15:10:15,617:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=8273, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 15:10:15,617:INFO:create_model() successfully completed......................................
2024-04-23 15:10:15,699:INFO:_master_model_container: 0
2024-04-23 15:10:15,699:INFO:_display_container: 3
2024-04-23 15:10:15,700:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=8273, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2024-04-23 15:10:15,700:INFO:compare_models() successfully completed......................................
2024-04-23 15:10:19,287:INFO:Initializing plot_model()
2024-04-23 15:10:19,288:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016AC51382D0>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.09,
                                     random_state=8273, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-23 15:10:19,288:INFO:Checking exceptions
2024-04-23 15:10:19,292:INFO:Preloading libraries
2024-04-23 15:10:19,296:INFO:Copying training dataset
2024-04-23 15:10:19,296:INFO:Plot type: confusion_matrix
2024-04-23 15:10:19,413:INFO:Fitting Model
2024-04-23 15:10:19,413:WARNING:c:\Users\Migrando1\SofwarePackages\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2024-04-23 15:10:19,413:INFO:Scoring test/hold-out set
2024-04-23 15:10:19,495:INFO:Visual Rendered Successfully
2024-04-23 15:10:19,556:INFO:plot_model() successfully completed......................................
